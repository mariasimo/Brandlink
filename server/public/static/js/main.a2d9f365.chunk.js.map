{"version":3,"sources":["services/AuthService.js","components/layout/Hero.js","components/auth/Signup/Signup.js","services/ProjectService.js","components/project/Project.js","components/project/ProjectList.js","guards/PrivateRoute.js","components/landingPage/LandingPage.js","components/layout/Navbar.js","components/auth/Login/Login.js","components/auth/profile/Profile.js","components/layout/SideMenu.js","components/layout/BrandHeader.js","components/project/Content.js","components/utils/Dropdown.js","components/utils/TextEditor.js","components/layout/MainContent.js","components/project/NewProject.js","components/project/EditProject.js","components/brandPresets/ColorPalette.js","components/brandPresets/NewColor.js","components/brandPresets/TypeSet.js","components/utils/MyFontPicker.js","components/utils/AdobeFontsImporter.js","components/brandPresets/NewType.js","components/brandPresets/Assets.js","components/brandPresets/TextStyles.js","components/brandPresets/NewTextStyle.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","user","instance","post","then","res","Promise","resolve","data","catch","error","console","login","loggedInUser","get","message","edit","id","userData","put","upload","picture","logout","setActiveProject","projectData","path","this","axios","create","baseURL","process","withCredentials","Hero","className","class","to","Component","Signup","props","handleChange","e","target","name","value","setState","state","handleFormSubmit","preventDefault","history","setUser","authService","push","username","password","onSubmit","htmlFor","type","onChange","placeholder","required","React","ProjectService","fetchProjects","displayRows","projectId","displayProject","userId","createProject","project","deleteProject","delete","addColorToPalette","updateProjectParams","hexadecimal","colorId","getColorData","deleteColor","addTypeToTypeSet","fontFamily","deleteType","typeId","getGoogleFonts","uploadAsset","fileParams","log","uploadData","deleteAsset","assetId","addTextStyle","fontSize","fontWeight","lineHeight","letterSpacing","uppercase","styleId","getTextStyleData","createNewRow","rowParams","layout","deleteRow","rowId","addContent","slotIdx","fetchContent","insertSlot","content","addImageAsContent","Project","title","_id","onClick","ProjectList","updateProjects","projectService","projects","map","idx","key","setPath","PrivateRoute","component","activeProject","colorPalette","typeset","toggleMenu","menuIsOpen","redirectPath","addFontLinks","saveType","assets","addAsset","onDragStart","onDrop","textstyles","projectTitle","rest","render","pathname","LandingPage","src","alt","Navbar","role","aria-label","height","Fragment","style","backgroundImage","Login","handleLogin","undefined","Profile","handleUpload","FormData","append","files","secure_url","userUdated","SideMenu","children","BrandHeader","previousPage","url","subtitle","TextEditor","MainContent","match","params","rows","addNewRow","projectWithRowAdded","payload","addContentFront","order","err","addFontAsContent","file","loadingImg","document","createElement","setAttribute","loadingParent","querySelector","appendChild","imageURl","image","row","rowIdx","slots","slot","acceptedFiles","getRootProps","getInputProps","srcset","length","color","width","backgroundColor","href","NewProject","handleBlur","pathSuggestion","toLowerCase","replace","handleSubmit","onBlur","EditProject","location","ColorPalette","NewColor","colorData","filter","TypeSet","font","MyFontPicker","recordType","nextFont","family","limit","apiKey","activeFontFamily","AdobeFontsImporter","fonts","token","NewType","typeObj","source","Assets","asset","draggable","format","TextStyles","NewTextStyle","textstyleData","textStyle","textstyle","handleCheckbox","uppercaseValue","min","max","step","textTransform","App","toggleClass","hasOwnProperty","addFontsLinks","fetchUser","userHasAnActiveProject","link","head","updatedProject","removeChild","ev","dataTransfer","setData","fileId","getData","projectCreated","exact","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a2d9f365.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}`,\n      withCredentials: true    \n    })\n  }\n\n  signup = (user) => {\n    return this.instance.post('/signup', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  login = (user) => {\n    return this.instance.post('/login', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  loggedInUser = () => {\n    return this.instance.get('/loggedin')\n    .then(res =>  Promise.resolve(res.data))\n    .catch(\n      error => {\n        console.error({message:error})\n    })\n  }\n\n\n  edit = (id, userData) => {\n    return this.instance.put(`/edit/${id}`, userData)\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n\n  upload = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  logout = () => {\n    return this.instance.post('/logout')\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  setActiveProject = (projectData) => {\n    const {path, id} = projectData;\n    \n    return this.instance.put(`/edit/${id}`, {path})\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n}\n\nexport default AuthService","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class Hero extends Component {\n    render() {\n        return (\n            <div className='hero'>\n              <h2 className='title is-1'>Your brand one click away.</h2>\n              <p class=''>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut viverra\n                massa vitae sem dignissim porta. Nulla in odio in urna auctor eleifend.\n                Duis vitae rutrum quam.\n              </p>\n              <div class='is-grouped'>\n                <Link\n                  to='/signup'\n                  className='button is-rounded is-primary is-inverted is-medium'\n                >\n                  Signup\n                </Link>\n                <Link to='/login' className='button is-rounded is-primary is-medium'>\n                  Login\n                </Link>\n              </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport AuthService from '../../../services/AuthService';\nimport Hero from '../../layout/Hero';\n\nexport default class Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { history, setUser } = this.props;\n    this.authService.signup(this.state).then(\n      user => {\n        setUser(user);\n        // todo This should redirect me to the admin panel\n        history.push(`/panel/${user.username}`);\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <section className='section auth-section landing'>\n        <div className='container columns'>\n          <div className='column is-one-third'>\n            <Hero></Hero>\n          </div>\n\n          <div className='column is-two-third form-container'>\n            <h3 className='title'>Signup</h3>\n            <form onSubmit={this.handleFormSubmit}>\n              <div className='field'>\n                <label className='label' htmlFor='username'>\n                  Username:\n                </label>\n                <div className='control'>\n                  <input\n                    className='input'\n                    type='text'\n                    name='username'\n                    id='username'\n                    value={username}\n                    onChange={this.handleChange}\n                    placeholder=\"Username\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className='field'>\n                <label htmlFor='password' className='label'>\n                  Password:\n                </label>\n                <div className='control'>\n                  <input\n                    className='input'\n                    type='password'\n                    name='password'\n                    id='password'\n                    value={password}\n                    onChange={this.handleChange}\n                    placeholder=\"Password\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className='control'>\n                <input\n                  type='submit'\n                  className='button is-link'\n                  value='Create account'\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import axios from \"axios\";\n\nclass ProjectService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/project`,\n      withCredentials: true\n    });\n  }\n\n  fetchProjects = () => {\n    return this.instance\n      .get(\"/\")\n      .then(res => {\n        // let arrData = Object.keys(res.data).map(key => {\n        //   return res.data[key];\n        // });\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  displayRows = projectId => {\n    return this.instance.get(`/rows/${projectId}`)\n    .then(res =>  {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error));\n  }\n  \n  displayProject = userId => {\n    return this.instance.get(`/project/${userId}`)\n    .then(res =>  {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error));\n  }\n\n  // displayColorPalette = userId => {\n  //   return this.instance.get(`/colorPalette/${userId}`)\n  //   .then(res =>  {\n  //     return Promise.resolve(res.data)\n  //   })\n  //   .catch(error => console.error(error));\n  // }\n\n  createProject = project => {\n    return this.instance\n      .post(\"/new\", project)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deleteProject = projectId => {\n    return this.instance\n      .delete(`/${projectId}`)\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  addColorToPalette = updateProjectParams => {\n    const { name, hexadecimal, id, colorId } = updateProjectParams;\n    return this.instance\n      .put(`/color/${id}/${colorId}?`, { name, hexadecimal })\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  getColorData  = (colorId) => {\n    return this.instance.get(`/color/${colorId}?`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n\n  deleteColor = (colorId) => {\n    return this.instance.delete(`/color/${colorId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  addTypeToTypeSet = updateProjectParams => {\n    const { fontFamily, type, path } = updateProjectParams;\n    return this.instance\n      .put(`/type/${path}`, { fontFamily, type })\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  deleteType = (typeId) => {\n    return this.instance.delete(`/type/${typeId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  getGoogleFonts = () => {\n    return this.instance\n      .get(\"/getGoogleFonts\")\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  }\n\n  uploadAsset = (fileParams) => {\n    console.log(fileParams)\n    return this.instance.post(`/uploadAsset/${fileParams.path}`, fileParams.uploadData)\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n  deleteAsset = (assetId) => {\n    return this.instance.delete(`/assets/${assetId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  addTextStyle = updateProjectParams => {\n    const { fontFamily, fontSize, fontWeight, lineHeight, letterSpacing, uppercase, name, path, styleId } = updateProjectParams;\n    return this.instance\n      .put(`/textStyle/${path}/${styleId}?`, { fontFamily, fontSize, fontWeight, lineHeight, letterSpacing, uppercase, name })\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  getTextStyleData  = (styleId) => {\n    return this.instance.get(`/textstyle/${styleId}?`)\n    .then(res => {\n      console.log(res)\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  createNewRow = rowParams => {\n    const {layout, userId} = rowParams\n    return this.instance\n      .post(`/newRow/${userId}/`, {layout})\n      .then(res => {\n        return Promise.resolve(res.data)}\n      )\n      .catch(error => console.error(error));\n  };\n\n  deleteRow = (rowId) => {\n    return this.instance.delete(`/rows/${rowId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  addContent = rowParams => {\n    const {rowId, slotIdx, type} = rowParams\n    return this.instance.put(`/rows/${rowId}`, {type, slotIdx})\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n  }\n\n  fetchContent =  rowId => {\n    console.log(rowId)\n    // this.projectService.fetchContent(rowId)\n    return this.instance.get(`/content/${rowId}`)\n    .then(res =>  {\n      return Promise.resolve(res.data)  \n    })\n  }\n\n  insertSlot = (content,rowId) => {\n  \n    return this.instance.put(`/content/${rowId}`, content)\n    .then(res =>  {\n      return Promise.resolve(res.data)  \n    })\n  }\n\n  addImageAsContent = fileParams => {\n    console.log(fileParams)\n\n    return this.instance.post(`/rows/image`, fileParams.uploadData)\n    .then(res => {\n      console.log(res.data)\n      return Promise.resolve(res.data)\n    })\n  }\n\n\n  // uploadAsset = (fileParams) => {\n  //   console.log(fileParams)\n  //   return this.instance.post(`/uploadAsset/${fileParams.path}`, fileParams.uploadData)\n  //   .then(res => {\n  //     return Promise.resolve(res.data)\n  //   })\n  //   .catch(error => console.error(error))\n  // }\n}\n\nexport default ProjectService;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Project extends Component {\n    render() {\n\n        const { project } = this.props \n\n        return (\n            <div className=\"project-card card\">\n                <Link to={`/project/${project.path}`}><h2 className=\"title is-4 has-text-primary\">{project.title}</h2></Link>\n                <Link to={`/project/${project._id}/edit`} className=\"button is-small is-rounded\" onClick={() => {\n                    this.props.setActiveProject(project._id)\n                }}>Edit</Link>\n                <button className=\"button is-small is-rounded\" onClick={() => this.props.deleteProject(project)}>Delete</button>\n                {/* <button className=\"button is-small is-rounded\" onClick={() => this.props.setPath(project.path)}>SetPath to {project.path}</button> */}\n\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport { Link } from \"react-router-dom\";\nimport Project from \"./Project\";\n\nexport default class ProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      projects: null\n    };\n  }\n\n  componentDidMount() {\n    this.updateProjects();\n  }\n\n  updateProjects = () => {\n    this.projectService.fetchProjects().then(\n      projects => {\n        console.log(projects)\n        this.setState({ ...this.state, projects });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  // deleteProject = (project) => {\n  //   this.projectService.deleteProject(project.id).then(\n  //     () => {\n  //       this.updateProjects()\n  //     },\n  //     error => {\n  //       const { message } = error;\n  //       console.error(message);\n  //     }\n  //   );\n  // }\n\n  render() {\n    // const username = this.props.loggedInUser.username;\n    const { projects } = this.state;  \n\n    return (\n      <div>\n        <section className=\"section landing\">\n          <div className=\"columns\">\n            <div className=\"column is-one-third\">\n            <div className='hero'>\n              <h2 className='title is-1'>Welcome to your panel</h2>\n              <p class=''>\n                Here you can admin your projects or create new ones.\n              </p>\n      \n            </div>\n            </div>\n            <div className=\"column is-two-thirds projects-wrapper\">\n\n              {projects &&\n                projects.map((project, idx) => (\n                  <Project key={idx} project={project} \n                  deleteProject={(projectId) => this.props.deleteProject(project._id)} \n                  setPath={(path) => this.props.setPath(path)}\n                  setActiveProject={(projectId) => this.props.setActiveProject(project._id)}\n                  ></Project>\n                ))}\n\n              {!projects && (\n                <div>You dont have any projects yet</div>\n              )}\n\n              <Link to=\"/project/new\" className=\"project-card\">Create new project</Link>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nexport default function PrivateRoute({\n  component: Component,\n  user,\n  activeProject,\n  colorPalette,\n  typeset,\n  toggleMenu,\n  menuIsOpen,\n  addFontLinks,\n  redirectPath,\n  addColorToPalette,\n  saveType,\n  deleteColor,\n  deleteType,\n  assets,\n  addAsset,\n  onDragStart,\n  onDrop,\n  deleteAsset,\n  setActiveProject,\n  textstyles,\n  addTextStyle,\n  projectTitle,\n  createProject,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        {\n          if (user) {\n            return (\n              <Component\n                loggedInUser={user}\n                activeProject={activeProject}\n                toggleMenu={toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                addColorToPalette={addColorToPalette}\n                deleteColor={deleteColor}\n                deleteType={deleteType}\n                saveType={saveType}\n                assets={assets}\n                addAsset={addAsset}\n                deleteAsset={deleteAsset}\n                onDragStart={onDragStart}\n                onDrop={onDrop}\n                setActiveProject={setActiveProject}\n                textstyles={textstyles}\n                addTextStyle={addTextStyle}\n                projectTitle = {projectTitle}\n                createProject= {createProject}\n                {...props}\n              />\n            );\n          } else {\n            return <Redirect to={{ pathname: redirectPath }} />;\n          }\n        }\n      }}\n    />\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class LandingPage extends Component {\n  render() {\n    return (\n      <section className='section main-content landing'>\n        <div className='container columns'>\n          <div className='column is-one-third'>\n            {/* todo Here goes another component for the left para of the screen */}\n            <div className='hero'>\n              <h2 className='title is-1'>Your brand one click away.</h2>\n              <p class=''>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut\n                viverra massa vitae sem dignissim porta. Nulla in odio in urna\n                auctor eleifend. Duis vitae rutrum quam.\n              </p>\n              <div class=\"is-grouped\">\n              <Link to='/signup' className='button is-rounded is-primary is-inverted is-medium'>\n                Signup\n              </Link>\n              <Link to='/login' className='button is-rounded is-primary is-medium'>\n                Login\n              </Link>\n              </div>\n            </div>\n          </div>\n\n          <div className='column is-two-thirds'>\n            <img src='/landing-illustration.png' alt='' />\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../../services/AuthService';\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  render() {\n    const user = this.props.user;\n    console.log(this.props)\n\n    return (\n      <nav className='navbar' role='navigation' aria-label='main navigation'>\n        \n        <div className='navbar-brand'>\n            <Link to='/' className='navbar-item'>\n              <img\n              src={`${process.env.REACT_APP_URL}/logo.png`}\n              height='24'\n                alt='BrandLink'\n              ></img>\n            </Link>\n        </div>\n\n        <div id='navbarBasicExample' className='navbar-menu is-active'>\n          <div className='navbar-start'>\n            {user && \n              <Link to={`/panel/${user.username}`} className='back-projects-link navbar-item'>\n                <img src={`${process.env.REACT_APP_URL}/back.svg`}></img>\n                <span>Back to projects</span>\n              </Link>\n            }\n          </div>\n\n          <div className='navbar-end'>\n            <div className='navbar-item'>\n              <div className='buttons'>\n                {!user && (\n                  <React.Fragment>\n                    <Link to='/signup' className='button is-rounded is-primary is-outlined'>\n                      Signup\n                    </Link>\n                    <Link to='/login' className='button is-rounded is-primary is-outlined'>\n                      Login\n                    </Link>\n                  </React.Fragment>\n                )}\n                {user && (\n                  <React.Fragment>\n                    <Link\n                      to={`/panel/${user.username}`}\n                      className='navbar-item'\n                    >\n                      Admin Panel\n                    </Link>\n\n                    <Link to={`/profile/${user.id}`} className='navbar-item'>\n                      <div\n                        className='is-rounded profile-picture'\n                        style={{ backgroundImage: `url(${user.picture})` }}\n                      ></div>\n                      Hi, {user.username}\n                    </Link>\n\n                    <Link\n                      to='/'\n                      onClick={e => this.props.logout()}\n                      className='button is-rounded is-danger is-outlined'\n                    >\n                      Logout\n                    </Link>\n                  </React.Fragment>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport AuthService from '../../../services/AuthService';\nimport Hero from '../../layout/Hero';\nimport { Link } from 'react-router-dom';\n\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      picture: '',\n      projects: []\n    };\n    this.authService = new AuthService();\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleLogin = e => {\n    e.preventDefault();\n\n    const { history, setUser } = this.props;\n    this.authService.login(this.state).then(\n      user => {\n        if (user !== undefined) {\n          setUser(user);\n\n          // todo This should redirect me to the admin panel\n          history.push(`/panel/${user.username}`);\n        }\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <section className='section auth-section landing'>\n        <div className='container columns'>\n        <div className='column is-one-third'>\n          <Hero></Hero>\n        </div>\n\n\n          <div className='column is-two-third form-container'>\n            <h3 className='title'>Login</h3>\n            <form onSubmit={this.handleLogin}>\n              <div className='field'>\n                <label className='label' htmlFor='username'>\n                  Username:\n                </label>\n                <div className='control'>\n                  <input\n                    className='input'\n                    type='text'\n                    name='username'\n                    id='username'\n                    value={username}\n                    onChange={this.handleChange}\n                    placeholder=\"Username\"\n                  />\n                </div>\n              </div>\n              <div className='field'>\n                <label htmlFor='password' className='label'>\n                  Password:\n                </label>\n                <div className='control'>\n                  <input\n                    className='input'\n                    type='password'\n                    name='password'\n                    id='password'\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className='control'>\n                <input\n                  type='submit'\n                  className='button is-link is-rounded'\n                  value='Log in'\n                ></input>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport AuthService from '../../../services/AuthService';\n\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n\n    const { username, picture } = this.props.loggedInUser;\n\n    this.state = {\n      username: username,\n      picture: picture\n    };\n  }\n\n  handleUpload = e => {\n    const uploadData = new FormData();\n    const user = this.props.loggedInUser;\n    uploadData.append('picture', e.target.files[0]);\n\n    this.authService\n      .upload(uploadData)\n      .then(\n        data => {\n          return this.setState({ ...this.state, picture: data.secure_url });\n        },\n        error => {\n          console.error(error);\n        }\n      )\n      .then(() => {\n        return this.authService.edit(user.id, this.state);\n      })\n      .then(userUdated => console.log(userUdated));\n  };\n\n  render() {\n    const { username, picture } = this.state;\n    return (\n      <div className='column'>\n        <section className='section landing'>\n          <div className='columns'>\n            <div className='column is-one-third'>\n              <div className='hero'>\n                <h2 className='title is-3'>User details</h2>\n              \n                <p>\n                  Username: <span className='strong'>{username}</span>\n                  <button className='button is-small is-rounded'>\n                    Edit username\n                  </button>\n                </p>\n                <p>\n                  Password:\n                  <button className='button is-small is-rounded'>\n                    Edit password\n                  </button>\n                </p>\n              </div>\n            </div>\n            <div className='column is-two-thirds projects-wrapper'>\n              <div>\n                <div\n                  className='is-rounded profile-picture'\n                  style={{ backgroundImage: `url(${picture})` }}\n                ></div>\n\n                <input\n                  type='file'\n                  name='picture'\n                  onChange={this.handleUpload}\n                ></input>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nexport default class SideMenu extends Component {\n\n    render() {\n      const {user} = this.props\n        return (\n      <section className={`section side-menu ${this.props.menuIsOpen}`}>\n   \n          <Link to='/' className='navbar-item'>\n            <img\n              src={`${process.env.REACT_APP_URL}/logo.png`}\n              height='24'\n              alt='BrandLink'\n            ></img>\n          </Link>\n        \n\n            <button className=\"btn-side-menu remove-btn\" onClick={this.props.toggleMenu}>\n              <img src={`${process.env.REACT_APP_URL}/menu.svg`}></img>\n            </button>\n\n            {this.props.children}\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nexport default class BrandHeader extends Component {\n    \n    previousPage = () => {\n        let url = this.props.url;\n        return <Link to={this.props.history.push(url)}>Link</Link>\n    }\n\n    render() {\n    return (\n      <div className=\"side-menu-header\">\n        <button className=\"remove-btn back-link\" onClick={this.previousPage}>\n        <img src={`${process.env.REACT_APP_URL}/back.svg`}></img> \n        <span className=\"is-size-5 has-text-weight-medium\t\">Back</span>\n        </button>\n        {this.props.subtitle &&\n          <h3 className=\"subtitle is-5 has-text-weight-semibold\">{this.props.subtitle}</h3>\n        }\n        <h2 className=\"title is-2 has-text-weight-bold\">{this.props.title}</h2>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport class Content extends Component {\n  constructor(props){\n    super(props)\n  }\n\n  componentDidMount() {\n\n  }\n\n  render() {\n    const { path, slot }  = this.props\n    return (\n    <div>Generic content: {slot.order}\n\n      {!slot.colorPalette.length && \n      <p>You have no colors declared in your palette. <a href={`/project/${path}/edit/ColorPalette/new`}>Add one</a></p>}\n    \n      {slot.colorPalette.length && \n     slot.colorPalette.map((color, idx) => \n        <div className='color' key={idx}>\n        <div\n          className='circle-color'\n          style={{ backgroundColor: color.hexadecimal }}\n        ></div>\n        <span>{color.name}</span>\n        </div>)}\n    </div>\n    );\n  }\n}\n\nexport class Image extends Content {\n  render() {\n    return <img src={this.props.url} alt={this.props.name}></img>;\n  }\n}\n\nexport class TextField extends Content {\n  render() {\n    return (\n      // Hero goes my Dante component\n      <div>Dante component</div>\n    );\n  }\n}\n\nexport class ColorPalette extends Content {\n  render() {\n    const { colorPalette } = this.props;\n    return (\n      // Hero goes my Dante component\n      <React.Fragment>\n        {colorPalette.map(color => \n          <div className='color'>\n            <div\n              className='circle-color'\n              style={{ backgroundColor: color.hexadecimal }}\n            ></div>\n            <span>{color.name}</span>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class Dropdown extends Component {\n    render() {\n        const {row, slotIdx} = this.props\n        return (\n            <div className='dropdown is-hoverable'>\n                      <div className='dropdown-trigger'>\n                        <button\n                          className='button'\n                          aria-haspopup='true'\n                          aria-controls='dropdown-menu4'\n                        >\n                          <span>Add content</span>\n                          <span className='icon is-small'>\n                            <img\n                              src={`${process.env.REACT_APP_URL}/chevron-down.svg`}\n                            ></img>\n                          </span>\n                        </button>\n                      </div>\n                      <div\n                        className='dropdown-menu'\n                        id='dropdown-menu4'\n                        role='menu'\n                      >\n                        <div className='dropdown-content'>\n                          <div className='dropdown-item'>\n                            <div>\n                              <button\n                                onClick={this.addContent}\n                                className='button'\n                              >\n                                Text editor\n                              </button>\n                            </div>\n                            <div>\n                              <button\n                                onClick={() =>\n                                  this.props.addContent()\n                                }\n                                className='button'\n                              >\n                                Color Palette\n                              </button>\n                            </div>\n                            <div>\n                              <button\n                                onClick={this.addContent}\n                                className='button'\n                              >\n                                Image\n                              </button>\n                            </div>\n                            <div>\n                              <button\n                                onClick={this.addContent}\n                                className='button'\n                              >\n                                Typography display\n                              </button>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    \n        )\n    }\n}\n","import React, { Component } from 'react';\nimport Dante from \"Dante2\"\n\nexport default class TextEditor extends Component {\n    render() {\n        return (\n            <div>\n                <Dante></Dante>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport ProjectService from '../../services/ProjectService';\nimport { Content } from '../project/Content';\nimport Dropdown from '../utils/Dropdown';\nimport Dropzone from 'react-dropzone';\nimport TextEditor from '../utils/TextEditor';\n\nexport default class MainContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.projectService = new ProjectService();\n    this.loadingImg = '';\n    this.loadingParent = '';\n  }\n\n  displayRows = () => {\n    const { id } = this.props.match.params;\n\n    this.projectService.displayRows(id).then(rows => {\n      this.setState({\n        ...this.state,\n        rows: rows\n      }, () => {console.log(this.state.rows)})\n    });\n  };\n\n  addNewRow = layout => {\n    const userId = this.props.user.id;\n    this.projectService.createNewRow({ layout, userId }).then(\n      projectWithRowAdded => {\n        this.setState({\n          ...this.state,\n          rows: projectWithRowAdded.rows\n        });\n      },\n      error => console.log(error)\n    );\n  };\n\n  deleteRow = rowId => {\n    this.projectService.deleteRow(rowId).then(\n      project => {\n        this.displayRows();\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  addContent = (rowId, slotIdx, type) => {\n    this.projectService.addContent({ rowId, slotIdx, type }).then(payload => {\n      this.displayRows();\n    });\n  };\n\n  addContentFront = (rowId, slotIdx, type) => {\n    this.projectService.fetchContent(rowId)\n    .then( payload => {\n      let content = payload;\n\n      content[slotIdx] = {order: slotIdx, type: type};\n\n      this.projectService.insertSlot(content, rowId)\n      .then(payload => this.displayRows())\n      .catch(err=>console.log(err))\n    })\n  } \n\n  addFontAsContent = (rowId, slotIdx, type) => {\n    this.projectService\n      .addFontAsContent({ rowId, slotIdx, type })\n      .then(payload => {\n        console.log(payload);\n        // this.displayRows();\n      });\n  };\n\n  addImageAsContent = (file, rowId, slotIdx, type ) => {\n    this.loadingImg = document.createElement('img');\n    this.loadingImg.setAttribute('src', 'http://localhost:3000/loading.svg');\n    this.loadingParent = document.querySelector('.file-label');\n    this.loadingParent.appendChild(this.loadingImg);\n\n\n    const uploadData = new FormData();\n    uploadData.append('file', file[0]);\n    const { id } = this.props.match.params;\n\n    console.log(slotIdx)\n\n    this.projectService.addImageAsContent({uploadData, id})\n    .then(imageURl => {\n      let image = imageURl; \n      this.projectService.fetchContent(rowId)\n      .then(payload => {\n        let content = payload;\n        content[slotIdx] = {order: slotIdx, image: image, type: type};\n        // this.displayRows();\n        this.projectService.insertSlot(content, rowId)\n        .then(payload => {\n          console.log(payload)\n          this.displayRows()\n        })\n        .catch(err=>console.log(err))\n      })\n    })\n  };\n\n\n  // handleUpload = file => {\n  //   const uploadData = new FormData();\n  //   uploadData.append('file', file[0]);\n  //   const { path } = this.props.match.params;\n\n  //   this.props.addAsset({ uploadData, path });\n  // };\n\n\n  componentDidMount() {\n    this.displayRows();\n  }\n\n  render() {\n    const path = this.props.user.activeProject;\n    const { colorPalette, typeset, assets, textstyles } = this.props;\n    return (\n      <div\n        className={`main-content section is-paddingless\t ${this.props.menuIsOpen}`}\n      >\n        <section className='section rows-container is-paddingless\t'>\n          {this.state.rows &&\n            this.state.rows.map((row, rowIdx) => (\n              <div key={row._id} className='columns is-multiline is-marginless'>\n                {row.slots.map((slot, slotIdx) => (\n                  <div\n                    key={slotIdx}\n                    id={`slot-${rowIdx}-${slotIdx}`}\n                    className={`${row.layout} column row slot`}\n                  >\n                    {row.content[slotIdx].type && (\n                      <React.Fragment>\n                        {row.content[slotIdx].type === 'assets' && (\n                          <>\n                            {/* {assets && assets.length > 0 && ( */}\n                              <React.Fragment>\n                                <div className='assets-container content-container'>\n                                  {!row.content[slotIdx].image && (\n                                    <Dropzone\n                                    onDrop={(acceptedFiles) =>\n                                      this.addImageAsContent(acceptedFiles, row._id, slotIdx, \"assets\" )\n                                    }\n                                  >\n                                    {({ getRootProps, getInputProps }) => (\n                                      <section class='file-label'>\n                                        <div {...getRootProps()}>\n                                          <input {...getInputProps()} />\n                                          <p>\n                                            Drag 'n' drop some files here, or\n                                            click to select files\n                                          </p>\n                                        </div>\n                                      </section>\n                                    )}\n                                  </Dropzone>\n                                  )}\n                                  {row.content[slotIdx].image && (\n                                    <img src={row.content[slotIdx].image} alt=\"\" srcset=\"\"/>\n                                  )}\n                                </div>\n                              </React.Fragment>\n                             {/*)}*/}\n\n\n                            {/* {!assets.length && (\n                              <div class='content-container'>\n                                <div class='notification is-info'>\n                                  Add your first asset.{' '}\n                                  <a href={`/project/${path}/edit/assets`}>\n                                    New asset\n                                  </a>\n                                </div>\n                              </div>\n                            )} */}\n                          </>\n                        )}\n\n                        {row.content[slotIdx].type === 'colorPalette' && (\n                          <>\n                            {colorPalette && colorPalette.length > 0 && (\n                              <div className='color-container content-container'>\n                                {colorPalette.map((color, idx) => (\n                                  <div\n                                    className='color'\n                                    key={idx}\n                                    style={{\n                                      width: 100 / colorPalette.length + '%',\n                                      backgroundColor: color.hexadecimal\n                                    }}\n                                  >\n                                    <span class='color-name vertical-text'>\n                                      {color.name}\n                                    </span>\n                                  </div>\n                                ))}\n                              </div>\n                            )}\n\n                            {!colorPalette.length && (\n                              <div className='color-container content-container'>\n                                <div class='notification is-info'>\n                                  Add your first color.{' '}\n                                  <a\n                                    href={`/project/${path}/edit/colorPalette/new`}\n                                  >\n                                    New color\n                                  </a>\n                                </div>\n                              </div>\n                            )}\n                          </>\n                        )}\n                        {row.content[slotIdx].type === 'typeset' && (\n                          <>\n                            <div className='field has-addons'>\n                              {typeset && typeset.length > 0 && (\n                                <div className='typeset-container content-container'>\n                                  {typeset.map(type => (\n                                    // <p className='control'>\n                                    //   <button\n                                    //     className='button is-small'\n                                    //     onClick={slodIdx =>\n                                    //       this.addFontAsContent(\n                                    //         row._id,\n                                    //         slotIdx,\n                                    //         'typeset'\n                                    //       )\n                                    //     }\n                                    //     style={{ fontFamily: type.fontFamily }}\n                                    //   >\n                                    //     {type.fontFamily}\n                                    //   </button>\n                                    // </p>\n                                    <React.Fragment>\n                                      <div>{type.fontFamily}</div>\n                                      <div\n                                        style={{ fontFamily: type.fontFamily }}\n                                        className='is-size-3'\n                                      >\n                                        Aa Bb Cc Dd Ee Ff Gg Hh Ii Jj Kk Ll Mm\n                                        Nn Oo Pp Qq Rr Ss Tt Uu Vv Ww Xx Yy Zz\n                                        0123456789 !\"#$%&/()=?´¨@\n                                      </div>\n                                    </React.Fragment>\n                                  ))}\n                                </div>\n                              )}\n\n                              \n                            </div>\n\n                            {!typeset.length && (\n                              <div className='typeset-container content-container'>\n                                <div class='notification is-info'>\n                                  Add your first type.{' '}\n                                  <a href={`/project/${path}/edit/typeset`}>\n                                    New type\n                                  </a>\n                                </div>\n                              </div>\n                            )}\n                          </>\n                        )}\n\n\n                        {row.content[slotIdx].type === 'textedit' && (\n                          <div className=\"content-container textedit-container\">\n                            <TextEditor></TextEditor>\n                          </div>\n                        )}\n\n                        {row.content[slotIdx].type === 'textstyles' && (\n                          <>\n                            {textstyles && (\n                              <div className='type-container content-container'>\n                                {textstyles.map((style, idx) => (\n                                  <div\n                                    className='type'\n                                    key={idx}\n\n                                    style={{\n                                      fontFamily: style.fontFamily,\n                                      fontWeight: style.fontWeight,\n                                      fontSize: `${style.fontSize}rem`,\n                                      letterSpacing: `${style.letterSpacing}rem`,\n                                      lineHeight: style.lineHeight\n                                    }}\n                                  >\n                                      {style.name}\n                                  </div>\n                                ))}\n                              </div>\n                            )}\n                          </>\n                        )}\n\n                      </React.Fragment>\n                    )}\n\n                    \n                      {!row.content[slotIdx].type && (\n                        <React.Fragment>\n                        <div className='content-container'>\n                          <div className='field has-addons'>\n                            <p className='control'>\n                              <button\n                                className='button is-small'\n                                onClick = {() => this.addContentFront(row._id, slotIdx, 'colorPalette')}\n                              >\n                                Color Palette\n                              </button>\n                            </p>\n                            <p className='control'>\n                              <button\n                                className='button is-small'\n                                onClick = {() => this.addContentFront(row._id, slotIdx, 'typeset')}\n\n                              >\n                                Typography\n                              </button>\n                            </p>\n\n                            <p className='control'>\n                              <button\n                                className='button is-small'\n                                onClick = {() => this.addContentFront(row._id, slotIdx, 'assets')}\n\n                              >\n                                Image\n                              </button>\n                            </p>\n\n                            <p className='control'>\n                              <button\n                                className='button is-small'\n                                onClick = {() => this.addContentFront(row._id, slotIdx, 'textedit')}\n\n                              >\n                                TextEditor\n                              </button>\n                            </p>\n\n                            <p className='control'>\n                              <button\n                                className='button is-small'\n                                onClick = {() => this.addContentFront(row._id, slotIdx, 'textstyles')}\n\n                              >\n                                TextStyles\n                              </button>\n                            </p>\n                          </div>\n                        </div>\n                      </React.Fragment>\n                      )}\n                    \n                  </div>\n                ))}\n\n                <button\n                  className='close'\n                  onClick={() => this.deleteRow(row._id)}\n                >\n                  Cerrar\n                </button>\n              </div>\n            ))}\n\n          <div className='column is-full layout-btn-container'>\n            <a className='header subtitle is-4 is-primary'>Choose layout</a>\n            <div className='inner'>\n              <div\n                className='layout-btn'\n                onClick={() => this.addNewRow('is-full')}\n              >\n                <img src={`${process.env.REACT_APP_URL}/full.svg`}></img>\n                Full\n              </div>\n\n              <div\n                className='layout-btn'\n                onClick={() => this.addNewRow('is-half')}\n              >\n                <img src={`${process.env.REACT_APP_URL}/half.svg`}></img>\n                Half\n              </div>\n\n              <div\n                className='layout-btn'\n                onClick={() => this.addNewRow('is-one-third')}\n              >\n                <img src={`${process.env.REACT_APP_URL}/third.svg`}></img>\n                Third\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ProjectService from '../../services/ProjectService';\nimport SideMenu from '../layout/SideMenu';\nimport BrandHeader from '../layout/BrandHeader';\nimport MainContent from '../layout/MainContent';\n\nexport default class NewProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      //todo: add remaining fields\n      title: '',\n      path: '',\n      colorPalette: null\n    };\n  }\n\n  handleBlur = e => {\n    let pathSuggestion = e.target.value.toLowerCase().replace(/ /g, '-');\n    this.setState({ ...this.setState, path: pathSuggestion });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { title, path } = this.state;\n    const user = this.props.loggedInUser;\n    const { history } = this.props;\n    e.preventDefault();\n\n    this.props.createProject({ title, path, history });\n  };\n\n  render() {\n    const { title, path } = this.state;\n    const user = this.props.loggedInUser;\n\n    return (\n      <div class=\"new-project-section\">\n        <SideMenu\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n        >\n          <BrandHeader\n            title='New Project'\n            {...this.props}\n            url={`/panel/${user.username}`}\n          ></BrandHeader>\n\n          \n          <form onSubmit={this.handleSubmit}>\n            <div className='field'>\n              <label htmlFor='title' className='label'>\n                Title:\n              </label>\n              <div className='control'>\n                <input\n                  type='text'\n                  name='title'\n                  className='input'\n                  value={title}\n                  placeholder='Introduce the title for your project'\n                  onChange={this.handleChange}\n                  onBlur={this.handleBlur}\n                />\n              </div>\n            </div>\n\n            <div className='field'>\n              <label htmlFor='path' className='label'>\n                Path:\n              </label>\n              <div className='control'>\n                <input\n                  type='text'\n                  name='path'\n                  className='input'\n                  value={path}\n                  placeholder='Introduce the url for your project'\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className='control'>\n              <input\n                type='submit'\n                className='button is-link is-rounded'\n                value='Start project'\n              ></input>\n            </div>\n          </form>\n        </SideMenu>\n\n        <div\n          className={`main-content section ${this.props.menuIsOpen} new-project-main is-paddingless`}\n        >\n          <section className='section rows-container is-paddingless\t'>\n            <img src='/new-project.png' alt='New Project' />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport ProjectService from \"../../services/ProjectService\";\nimport MainContent from '../layout/MainContent';\n\nexport default class EditProject extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { colorPalette, typeset, assets, title} = this.props;\n    console.log(this.state, this.props)\n    return (\n      < >\n      <SideMenu\n      toggleMenu={this.props.toggleMenu}\n      menuIsOpen={this.props.menuIsOpen}\n      >   \n        <BrandHeader\n          title={this.props.projectTitle}\n          subtitle='Brand presets'\n          {...this.props}\n          url={`/panel/${this.props.loggedInUser.username}`}\n        ></BrandHeader>\n\n        <p>Let's begin! Start by adding some brand presets to your project</p>\n\n        <ul className='project-presets-list'>\n          <li>\n            <Link to={`${this.props.location.pathname}/typeset`}>\n              <h3 className='is-size-5 has-text-primary'>Typography</h3>\n            </Link>\n          </li>\n          <li>\n            <Link to={`${this.props.location.pathname}/textStyles`}>\n              <h3 className='is-size-5 has-text-primary'>Text Styles</h3>\n            </Link>\n          </li>\n          <li>\n            <Link to={`${this.props.location.pathname}/colorPalette`}>\n              <h3 className='is-size-5 has-text-primary'>Color Palette</h3>\n            </Link>\n          </li>\n          <li>\n            <Link to={`${this.props.location.pathname}/assets`}>\n              <h3 className='is-size-5 has-text-primary'>Assets</h3>\n            </Link>\n          </li>\n        </ul>\n      </SideMenu>\n      <MainContent \n          {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          user={this.props.loggedInUser}\n          assets={assets}\n        >\n          \n        </MainContent>\n        </ >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\nimport AuthService from \"../../services/AuthService\";\n\n\nexport default class ColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      colorPalette: null\n    };\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { colorPalette, typeset, assets } = this.props;\n    \n    return (\n      <>\n        <SideMenu\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n        >\n          <BrandHeader\n            title='Color Palette'\n            {...this.props}\n            url={`/project/${id}/edit`}\n          ></BrandHeader>\n\n          <div className='content'>\n            <div className='color-palette columns is-multiline'>\n              {colorPalette &&\n                colorPalette.map(color => (\n                  <div className='column is-full box' key={color._id}>\n                    <div className='color'>\n                      <div\n                        className='circle-color'\n                        style={{ backgroundColor: color.hexadecimal }}\n                      ></div>\n                      <span>{color.name}</span>\n                    </div>\n                    <div className='is-grouped'>\n                      <Link\n                        to={`/project/${id}/edit/colorPalette/new/${color._id}`}\n                        className='button is-rounded is-small is-success is-outlined'\n                      >\n                        Edit\n                      </Link>\n                      <button\n                        onClick={() => this.props.deleteColor(color._id)}\n                        className='button is-rounded is-small is-danger is-outlined'\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                ))}\n\n              {!colorPalette ||\n                (!colorPalette.length && (\n                  <div>\n                    You dont have any color swatch yet. Add your first now.\n                  </div>\n                ))}\n            </div>\n\n            <div className='control'>\n              <Link\n                to={`/project/${id}/edit/colorPalette/new`}\n                className='button is-link'\n              >\n                Add new color\n              </Link>\n            </div>\n          </div>\n        </SideMenu>\n        <MainContent\n          {...this.props}\n          colorPalette={colorPalette}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          user={this.props.loggedInUser}\n          typeset={typeset}\n          assets={assets}\n        >\n          \n        </MainContent>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport BrandHeader from \"../layout/BrandHeader\";\nimport SideMenu from \"../layout/SideMenu\";\nimport MainContent from \"../layout/MainContent\";\n\nexport default class NewColor extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      name: \"\",\n      hexadecimal: \"\",\n      colorPalette: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getColorData();\n  }\n\n  getColorData = () => {\n    const { colorId } = this.props.match.params;\n\n    if (colorId !== undefined) {\n      this.projectService.getColorData(colorId).then(\n        colorData => {\n          let color = colorData.colorPalette.filter(\n            color => color._id === colorId\n          );\n          this.setState({\n            ...this.state,\n            name: color[0].name,\n            hexadecimal: color[0].hexadecimal\n          });\n        },\n        error => {\n          const { message } = error;\n          console.error(message);\n        }\n      );\n    }\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, hexadecimal } = this.state;\n    const { id, colorId } = this.props.match.params;\n    const { history } = this.props;\n    this.props.addColorToPalette({name, hexadecimal, id, colorId, history})\n  };\n \n\n  render() {\n    const { name, hexadecimal } = this.state;\n    const { colorId, id } = this.props.match.params;\n    const { colorPalette, typeset, assets } = this.props;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n        {colorId && (\n          <BrandHeader\n            title=\"Edit color\"\n            subtitle=\"Color Palette\"\n            {...this.props}\n            url={`/project/${id}/edit/colorPalette`}\n          ></BrandHeader>\n        )}\n        {!colorId && (\n          <BrandHeader\n            title=\"New color\"\n            subtitle=\"Color Palette\"\n            {...this.props}\n            url={`/project/${id}/edit/colorPalette`}\n          ></BrandHeader>\n        )}\n\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"field\">\n            <label htmlFor=\"title\" className=\"label\">\n              Name:\n            </label>\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                className=\"input\"\n                value={name}\n                placeholder=\"Introduce the title for your project\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label htmlFor=\"path\" className=\"label\">\n              Hexadecimal:\n            </label>\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                name=\"hexadecimal\"\n                className=\"input\"\n                value={hexadecimal}\n                placeholder=\"Introduce the url for your project\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"control\">\n            {!colorId && (\n              <input\n                type=\"submit\"\n                className=\"button is-link\"\n                value=\"Save Color\"\n              ></input>\n            )}\n\n            {colorId && (\n              <input\n                type=\"submit\"\n                className=\"button is-link\"\n                value=\"Edit Color\"\n              ></input>\n            )}\n          </div>\n        </form>\n      </SideMenu>\n      <MainContent\n      {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          user={this.props.loggedInUser}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          assets={assets}\n      >\n          \n      </MainContent>\n      </ >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\n\nexport default class TypeSet extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      typeset: null\n    };\n  }\n\n  render() {\n    const { id , path} = this.props.match.params;\n    const { colorPalette, typeset, assets } = this.props;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n      <BrandHeader\n        title='Typography set'\n        {...this.props}\n        url={`/project/${id}/edit`}\n      ></BrandHeader>\n\n          <div className='type-set'>\n            <div className=\"content\">\n            {typeset &&\n              typeset.map(font => (\n                <div className='box' key={font._id}>\n                    <span style={{ fontFamily: font.fontFamily }}>\n                      {font.fontFamily}\n                    </span>\n                    <button\n                      onClick={() => this.props.deleteType(font._id)}\n                      className='button is-rounded is-small is-danger is-outlined'\n                    >\n                      Delete\n                    </button>                    \n                </div>\n              ))}\n            {!typeset || !typeset.length && \n              <div>You dont have any fonts yet. Add your first font now.</div>\n            }\n\n            </div>\n\n            <div className='field fonts-buttons is-group'>\n            <div className='google-fonts-button control'>\n              <Link\n                to={`/project/${id}/edit/typeSet/new/google-font?`}\n                className='button is-link'\n              >\n                Add Google Font\n              </Link>\n            </div>\n\n            <div className='adobe-fonts-button control'>\n              <Link\n                to={`/project/${id}/edit/typeSet/new/adobe-font?`}\n                className='button is-link'\n              >\n                Add Adobe Font\n              </Link>\n            </div>\n          </div>\n          </div>\n\n          \n      </SideMenu>\n      <MainContent\n      {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          user={this.props.loggedInUser}\n          assets={assets}\n        >\n          \n        </MainContent>\n        </ >\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport FontPicker from \"font-picker-react\";\n\nexport default class MyFontPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fontFamily: \"Open Sans\",\n      type : \"Google Fonts\"\n    };\n  }\n\n  recordType = nextFont => {\n    this.setState({\n      ...this.state,\n      fontFamily: nextFont.family,\n    });\n  };\n\n\n  render() {\n    // todo: .env not working on client side\n    // console.log(process.env.REACT_APP_GFONTS_KEY)\n    return (\n      <div className=\"font-picker\">\n\n        <FontPicker\n          limit=\"100\"\n          apiKey={process.env.REACT_APP_GFONTS_KEY}\n          activeFontFamily={this.state.fontFamily}\n          onChange={nextFont => this.recordType(nextFont)}\n        />\n\n        <div className=\"container is-fullhd preview-text\">\n          <div className=\"notification apply-font\">\n            The font will be applied to this text.\n          </div>\n        </div>\n\n        <button onClick={() => this.props.saveType(this.state)} className=\"button is-link\">Save Type</button>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\n\nexport default class AdobeFontsImporter extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      projectId: \"gnh6ghd\",\n      token: \"0bb2988cbd31ce44bda853c78df227e26a0d86c8\"\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const projectId = document.querySelector('input[name=\"projectId\"]').value;\n    const token = document.querySelector('input[name=\"token\"]').value;\n\n    this.projectService.getGoogleFonts()\n    .then(fonts => { \n      this.setState({\n        ...this.state,\n        ...fonts\n      })\n    },\n      error => console.error(error)\n    );\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\" className=\"label\">\n            Project Id:\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"projectId\"\n              value={this.state.projectId}\n              className=\"input\"\n              placeholder=\"Introduce the project id of your project\"\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"path\" className=\"label\">\n            Token:\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"password\"\n              name=\"token\"\n              value={this.state.token}\n              className=\"input\"\n              placeholder=\"Introduce the token for your Adobe Fonts account\"\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <input\n            type=\"submit\"\n            className=\"button is-link\"\n            value=\"Import fonts\"\n          ></input>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport MyFontPicker from \"../utils/MyFontPicker\";\nimport BrandHeader from \"../layout/BrandHeader\";\nimport AdobeFontsImporter from \"../utils/AdobeFontsImporter\";\nimport SideMenu from \"../layout/SideMenu\";\nimport MainContent from \"../layout/MainContent\";\n\nexport default class NewType extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n  }\n\n  saveType = typeObj => {\n    const { fontFamily, type } = typeObj;\n    const { path } = this.props.match.params;\n    const { history } = this.props;\n\n    this.props.saveType({fontFamily, type, path, history});\n  };\n\n  render() {\n    const { source, id } = this.props.match.params;\n    const { colorPalette, typeset, assets } = this.props;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n      <div className=\"content\">\n      {source === \"google-font\" && (\n          <>\n            <BrandHeader\n              title=\"Google Fonts\"\n              subtitle=\"Typeset\"\n              {...this.props}\n              url={`/project/${id}/edit/typeset`}\n            ></BrandHeader>\n            <MyFontPicker class=\"select\" saveType={typeObj => this.saveType(typeObj)} />\n          </>\n        )}\n\n        {source === \"adobe-font\" && (\n          <>\n            <BrandHeader\n              title=\"Adobe Fonts\"\n              subtitle=\"Typeset\"\n              {...this.props}\n              url={`/project/${id}/edit/typeset`}\n            ></BrandHeader>\n            <AdobeFontsImporter></AdobeFontsImporter>\n          </>\n        )}\n      </div>\n      </SideMenu>\n      <MainContent\n      {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          user={this.props.loggedInUser}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          assets={assets}\n        >\n          \n        </MainContent>\n      </ >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\n\nexport default class Assets extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      assets: null\n    };\n  }\n\n  handleUpload = file => {\n    const uploadData = new FormData();\n    uploadData.append('file', file[0]);\n    const { path } = this.props.match.params;\n\n    this.props.addAsset({ uploadData, path });\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const { colorPalette, typeset, assets } = this.props;\n\n    return (\n      <React.Fragment>\n        <SideMenu\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n        >\n          <BrandHeader\n            title='Assets Library'\n            {...this.props}\n            url={`/project/${id}/edit`}\n          ></BrandHeader>\n\n          <div>\n            <Dropzone\n              onDrop={acceptedFiles => this.handleUpload(acceptedFiles)}\n            >\n              {({ getRootProps, getInputProps }) => (\n                <section class='file-label'>\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <p>\n                      Drag 'n' drop some files here, or click to select files\n                    </p>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n            <p>File formats allowed: .png, .jpg, .pdf, .zip, .svg, .gif</p>\n\n            <div className='assets-list columns is-multiline'>\n              {assets &&\n                assets.map(asset => (\n                  <div\n                    key={asset._id}\n                    draggable\n                    className='draggable'\n                    onDragStart={e => this.props.onDragStart(e, asset._id)}\n                    onDrop={e => this.props.onDrop(e, asset._id)}\n                  >\n                    <figure className='column is-half'>\n                      <button\n                        onClick={() => this.props.deleteAsset(asset._id)}\n                        className='button is-rounded is-small is-danger is-outlined'\n                      >\n                        Delete\n                      </button>\n                      {(asset.format === 'png' ||\n                        asset.format === 'jpg' ||\n                        asset.format === 'svg' ||\n                        asset.format === 'gif') && (\n                        <span>\n                          <img src={asset.secure_url} alt='' />\n                        </span>\n                      )}\n                      {asset.format === 'pdf' && <p>esto es un pdf</p>}\n                      {asset.format === 'zip' && (\n                        <p className='box'>esto es un zip</p>\n                      )}\n                    </figure>\n                    {/* <div className=\"asset-name\" onClick={this.editName}>\n                        <a>{asset.name}</a>\n                        <input style={{display: 'none'}} type=\"text\" value={asset.name} onChange={this.editInputName(asset._id)}/>\n                      </div> */}\n                  </div>\n                ))}\n\n              {!assets && <div>You dont have any assets yet</div>}\n            </div>\n          </div>\n        </SideMenu>\n        <MainContent\n          {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          user={this.props.loggedInUser}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          assets={assets}\n          onDragStart={this.props.onDragStart}\n          \n        ></MainContent>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\n\nexport default class TextStyles extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      typeset: [],\n      textstyles: []\n    };\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { colorPalette, typeset, assets, textstyles } = this.props;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n        <BrandHeader\n          title='Text Styles'\n          {...this.props}\n          url={`/project/${id}/edit`}\n        ></BrandHeader>\n        \n        <div className='content'>\n          <div className='type-set columns is-multiline'>\n            {textstyles && \n            <p>This are some default styles you cant edit</p>}\n            {textstyles &&\n              textstyles.map(style => (\n                <div className='column is-full box' key={style._id}>\n                  <div className='element'>\n                    <span\n                      style={{\n                        fontFamily: style.fontFamily,\n                        fontWeight: style.fontWeight,\n                        fontSize: `${style.fontSize}rem`,\n                        letterSpacing: `${style.letterSpacing}rem`,\n                        lineHeight: style.lineHeight\n                      }}\n                    >\n                      {style.name}\n                    </span>\n                  </div>\n                  <div className='is-grouped'>\n                    <Link\n                      to={{\n                        pathname: `${this.props.location.pathname}/new/${style._id}`,\n                        state: this.state\n                      }}\n                      className='button is-rounded is-small is-success is-outlined'\n                    >\n                      Edit\n                    </Link>\n                  </div>\n                </div>\n              ))}\n\n            {!textstyles && <div>You dont have any text styles yet</div>}\n          </div>\n\n        </div>\n      </SideMenu>\n      <MainContent\n      {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          user={this.props.loggedInUser}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          assets={assets}\n        >\n          \n        </MainContent>\n        </ >\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport BrandHeader from \"../layout/BrandHeader\";\nimport SideMenu from \"../layout/SideMenu\";\nimport MainContent from \"../layout/MainContent\";\n\nexport default class NewTextStyle extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      textstyle: {},\n      typeset: []\n    };\n\n    this.uppercaseValue = \"none\";\n  }\n\n  componentDidMount() {\n    this.getTextStyleData();\n  }\n\n  getTextStyleData = () => {\n    const { styleId } = this.props.match.params;\n    console.log(styleId)\n\n    if (styleId !== undefined) {\n      this.projectService.getTextStyleData(styleId)\n      .then(textstyleData => {\n          console.log(textstyleData)\n          let textStyle = textstyleData.textstyles.filter(\n            style => style._id === styleId\n          );\n          \n          this.setState({\n            ...this.state,\n            textstyle: textStyle[0],\n            typeset : textstyleData.typeset\n          });\n        },\n        error => {\n          const { message } = error;\n          console.error(message);\n        }\n      );\n    }\n  };\n\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ \n      ...this.state,  textstyle : { ...this.state.textstyle, [name]: value }});\n  };\n\n  handleCheckbox = e => {\n    let uppercase = !this.state.uppercase;\n    this.setState({ ...this.state, uppercase: uppercase });\n    this.uppercaseValue = !this.state.uppercase ? \"uppercase\" : \"none\";\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { path, styleId } = this.props.match.params;\n    const { history } = this.props;\n    const textstyle = this.state.textstyle\n    this.props.addTextStyle({ textstyle, path, styleId, history })\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const {\n      name,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      lineHeight,\n      letterSpacing\n    } = this.state.textstyle;\n    const { colorPalette, typeset, assets, textstyle} = this.props;\n\n    console.log(this.props)\n    return (\n      < >\n      <SideMenu toggleMenu={this.props.toggleMenu} menuIsOpen={this.props.menuIsOpen}>\n            <BrandHeader\n                title={name}\n                subtitle=\"Text Styles\"\n                {...this.props}\n                url={`/project/${id}/edit/textStyles`}\n              ></BrandHeader>\n\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"field\">\n                  <label htmlFor=\"fontFamily\" className=\"label\">\n                    Font Family:\n                  </label>\n                  <div className=\"control\">\n                    {typeset && (\n                      <select\n                        className=\"select large\"\n                        name=\"fontFamily\"\n                        value={fontFamily}\n                        onChange={this.handleChange}\n                      >\n                        <option\n                          value=\"Select font family\"\n                        >\n                          Select a font family\n                        </option>\n                        {typeset.map((font, idx) => {\n                          return (\n                            <option key={idx} value={font.fontFamily}>\n                              {font.fontFamily}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    )}\n\n                    {!typeset && (\n                      <p>You haven't add any font to TypeSet yet. Go now</p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"fontWeight\" className=\"label\">\n                    Font Weight:\n                  </label>\n                  <div className=\"control\">\n                    <select\n                      className=\"select large\"\n                      name=\"fontWeight\"\n                      value={fontWeight}\n                      onChange={this.handleChange}\n                    >\n                      <option value=\"100\">Light</option>\n                      <option value=\"400\">Regular</option>\n                      <option value=\"500\">Semibold</option>\n                      <option value=\"600\">Bold</option>\n                      <option value=\"800\">Black</option>\n                    </select>\n\n                    {/* for this to work right i will new to now what font family is \n                    going to be in user, and retrieve the weights avaibable for it from Google\n                    Fonts or Adobe Fonts (or custom source, if i get to implement that) */}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"fontSize\" className=\"label\">\n                    Font Size:\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      type=\"range\"\n                      name=\"fontSize\"\n                      min=\"1\"\n                      max=\"12\"\n                      step=\"0.25\"\n                      value={fontSize}\n                      onChange={this.handleChange}\n                    />\n                    <span>{fontSize} rem</span>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"lineHeight\" className=\"label\">\n                    Line Height:\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      type=\"range\"\n                      name=\"lineHeight\"\n                      value={lineHeight}\n                      onChange={this.handleChange}\n                      min=\"0\"\n                      max=\"2\"\n                      step=\"0.1\"\n                    />\n                    <span>{lineHeight}</span>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"letterSpacing\" className=\"label\">\n                    Letter Spacing\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      type=\"range\"\n                      name=\"letterSpacing\"\n                      min=\"-0.25\"\n                      max=\"0.25\"\n                      step=\"0.1\"\n                      value={letterSpacing}\n                      onChange={this.handleChange}\n                    />\n                    <span>{letterSpacing} rem</span>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"uppercase\"\n                      onChange={this.handleCheckbox}\n                    />\n                    <span>Text to uppercase</span>\n                  </div>\n                </div>\n\n                <div className=\"preview-text box\">\n                  <p\n                    style={{\n                      fontFamily,\n                      fontSize: `${fontSize}rem`,\n                      fontWeight,\n                      lineHeight,\n                      letterSpacing: `${letterSpacing}rem`,\n                      textTransform: this.uppercaseValue\n                    }}\n                  >\n                    Lorem ipsum dolor sit amet consecteteur adipiscing elit\n                  </p>\n                </div>\n\n                <div className=\"control\">\n                  <input\n                    type=\"submit\"\n                    className=\"button is-link\"\n                    value=\"Save Text Style\"\n                  ></input>\n                </div>\n              </form>\n      </SideMenu>\n      <MainContent\n      {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          path={this.props.match.params.path}\n          user={this.props.loggedInUser}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          assets={assets}\n        >\n          \n        </MainContent>\n            </ >\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Switch, Route } from 'react-router-dom';\nimport AuthService from './services/AuthService';\nimport Signup from './components/auth/Signup/Signup';\nimport ProjectList from './components/project/ProjectList';\nimport PrivateRoute from './guards/PrivateRoute';\nimport { LandingPage } from './components/landingPage/LandingPage';\nimport Navbar from './components/layout/Navbar';\nimport Login from './components/auth/Login/Login';\nimport Profile from './components/auth/profile/Profile';\nimport NewProject from './components/project/NewProject';\nimport EditProject from './components/project/EditProject';\nimport ColorPalette from './components/brandPresets/ColorPalette';\nimport NewColor from './components/brandPresets/NewColor';\nimport TypeSet from './components/brandPresets/TypeSet';\nimport NewType from './components/brandPresets/NewType';\nimport ProjectService from './services/ProjectService';\nimport Assets from './components/brandPresets/Assets';\nimport TextStyles from './components/brandPresets/TextStyles';\nimport NewTextStyle from './components/brandPresets/NewTextStyle';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.projectService = new ProjectService();\n    this.state = {\n      user: null,\n      menuIsOpen: 'show',\n      file: \"\"\n    };\n    this.loadingImg = '';\n    this.loadingParent = '';\n  }\n\n  toggleMenu = () => {\n    let toggleClass = this.state.menuIsOpen === 'show' ? 'hide' : 'show';\n    this.setState({\n      ...this.state,\n      menuIsOpen: toggleClass\n    });\n  };\n\n  setUser = user => {\n    if (user === undefined || !user.hasOwnProperty('id')) return;\n\n    this.setState({\n      ...this.state,\n      user\n    });\n\n    if(this.state.user.activeProject) {\n    this.projectService.displayProject(user.id)\n    .then(project => {\n      this.setState({\n        ...this.state,\n        title:project.title,\n        colorPalette: project.colorPalette,\n        typeset: project.typeset,\n        assets: project.assets,\n        textstyles : project.textstyles,\n      })\n\n      this.addFontsLinks(this.state.typeset);\n    })\n    } else {\n      this.setState({\n        ...this.state,\n        user\n      });  \n    }\n  };\n\n  fetchUser = () => {\n    if (this.state.user === null) {\n      this.authService\n        .loggedInUser()\n        .then(user => {\n          if (user !== undefined) {\n            this.setUser(user);\n            this.displayProject(user.id)\n          }\n        })\n        .catch(error => {\n          this.setUser(false);\n        });\n    }\n  };\n\n  logout = () => {\n    this.authService\n      .logout()\n      .then(payload => {\n        this.setState({ ...this.state, user: null });\n      })\n      .catch(err => console.log(err));\n  };\n\n  setActiveProject = path => {\n    const { id } = this.state.user;\n    this.authService\n      .setActiveProject({ path, id })\n      .then(userHasAnActiveProject => {\n        this.setUser(userHasAnActiveProject);\n    });\n  };\n\n  addFontsLinks = typeset => {\n    typeset.map(type => {\n      const link = document.createElement(\"link\");\n      link.setAttribute(\n        \"href\",\n        `https://fonts.googleapis.com/css?family=${type.fontFamily.replace(\n          \" \",\n          \"+\"\n        )}&display=swap`\n      );\n      link.setAttribute(\"rel\", `stylesheet`);\n      document.head.appendChild(link);\n    })\n  };\n\n  deleteProject = (projectId) => {\n    this.projectService.deleteProject(projectId).then(\n      () => {\n        this.setUser(this.state.user);\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  }\n\n  addColorToPalette = ({ name, hexadecimal, id, colorId, history }) => {\n    this.projectService\n      .addColorToPalette({ name, hexadecimal, id, colorId })\n      .then(\n        updatedProject => {\n          this.setState({\n            ...this.state,\n            name: '',\n            hexadecimal: '',\n            colorPalette: updatedProject.colorPalette\n          });\n          history.push(`/project/${id}/edit/colorPalette`, {\n            state: this.state.colorPalette\n          });\n        },\n        error => console.error(error)\n      );\n  };\n\n  deleteColor = colorId => {\n    this.projectService.deleteColor(colorId).then(\n      project => {\n        this.setUser(this.state.user);\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  saveType = ({ fontFamily, type, path, history }) => {\n    this.projectService.addTypeToTypeSet({ fontFamily, type, path }).then(\n      updatedProject => {\n        this.setState({\n          ...this.state,\n          fontFamily: '',\n          typeset: updatedProject.typeset\n        });\n        history.push(`/project/${this.state.user.activeProject}/edit/typeSet`);\n      },\n      error => console.error(error)\n    );\n  };\n\n  deleteType = typeId => {\n    this.projectService.deleteType(typeId).then(\n      project => {\n        this.setUser(this.state.user);\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  addTextStyle = ({ textstyle, path, styleId, history}) => {\n      this.projectService\n      .addTextStyle({ ...textstyle, path, styleId, history })\n      .then(\n        () => {\n          this.setState({\n            ...this.state,\n            name: \"\",\n            fontFamily: \"\",\n            fontSize: 1,\n            fontWeight: null,\n            lineHeight: 1,\n            letterSpacing: 0,\n            uppercase: false\n          });\n          history.push(`/project/${this.state.user.activeProject}/edit/textStyles`);\n        },\n        error => console.error(error)\n      );\n  }\n\n  addAsset = ({ uploadData, path }) => {\n    this.loadingImg = document.createElement('img');\n    this.loadingImg.setAttribute('src', 'http://localhost:3000/loading.svg');\n    this.loadingParent = document.querySelector('.file-label');\n    this.loadingParent.appendChild(this.loadingImg);\n\n    this.projectService\n      .uploadAsset({ uploadData, path })\n      .then(() => {\n        this.setUser(this.state.user);\n        this.loadingParent.removeChild(this.loadingImg);\n      })\n      .catch(error => console.log(error));\n  };\n\n  deleteAsset = assetId => {\n    this.projectService.deleteAsset(assetId).then(\n      project => {\n        this.setUser(this.state.user);\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  onDragStart = (ev, id) => {\n    console.log('dragstart:', id);\n    ev.dataTransfer.setData('id', id);\n  };\n\n  onDrop = (ev , slotIdx) => {\n    let fileId = ev.dataTransfer.getData('id');\n    this.setState({ ...this.state, file: fileId });\n    \n    // console.log( fileId, slotIdx)\n  };\n\n\n  createProject = ({title, path, history}) => {\n    console.log({title, path, history})\n\n    this.projectService.createProject({ title, path }).then(\n      (projectCreated) => {\n        console.log(projectCreated)\n        this.setState({ ...this.state, title: '', path: '' });\n        history.push(`/project/${this.state.user.activeProject}/edit`);\n      },\n      error => console.error(error)\n    );\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    this.fetchUser();\n    const { user, menuIsOpen, colorPalette, typeset, assets, textstyles } = this.state;\n    const projectTitle = this.state.title\n\n    return (\n      <div className='App'>\n        {/* The navbar has to pass the username to the profile menu link */}\n        {/* I need to pass match (the props) so I cant redirect to home after logout*/}\n        <Navbar user={user} logout={this.logout}></Navbar>\n        <>\n          {user && (\n            <Switch>\n              <Route\n                exact\n                path='/login'\n                render={match => <Login {...match} setUser={this.setUser} />}\n              />\n              <Route\n                exact\n                path='/signup'\n                render={match => <Signup {...match} setUser={this.setUser} />}\n              />\n              <Route exact path='/' component={LandingPage} />\n\n              {/* This is a private route, as you have to be loggedin to access your admin panel */}\n              <PrivateRoute\n                exact\n                path='/profile/:id'\n                user={user}\n                redirectPath='/login'\n                component={Profile}\n              />\n\n              {/* <PrivateRoute exact path=\"/panel/:username\" user={user}  component={ProjectList}/> */}\n              <Route\n                exact\n                path='/panel/:username'\n                render={match => (\n                  <ProjectList\n                    {...match}\n                    setPath={this.setPath}\n                    setActiveProject={this.setActiveProject}\n                    deleteProject={this.deleteProject}\n                    setUser={this.setUser}\n                  />\n                )}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/new'\n                user={user}\n                component={NewProject}\n                toggleMenu={this.toggleMenu}\n                createProject={this.createProject}\n                menuIsOpen={menuIsOpen}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                projectTitle={projectTitle}\n                component={EditProject}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/colorPalette'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                deleteColor={this.deleteColor}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                component={ColorPalette}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/colorPalette/new/:colorId?'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                addColorToPalette={this.addColorToPalette}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                component={NewColor}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/typeset'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                deleteType={this.deleteType}\n                assets={assets}\n                typeset={typeset}\n                textstyles={textstyles}\n                component={TypeSet}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/typeset/new/:source?'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                colorPalette={colorPalette}\n                menuIsOpen={menuIsOpen}\n                typeset={typeset}\n                saveType={this.saveType}\n                assets={assets}\n                textstyles={textstyles}\n                component={NewType}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/assets'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                assets={assets}\n                addAsset={this.addAsset}\n                deleteAsset={this.deleteAsset}\n                onDragStart={this.onDragStart}\n                onDrop={this.onDrop}\n                file={this.state.file}\n                textstyles={textstyles}\n                component={Assets}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/textStyles'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                component={TextStyles}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/textStyles/new/:styleId?'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                addTextStyle={this.addTextStyle}\n                component={NewTextStyle}\n              />\n            </Switch>\n          )}\n\n          {!user && (\n            <Switch>\n              <Route\n                exact\n                path='/login'\n                render={match => <Login {...match} setUser={this.setUser} />}\n              />\n              <Route\n                exact\n                path='/signup'\n                render={match => <Signup {...match} setUser={this.setUser} />}\n              />\n              <Route exact path='/' component={LandingPage} />\n            </Switch>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n    <Router><App/></Router>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}