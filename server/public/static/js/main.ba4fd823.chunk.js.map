{"version":3,"sources":["services/AuthService.js","components/layout/Hero.js","components/auth/Signup/Signup.js","services/ProjectService.js","components/project/Project.js","components/project/ProjectList.js","guards/PrivateRoute.js","components/landingPage/LandingPage.js","components/layout/Navbar.js","components/auth/Login/Login.js","components/auth/profile/Profile.js","components/utils/MyModal.js","components/layout/SideMenu.js","components/layout/BrandHeader.js","components/project/NewProject.js","components/utils/TextEditor.js","components/layout/MainContent.js","components/utils/Dropdown.js","components/project/EditProject.js","components/brandPresets/ColorPalette.js","components/brandPresets/NewColor.js","components/brandPresets/TypeSet.js","components/utils/MyFontPicker.js","components/utils/AdobeFontsImporter.js","components/brandPresets/NewType.js","components/brandPresets/Assets.js","components/brandPresets/TextStyles.js","components/brandPresets/NewTextStyle.js","components/project/ReadProject.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","user","instance","post","then","res","Promise","resolve","data","catch","error","console","login","loggedInUser","get","message","edit","id","userData","put","upload","picture","logout","setActiveProject","projectData","path","this","axios","create","baseURL","process","withCredentials","Hero","className","class","to","Component","Signup","props","handleChange","e","target","name","value","setState","state","handleFormSubmit","preventDefault","history","setUser","authService","push","username","password","onSubmit","htmlFor","type","onChange","placeholder","required","React","ProjectService","shareMessage","email","projectId","log","fetchProjects","displayRows","displayProject","userId","createProject","project","deleteProject","delete","addColorToPalette","updateProjectParams","hexadecimal","colorId","getColorData","deleteColor","addTypeToTypeSet","fontFamily","deleteType","typeId","getGoogleFonts","uploadAsset","fileParams","uploadData","deleteAsset","assetId","addTextStyle","fontSize","fontWeight","lineHeight","letterSpacing","uppercase","styleId","getTextStyleData","createNewRow","rowParams","layout","deleteRow","rowId","addContent","slotIdx","addImageAsContent","addDownloadAsContent","fetchContent","insertSlot","content","Project","title","_id","onClick","ProjectList","updateProjects","projectService","projects","map","idx","key","setPath","PrivateRoute","component","activeProject","colorPalette","typeset","toggleMenu","menuIsOpen","addFontLinks","redirectPath","saveType","assets","addAsset","onDragStart","onDrop","textstyles","projectTitle","rest","render","LandingPage","Fragment","src","alt","height","Navbar","role","aria-label","style","backgroundImage","Login","handleLogin","undefined","Profile","handleUpload","FormData","append","files","secure_url","userUdated","customStyles","top","left","right","bottom","marginRight","minWidth","minHeight","display","alignItems","justifyContent","flexDirection","padding","transform","boxShadow","MyModal","modalIsOpen","openModal","bind","afterOpenModal","closeModal","isOpen","onAfterOpen","onRequestClose","contentLabel","sendMessage","method","aria-describedby","SideMenu","handleSubmit","document","getElementById","match","params","permissionToShare","children","BrandHeader","previousPage","url","subtitle","NewProject","handleBlur","pathSuggestion","toLowerCase","replace","onBlur","TextEditor","editorState","contentState","getCurrentContent","saveContent","handleKeyCommand","command","newState","RichUtils","onUnderlineClick","toggleInlineStyle","onToggleCode","toggleCode","window","localStorage","setItem","JSON","stringify","convertToRaw","getItem","EditorState","createWithContent","convertFromRaw","parse","createEmpty","MainContent","rows","addNewRow","projectWithRowAdded","payload","addContentFront","order","err","addFontAsContent","file","loadingImg","createElement","setAttribute","loadingParent","querySelector","appendChild","imageURl","image","assetObject","asset","permissionToEdit","row","rowIdx","slots","slot","acceptedFiles","getRootProps","getInputProps","length","color","width","backgroundColor","href","download","aria-haspopup","aria-controls","EditProject","location","pathname","ColorPalette","NewColor","colorData","filter","handleChangeComplete","hex","background","onChangeComplete","TypeSet","font","MyFontPicker","recordType","nextFont","family","limit","apiKey","activeFontFamily","AdobeFontsImporter","fonts","token","NewType","typeObj","source","Assets","draggable","format","TextStyles","NewTextStyle","textstyleData","textStyle","textstyle","handleCheckbox","uppercaseValue","min","max","step","textTransform","ReadProject","App","toggleClass","hasOwnProperty","addFontsLinks","fetchUser","userHasAnActiveProject","link","head","updatedProject","removeChild","ev","dataTransfer","setData","fileId","getData","projectCreated","response","msg","alert","resetForm","reset","exact","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba4fd823.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}`,\n      withCredentials: true    \n    })\n  }\n\n  signup = (user) => {\n    return this.instance.post('/signup', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  login = (user) => {\n    return this.instance.post('/login', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  loggedInUser = () => {\n    return this.instance.get('/loggedin')\n    .then(res =>  Promise.resolve(res.data))\n    .catch(\n      error => {\n        console.error({message:error})\n    })\n  }\n\n\n  edit = (id, userData) => {\n    return this.instance.put(`/edit/${id}`, userData)\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n\n  upload = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  logout = () => {\n    return this.instance.post('/logout')\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  setActiveProject = (projectData) => {\n    const {path, id} = projectData;\n    \n    return this.instance.put(`/edit/${id}`, {path})\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n}\n\nexport default AuthService","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\n\nexport default class Hero extends Component {\n    render() {\n        return (\n            <div className='hero'>\n              <h2 className='title is-1'>Your brand one click away.</h2>\n              <p class=''>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut viverra\n                massa vitae sem dignissim porta. Nulla in odio in urna auctor eleifend.\n                Duis vitae rutrum quam.\n              </p>\n              <div class='is-grouped'>\n                <Link\n                  to='/signup'\n                  className='button is-rounded is-primary is-inverted is-medium'\n                >\n                  Signup\n                </Link>\n                <Link to='/login' className='button is-rounded is-primary is-medium'>\n                  Login\n                </Link>\n              </div>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport AuthService from '../../../services/AuthService';\nimport Hero from '../../layout/Hero';\n\nexport default class Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { history, setUser } = this.props;\n    this.authService.signup(this.state).then(\n      user => {\n        setUser(user);\n        // todo This should redirect me to the admin panel\n        history.push(`/panel/${user.username}`);\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <section className='section auth-section landing'>\n        <div className='container columns'>\n          <div className='column is-one-third'>\n            <Hero></Hero>\n          </div>\n\n          <div className='column is-two-third form-container'>\n            <h3 className='title'>Signup</h3>\n            <form onSubmit={this.handleFormSubmit}>\n              <div className='field'>\n                <label className='label' htmlFor='username'>\n                  Username:\n                </label>\n                <div className='control'>\n                  <input\n                    className='input'\n                    type='text'\n                    name='username'\n                    id='username'\n                    value={username}\n                    onChange={this.handleChange}\n                    placeholder=\"Username\"\n                    required\n                  />\n                </div>\n              </div>\n              <div className='field'>\n                <label htmlFor='password' className='label'>\n                  Password:\n                </label>\n                <div className='control'>\n                  <input\n                    className='input'\n                    type='password'\n                    name='password'\n                    id='password'\n                    value={password}\n                    onChange={this.handleChange}\n                    placeholder=\"Password\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className='control'>\n                <input\n                  type='submit'\n                  className='button is-link'\n                  value='Create account'\n                />\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import axios from \"axios\";\n\nclass ProjectService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/project`,\n      withCredentials: true\n    });\n  }\n\n  shareMessage = data  => {\n    const  {email, projectId} = data;\n    console.log(email, projectId)\n    return this.instance\n    .post('/send-email', {email, projectId})\n    .then(res => {\n      console.log(res)\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));    \n  }\n\n\n  fetchProjects = () => {\n    return this.instance\n      .get(\"/\")\n      .then(res => {\n        // let arrData = Object.keys(res.data).map(key => {\n        //   return res.data[key];\n        // });\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  displayRows = projectId => {\n    return this.instance.get(`/rows/${projectId}`)\n    .then(res =>  {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error));\n  }\n  \n  displayProject = userId => {\n    return this.instance.get(`/project/${userId}`)\n    .then(res =>  {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error));\n  }\n\n  // displayColorPalette = userId => {\n  //   return this.instance.get(`/colorPalette/${userId}`)\n  //   .then(res =>  {\n  //     return Promise.resolve(res.data)\n  //   })\n  //   .catch(error => console.error(error));\n  // }\n\n  createProject = project => {\n    return this.instance\n      .post(\"/new\", project)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deleteProject = projectId => {\n    return this.instance\n      .delete(`/${projectId}`)\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  addColorToPalette = updateProjectParams => {\n    const { name, hexadecimal, id, colorId } = updateProjectParams;\n    return this.instance\n      .put(`/color/${id}/${colorId}?`, { name, hexadecimal })\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  getColorData  = (colorId) => {\n    return this.instance.get(`/color/${colorId}?`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n\n  deleteColor = (colorId) => {\n    return this.instance.delete(`/color/${colorId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  addTypeToTypeSet = updateProjectParams => {\n    const { fontFamily, type, path } = updateProjectParams;\n    return this.instance\n      .put(`/type/${path}`, { fontFamily, type })\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  deleteType = (typeId) => {\n    return this.instance.delete(`/type/${typeId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  getGoogleFonts = () => {\n    return this.instance\n      .get(\"/getGoogleFonts\")\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  }\n\n  uploadAsset = (fileParams) => {\n    console.log(fileParams)\n    return this.instance.post(`/uploadAsset/${fileParams.path}`, fileParams.uploadData)\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n  deleteAsset = (assetId) => {\n    return this.instance.delete(`/assets/${assetId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  addTextStyle = updateProjectParams => {\n    const { fontFamily, fontSize, fontWeight, lineHeight, letterSpacing, uppercase, name, path, styleId } = updateProjectParams;\n    return this.instance\n      .put(`/textStyle/${path}/${styleId}?`, { fontFamily, fontSize, fontWeight, lineHeight, letterSpacing, uppercase, name })\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  getTextStyleData  = (styleId) => {\n    return this.instance.get(`/textstyle/${styleId}?`)\n    .then(res => {\n      console.log(res)\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  createNewRow = rowParams => {\n    const {layout, userId} = rowParams\n    return this.instance\n      .post(`/newRow/${userId}/`, {layout})\n      .then(res => {\n        return Promise.resolve(res.data)}\n      )\n      .catch(error => console.error(error));\n  };\n\n  deleteRow = (rowId) => {\n    return this.instance.delete(`/rows/${rowId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  addContent = rowParams => {\n    const {rowId, slotIdx, type} = rowParams\n    return this.instance.put(`/rows/${rowId}`, {type, slotIdx})\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n  }\n\n  addImageAsContent = fileParams => {\n    return this.instance.post(`/rows/image`, fileParams.uploadData)\n    .then(res => {\n      console.log(res.data)\n      return Promise.resolve(res.data)\n    })\n  }\n\n\n  addDownloadAsContent = fileParams => {\n    return this.instance.post(`/rows/download`, fileParams.uploadData)\n    .then(res => {\n      console.log(res.data)\n      return Promise.resolve(res.data)\n    })\n  }\n\n  fetchContent =  rowId => {\n    console.log(rowId)\n    return this.instance.get(`/content/${rowId}`)\n    .then(res =>  {\n      return Promise.resolve(res.data)  \n    })\n  }\n\n  insertSlot = (content,rowId) => {\n    return this.instance.put(`/content/${rowId}`, content)\n    .then(res =>  {\n      return Promise.resolve(res.data)  \n    })\n  }\n\n}\n\nexport default ProjectService;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Project extends Component {\n    render() {\n\n        const { project } = this.props \n\n        return (\n            <div className=\"project-card card\">\n                <Link to={`/project/${project.path}`}><h2 className=\"title is-4 has-text-primary\">{project.title}</h2></Link>\n                <Link to={`/project/${project._id}/edit`} className=\"button is-small is-rounded\" onClick={() => {\n                    this.props.setActiveProject(project._id)\n                }}>Edit</Link>\n                <button className=\"button is-small is-rounded\" onClick={() => this.props.deleteProject(project)}>Delete</button>\n                {/* <button className=\"button is-small is-rounded\" onClick={() => this.props.setPath(project.path)}>SetPath to {project.path}</button> */}\n\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport { Link } from \"react-router-dom\";\nimport Project from \"./Project\";\n\nexport default class ProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      projects: null\n    };\n  }\n\n  componentDidMount() {\n    this.updateProjects();\n  }\n\n  updateProjects = () => {\n    this.projectService.fetchProjects().then(\n      projects => {\n        console.log(projects)\n        this.setState({ ...this.state, projects });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  deleteProject = (project) => {\n    console.log(project)\n    this.projectService.deleteProject(project).then(\n      () => {\n        this.updateProjects()\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  }\n\n  render() {\n    // const username = this.props.loggedInUser.username;\n    const { projects } = this.state;  \n\n    return (\n      <div>\n        <section className=\"section admin-panel\">\n          <div className=\"container\">\n          <div className=\"columns\">\n            <div className=\"column is-one-third\">\n            <div className='hero'>\n              <h2 className='title is-1'>Welcome to your panel</h2>\n              <p class=''>\n                Here you can admin your projects or create new ones.\n              </p>\n      \n            </div>\n            </div>\n            <div className=\"column is-two-thirds projects-wrapper\">\n\n              {projects &&\n                projects.map((project, idx) => (\n                  <Project key={idx} project={project} \n                  deleteProject={(projectId) => this.deleteProject(project._id)} \n                  setPath={(path) => this.props.setPath(path)}\n                  setActiveProject={(projectId) => this.props.setActiveProject(project._id)}\n                  ></Project>\n                ))}\n\n              {!projects && (\n                <div>You dont have any projects yet</div>\n              )}\n\n              <Link to=\"/project/new\" className=\"project-card\">Create new project</Link>\n            </div>\n          </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nexport default function PrivateRoute({\n  component: Component,\n  user,\n  activeProject,\n  colorPalette,\n  typeset,\n  toggleMenu,\n  menuIsOpen,\n  addFontLinks,\n  redirectPath,\n  addColorToPalette,\n  saveType,\n  deleteColor,\n  deleteType,\n  assets,\n  addAsset,\n  onDragStart,\n  onDrop,\n  deleteAsset,\n  setActiveProject,\n  textstyles,\n  addTextStyle,\n  projectTitle,\n  createProject,\n  shareMessage,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n          if (user) {\n            return (\n              <Component\n                loggedInUser={user}\n                activeProject={activeProject}\n                toggleMenu={toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                addColorToPalette={addColorToPalette}\n                deleteColor={deleteColor}\n                deleteType={deleteType}\n                saveType={saveType}\n                assets={assets}\n                addAsset={addAsset}\n                deleteAsset={deleteAsset}\n                onDragStart={onDragStart}\n                onDrop={onDrop}\n                setActiveProject={setActiveProject}\n                textstyles={textstyles}\n                addTextStyle={addTextStyle}\n                projectTitle = {projectTitle}\n                createProject= {createProject}\n                shareMessage={shareMessage}\n                {...props}\n              />\n            );\n          } else {\n            return <Redirect to=\"/\"/>;\n          }\n      }}\n    />\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class LandingPage extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <main className=\"landing-page\">\n        <section className='section main-content hero parallax'>\n        <div className='container columns'>\n          <div className='column img'>\n            {/* todo Here goes another component for the left para of the screen */}\n            <div>\n              <h1 className='title is-1'>Brand guidelines always on point.</h1>\n              <p>\n              BrandLink help designers to create and mantain neat, synced and always up-to-date brand guidelines they can share with their clients.  \n              </p>\n              <div className=\"is-grouped\">\n              <Link to='/signup' className='button is-rounded is-primary is-inverted is-medium'>\n                Signup\n              </Link>\n              <Link to='/login' className='button is-rounded is-primary is-medium'>\n                Login\n              </Link>\n              </div>\n            </div>\n          </div>\n\n          <div className='column is-three-fifths'>\n            <img src='/landing-hero-illustration.png' alt=''/>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"section is-paddingless blocks\">\n          {/* Block 1 */}\n          <div className=\"columns block block-1\">\n            <div className=\"column is-half text\">\n              <h2 className=\"title is-3\">What are brand guidelines and why are important?</h2>\n              <p>Brand guidelines are a document of great importance for both designers and their clients. For the designer, summarizes the decisions he took at the branding stage, explaning graphics, rules, usage and values that form the brand. For clients, its a key reference for mantain brand looks, consistency and flexibility across teams, spaces and time.</p>\n            </div>\n            <div className=\"column is-half img\">\n              <img src='/landing-block-1.png' alt=''/>\n            </div>\n          </div>\n\n          {/* Block 2 */}\n          <div className=\"columns block block-2\">\n            <div className=\"column is-half img\">\n              <img src='/landing-block-2.png' alt=''/>\n            </div>\n            <div className=\"column is-half text\">\n              <h2 className=\"title is-3\">What can we do to make better brand guidelines?</h2>\n              <p>Very often, the hard work that goes into create a brand guideline its lost because it is a static document (usually a PDF), and client forgets about it, losses it or it simply gets outdated. This is a loss for designers, that sees its works misused, and clients, that lose value for their brands.</p>\n            </div>\n          </div>\n\n          {/* Block 3 */}\n          <div className=\"columns block block-3\">\n            <div className=\"column is-half text\">\n              <h2 className=\"title is-3\">A tool to deliver brand guidelines online</h2>\n              <p>We have created BrandLink as a solution for the problems inherent to brand guidelines. A dedicated format for visual identities, where designers can design, deliver and mantaioner brand guidelines that clients can reference, used and share very easily.</p>\n            </div>\n            <div className=\"column is-half img\">\n              <img src='/landing-block-3.png' alt=''/>\n            </div>\n          </div>\n\n      </section>\n      <section className=\"parallax bg-image\">\n      <section className=\"section features\">\n        <div className=\"container\">\n          <h2 className=\"title is-3\">Learn about Brandlink features and values</h2>\n          <div className=\"features-content\">\n            <div className=\"feature\">\n              <img src=\"/feat-no-coding.svg\" alt=\"No coding required\"/>\n              <h3 className=\"title is-5\">No coding required</h3>\n              <p>An easy to-use-editor where you can add all the assets and display them on a grid without coding.</p>\n            </div>\n            <div className=\"feature\">\n              <img src=\"/feat-sharing.svg\" alt=\"Share with clients\"/>\n              <h3 className=\"title is-5\">Share with clients</h3>\n              <p>Create and edit your project. Once your ready, share with your client just by sending the link.</p>\n            </div>\n            <div className=\"feature\">\n              <img src=\"/feat-synced.svg\" alt=\"Always synced and updated\"/>\n              <h3 className=\"title is-5\">Always synced and updated</h3>\n              <p>Go back to a project anytime for maintenance. Changes are instantlly accesible for your client.</p>\n            </div>\n            <div className=\"feature\">\n              <img src=\"/feat-assets.svg\" alt=\"Everything you need\"/>\n              <h3 className=\"title is-5\">Everything you need</h3>\n              <p>Add custom fonts, color palette, images and text to design a brand guideline that speaks for itself.</p>\n            </div>\n            <div className=\"feature\">\n              <img src=\"/feat-centralized.svg\" alt=\"A centralized online space\"/>\n              <h3 className=\"title is-5\">A centralized online space</h3>\n              <p>Unify your brand guidelines in one place. Keep together your projects with the right access for everyone.</p>\n            </div>\n            <div className=\"feature\">\n              <img src=\"/feat-downloadable.svg\" alt=\"Downloadable assets\"/>\n              <h3 className=\"title is-5\">Downloadable assets</h3>\n              <p>Never email a logo again. Clients and partners can download logos, vectors and other files.</p>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"banner\">\n        <div className=\"container\">\n         <div className=\"banner-content\">\n            <img src=\"/logo-line.svg\" alt=\"Logo\"/>\n            <h2 className=\"title is-3\">Sign up and start today</h2>\n            <p>Join us and make your first BrandLink today.</p>\n            <Link to='/signup' className='button is-rounded is-primary is-inverted is-medium'>\n              Create an account\n            </Link>\n         </div>\n        </div>\n      </section>\n      </section>\n      </main>\n      <footer className=\"landing-page-footer\">\n        <div className=\"container\">\n            <Link to='/' className='navbar-item'>\n              <img\n              src={`${process.env.REACT_APP_URL}/logo.svg`}\n              height='24'\n                alt='BrandLink'\n              ></img>\n            </Link>\n            <p className=\"small\">Created with hope and fear at Ironhack, 2019</p>\n        </div>\n      </footer>\n      </React.Fragment>  \n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../../services/AuthService';\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  render() {\n    const user = this.props.user;\n\n    return (\n      <nav className='navbar' role='navigation' aria-label='main navigation'>\n        \n        <div className='navbar-brand'>\n            <Link to='/' className='navbar-item'>\n              <img\n              src={`${process.env.REACT_APP_URL}/logo.svg`}\n              height='24'\n                alt='BrandLink'\n              ></img>\n            </Link>\n        </div>\n\n        <div id='navbarBasicExample' className='navbar-menu is-active'>\n          <div className='navbar-start'>\n            {user && \n              <Link to={`/panel/${user.username}`} className='back-projects-link navbar-item'>\n                <img src={`${process.env.REACT_APP_URL}/back.svg`} alt=\"go back\"></img>\n                <span>Back to projects</span>\n              </Link>\n            }\n          </div>\n\n          <div className='navbar-end'>\n            <div className='navbar-item'>\n              <div className='buttons'>\n                {!user && (\n                  <React.Fragment>\n                    <Link to='/signup' className='button is-rounded is-primary is-outlined'>\n                      Signup\n                    </Link>\n                    <Link to='/login' className='button is-rounded is-primary is-outlined'>\n                      Login\n                    </Link>\n                  </React.Fragment>\n                )}\n                {user && (\n                  <React.Fragment>\n                    <Link\n                      to={`/panel/${user.username}`}\n                      className='navbar-item'\n                    >\n                      Admin Panel\n                    </Link>\n\n                    <Link to={`/profile/${user.id}`} className='navbar-item'>\n                      <div\n                        className='is-rounded profile-picture'\n                        style={{ backgroundImage: `url(${user.picture})` }}\n                      ></div>\n                      Hi, {user.username}\n                    </Link>\n\n                    <Link\n                      to='/'\n                      onClick={e => this.props.logout()}\n                      className='button is-rounded is-danger is-outlined'\n                    >\n                      Logout\n                    </Link>\n                  </React.Fragment>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\nimport AuthService from '../../../services/AuthService';\nimport Hero from '../../layout/Hero';\n// import { Link } from 'react-router-dom';\n\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      picture: '',\n      projects: []\n    };\n    this.authService = new AuthService();\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleLogin = e => {\n    e.preventDefault();\n\n    const { history, setUser } = this.props;\n    this.authService.login(this.state).then(\n      user => {\n        if (user !== undefined) {\n          setUser(user);\n\n          // todo This should redirect me to the admin panel\n          history.push(`/panel/${user.username}`);\n        }\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <section className='section auth-section landing'>\n        <div className='container columns'>\n        <div className='column is-one-third'>\n          <Hero></Hero>\n        </div>\n\n\n          <div className='column is-two-third form-container'>\n            <h3 className='title'>Login</h3>\n            <form onSubmit={this.handleLogin}>\n              <div className='field'>\n                <label className='label' htmlFor='username'>\n                  Username:\n                </label>\n                <div className='control'>\n                  <input\n                    className='input'\n                    type='text'\n                    name='username'\n                    id='username'\n                    value={username}\n                    onChange={this.handleChange}\n                    placeholder=\"Username\"\n                  />\n                </div>\n              </div>\n              <div className='field'>\n                <label htmlFor='password' className='label'>\n                  Password:\n                </label>\n                <div className='control'>\n                  <input\n                    className='input'\n                    type='password'\n                    name='password'\n                    id='password'\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              </div>\n\n              <div className='control'>\n                <input\n                  type='submit'\n                  className='button is-link is-rounded'\n                  value='Log in'\n                ></input>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport AuthService from '../../../services/AuthService';\n\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n\n    const { username, picture } = this.props.loggedInUser;\n\n    this.state = {\n      username: username,\n      picture: picture\n    };\n  }\n\n  handleUpload = e => {\n    const uploadData = new FormData();\n    const user = this.props.loggedInUser;\n    uploadData.append('picture', e.target.files[0]);\n\n    this.authService\n      .upload(uploadData)\n      .then(\n        data => {\n          return this.setState({ ...this.state, picture: data.secure_url });\n        },\n        error => {\n          console.error(error);\n        }\n      )\n      .then(() => {\n        return this.authService.edit(user.id, this.state);\n      })\n      .then(userUdated => console.log(userUdated));\n  };\n\n  render() {\n    const { username, picture } = this.state;\n    return (\n      <div className='column'>\n        <section className='section landing'>\n          <div className='columns'>\n            <div className='column is-one-third'>\n              <div className='hero'>\n                <h2 className='title is-3'>User details</h2>\n              \n                <p>\n                  Username: <span className='strong'>{username}</span>\n                  <button className='button is-small is-rounded'>\n                    Edit username\n                  </button>\n                </p>\n                <p>\n                  Password:\n                  <button className='button is-small is-rounded'>\n                    Edit password\n                  </button>\n                </p>\n              </div>\n            </div>\n            <div className='column is-two-thirds projects-wrapper'>\n              <div>\n                <div\n                  className='is-rounded profile-picture'\n                  style={{ backgroundImage: `url(${picture})` }}\n                ></div>\n\n                <input\n                  type='file'\n                  name='picture'\n                  onChange={this.handleUpload}\n                ></input>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    minWidth: '500px',\n    minHeight: '250px',\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: 'column',\n    padding: \"2em 3em\",\n    transform: 'translate(-40%, -50%)',\n    boxShadow: \"0 0 20px  rgba(60,90,195, 0.4)\"\n  }\n};\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\n// Modal.setAppElement('#yourAppElement')\n\nexport default class MyModal extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      modalIsOpen: false\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    // this.subtitle.style.color = '#f00';\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  render() {\n    const projectId = this.props.projectId;\n\n    return (\n      <div>\n        <button className=\"button is-primary is-light is-fullwidth\" onClick={this.openModal}>Share this project</button>\n        <Modal\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModal}\n          onRequestClose={this.closeModal}\n          style={customStyles}\n          contentLabel='Example Modal'\n        >\n          <div>\n          <a class='delete close-modal' onClick={this.closeModal}></a>\n          <h3 className='title is-4'>Share this Brandlink</h3>\n          <form id='contact-form' onSubmit={this.props.sendMessage} method='POST'>\n            \n            <div class='field is-grouped'>\n              <p class='control is-expanded'>\n                <input\n                class=\"input\"\n                  type='email'\n                  id='email'\n                  aria-describedby='emailHelp'\n                  placeholder='Email'\n                ></input>\n              </p>\n              <input\n              type='hidden'\n              name='projectid'\n              id='projectid'\n              value={projectId}\n            />\n              <p class='control'>\n                <button type=\"submit\" class='button is-info'>Send</button>\n              </p>\n            </div>\n          </form>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport MyModal from \"../utils/MyModal\";\n\nexport default class SideMenu extends Component {\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const projectId = this.props.match.params.id;\n    this.props.shareMessage({email, projectId})\n  };\n\n  componentDidMount(){\n    const projectId = this.props.match.params.id;\n    console.log(projectId)\n  }\n\n    render() {\n      const {permissionToShare} = this.props\n        return (\n      <section className={`section side-menu ${this.props.menuIsOpen}`}>\n   \n          <Link to='/' className='navbar-item'>\n            <img\n              src={`${process.env.REACT_APP_URL}/logo.png`}\n              height='24'\n              alt='BrandLink'\n            ></img>\n          </Link>\n\n            <button className=\"btn-side-menu remove-btn\" onClick={this.props.toggleMenu}>\n              <img src={`${process.env.REACT_APP_URL}/menu.svg`} alt=\"Menu\"></img>\n            </button>\n\n            {this.props.children}\n            \n            {permissionToShare && \n              <MyModal sendMessage={this.handleSubmit}></MyModal>\n            }\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nexport default class BrandHeader extends Component {\n    \n    previousPage = () => {\n        let url = this.props.url;\n        return <Link to={this.props.history.push(url)}>Link</Link>\n    }\n\n    render() {\n    return (\n      <div className=\"side-menu-header\">\n        <button className=\"remove-btn back-link\" onClick={this.previousPage}>\n        <img src={`${process.env.REACT_APP_URL}/back.svg`} alt=\"go back\"></img> \n        <span className=\"is-size-5 has-text-weight-medium\t\">Back</span>\n        </button>\n        {this.props.subtitle &&\n          <h3 className=\"subtitle is-5 has-text-weight-semibold\">{this.props.subtitle}</h3>\n        }\n        <h2 className=\"title is-2 has-text-weight-bold\">{this.props.title}</h2>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ProjectService from '../../services/ProjectService';\nimport SideMenu from '../layout/SideMenu';\nimport BrandHeader from '../layout/BrandHeader';\n// import MainContent from '../layout/MainContent';\n\nexport default class NewProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      //todo: add remaining fields\n      title: '',\n      path: '',\n      colorPalette: null\n    };\n  }\n\n  handleBlur = e => {\n    let pathSuggestion = e.target.value.toLowerCase().replace(/ /g, '-');\n    this.setState({ ...this.setState, path: pathSuggestion });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { title, path } = this.state;\n    const { history } = this.props;\n    e.preventDefault();\n\n\n    this.props.createProject({ title, path, history })\n  };\n\n  componentDidMount() {\n    console.log(this.props)\n  }\n\n  render() {\n    const { title, path } = this.state;\n    const user = this.props.loggedInUser;\n\n    return (\n      <div class=\"new-project-section\">\n        <SideMenu\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n        >\n          <BrandHeader\n            title='New Project'\n            {...this.props}\n            url={`/panel/${user.username}`}\n          ></BrandHeader>\n\n          \n          <form onSubmit={this.handleSubmit}>\n            <div className='field'>\n              <label htmlFor='title' className='label'>\n                Title:\n              </label>\n              <div className='control'>\n                <input\n                  type='text'\n                  name='title'\n                  className='input'\n                  value={title}\n                  placeholder='Introduce the title for your project'\n                  onChange={this.handleChange}\n                  onBlur={this.handleBlur}\n                />\n              </div>\n            </div>\n\n            <div className='field'>\n              <label htmlFor='path' className='label'>\n                Path:\n              </label>\n              <div className='control'>\n                <input\n                  type='text'\n                  name='path'\n                  className='input'\n                  value={path}\n                  placeholder='Introduce the url for your project'\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className='control'>\n              <input\n                type='submit'\n                className='button is-link is-rounded'\n                value='Start project'\n              ></input>\n            </div>\n          </form>\n        </SideMenu>\n\n        <div\n          className={`main-content section ${this.props.menuIsOpen} new-project-main is-paddingless`}\n        >\n          <section className='section rows-container is-paddingless\t'>\n            <img src='/new-project.png' alt='New Project' />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Editor, EditorState, RichUtils, convertToRaw, convertFromRaw } from 'draft-js';\n\nclass TextEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { };\n      \n        const content = window.localStorage.getItem('content');\n      \n        if (content) {\n          this.state.editorState = EditorState.createWithContent(convertFromRaw(JSON.parse(content)));\n        } else {\n          this.state.editorState = EditorState.createEmpty();\n        }\n      }\n\n  onChange = (editorState) => {\n    const contentState = editorState.getCurrentContent();\n    this.saveContent(contentState);\n    this.setState({\n      editorState,\n    });\n  };\n\n  handleKeyCommand = (command) => {\n    const newState = RichUtils.handleKeyCommand(this.state.editorState, command);\n\n    if (newState) {\n      this.onChange(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  onUnderlineClick = () => {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'));\n  }\n\n  onToggleCode = () => {\n    this.onChange(RichUtils.toggleCode(this.state.editorState));\n  }\n\n  saveContent = (content) => {\n    window.localStorage.setItem('content', JSON.stringify(convertToRaw(content)));\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.onUnderlineClick}>Underline</button>\n        <button onClick={this.onToggleCode}>Code Block</button>\n        <Editor\n          editorState={this.state.editorState}\n          handleKeyCommand={this.handleKeyCommand}\n          onChange={this.onChange}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TextEditor;","import React, { Component } from 'react';\nimport ProjectService from '../../services/ProjectService';\n\n// import { Content } from '../project/Content';\n// import Dropdown from '../utils/Dropdown';\nimport Dropzone from 'react-dropzone';\nimport TextEditor from '../utils/TextEditor';\nimport Dropdown from '../utils/Dropdown';\n\nexport default class MainContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.projectService = new ProjectService();\n    this.loadingImg = '';\n    this.loadingParent = '';\n  }\n\n  displayRows = () => {\n    const { id } = this.props.match.params;\n    console.log(id);\n\n    this.projectService.displayRows(id).then(projectData => {\n      console.log(projectData);\n      const { rows, colorPalette, typeset, textstyles } = projectData;\n      this.setState(\n        {\n          ...this.state,\n          rows: rows,\n          colorPalette: colorPalette,\n          typeset: typeset,\n          textstyles: textstyles\n        },\n        () => {\n          console.log(this.state.rows);\n        }\n      );\n    });\n  };\n\n  addNewRow = layout => {\n    const userId = this.props.user.id;\n    this.projectService.createNewRow({ layout, userId }).then(\n      projectWithRowAdded => {\n        this.setState({\n          ...this.state,\n          rows: projectWithRowAdded.rows\n        });\n      },\n      error => console.log(error)\n    );\n  };\n\n  deleteRow = rowId => {\n    this.projectService.deleteRow(rowId).then(\n      project => {\n        this.displayRows();\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  addContent = (rowId, slotIdx, type) => {\n    this.projectService.addContent({ rowId, slotIdx, type }).then(payload => {\n      this.displayRows();\n    });\n  };\n\n  addContentFront = (rowId, slotIdx, type) => {\n    this.projectService.fetchContent(rowId).then(payload => {\n      let content = payload;\n\n      content[slotIdx] = { order: slotIdx, type: type };\n\n      this.projectService\n        .insertSlot(content, rowId)\n        .then(payload => this.displayRows())\n        .catch(err => console.log(err));\n    });\n  };\n\n  addFontAsContent = (rowId, slotIdx, type) => {\n    this.projectService\n      .addFontAsContent({ rowId, slotIdx, type })\n      .then(payload => {\n        console.log(payload);\n        // this.displayRows();\n      });\n  };\n\n  addImageAsContent = (file, rowId, slotIdx, type) => {\n    this.loadingImg = document.createElement('img');\n    this.loadingImg.setAttribute('src', 'http://localhost:3000/loading.svg');\n    this.loadingParent = document.querySelector('.image-label');\n    this.loadingParent.appendChild(this.loadingImg);\n\n    const uploadData = new FormData();\n    uploadData.append('file', file[0]);\n\n    this.projectService.addImageAsContent({ uploadData }).then(imageURl => {\n      let image = imageURl;\n      this.projectService.fetchContent(rowId).then(payload => {\n        let content = payload;\n        content[slotIdx] = { order: slotIdx, image: image, type: type };\n        this.projectService\n          .insertSlot(content, rowId)\n          .then(payload => {\n            console.log(payload);\n            this.displayRows();\n          })\n          .catch(err => console.log(err));\n      });\n    });\n  };\n\n  addDownloadAsContent = (file, rowId, slotIdx, type) => {\n    this.loadingImg = document.createElement('img');\n    this.loadingImg.setAttribute('src', 'http://localhost:3000/loading.svg');\n    this.loadingParent = document.querySelector('.file-label');\n    this.loadingParent.appendChild(this.loadingImg);\n\n    const uploadData = new FormData();\n    uploadData.append('file', file[0]);\n\n    this.projectService.addDownloadAsContent({ uploadData }).then(assetObject => {\n      console.log(assetObject);\n      this.projectService.fetchContent(rowId).then(payload => {\n        let content = payload;\n        content[slotIdx] = { order: slotIdx, asset: assetObject, type: type };\n        this.projectService\n          .insertSlot(content, rowId)\n          .then(payload => {\n            console.log(payload);\n            this.displayRows();\n          })\n          .catch(err => console.log(err));\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.displayRows();\n  }\n\n  render() {\n    // const path = this.props.user.activeProject;\n    const path = this.props.match.params.id;\n    const { permissionToEdit } = this.props;\n    const { colorPalette, typeset, textstyles } = this.state;\n\n    return (\n      <div\n        className={`main-content section is-paddingless\t ${this.props.menuIsOpen}`}\n      >\n        <section className='section rows-container is-paddingless\t'>\n          {this.state.rows &&\n            this.state.rows.map((row, rowIdx) => (\n              <div key={row._id} className='columns is-multiline is-marginless'>\n                {row.slots.map((slot, slotIdx) => (\n                  <div\n                    key={slotIdx}\n                    id={`slot-${rowIdx}-${slotIdx}`}\n                    className={`${row.layout} column row slot`}\n                  >\n                    {row.content[slotIdx].type && (\n                      <React.Fragment>\n                        {row.content[slotIdx].type === 'assets' && (\n                          <>\n                            {/* {assets && assets.length > 0 && ( */}\n                              <div className={`assets-container content-container ${row.content[slotIdx].image ? \"has-image\" : \"\"}`}>\n                                {!row.content[slotIdx].image && (\n                                  <Dropzone\n                                    onDrop={acceptedFiles =>\n                                      this.addImageAsContent(\n                                        acceptedFiles,\n                                        row._id,\n                                        slotIdx,\n                                        'assets'\n                                      )\n                                    }\n                                  >\n                                    {({ getRootProps, getInputProps }) => (\n                                      <section class='image-label'>\n                                        <div {...getRootProps()}>\n                                          <input {...getInputProps()} />\n                                          <p>Click to select image</p>\n                                        </div>\n                                      </section>\n                                    )}\n                                  </Dropzone>\n                                )}\n                                {row.content[slotIdx].image && (\n                                  <img\n                                    src={row.content[slotIdx].image}\n                                    alt=''\n                                  />\n                                )}\n                              </div>\n                          </>\n                        )}\n\n                        {row.content[slotIdx].type === 'colorPalette' && (\n                          <>\n                            {colorPalette && colorPalette.length > 0 && (\n                              <div className='color-container content-container'>\n                                {colorPalette.map((color, idx) => (\n                                  <div\n                                    className='color'\n                                    key={idx}\n                                    style={{\n                                      width: 100 / colorPalette.length + '%',\n                                      backgroundColor: color.hexadecimal\n                                    }}\n                                  >\n                                    <span className='color-name vertical-text'>\n                                      {color.name}\n                                    </span>\n                                  </div>\n                                ))}\n                              </div>\n                            )}\n\n                            {!colorPalette.length && (\n                              <div className='color-container content-container'>\n                                <div class='notification is-info'>\n                                  Add your first color.{' '}\n                                  <a\n                                    href={`/project/${path}/edit/colorPalette/new`}\n                                  >\n                                    New color\n                                  </a>\n                                </div>\n                              </div>\n                            )}\n                          </>\n                        )}\n                        {row.content[slotIdx].type === 'typeset' && (\n                          <>\n                            <div className='field has-addons'>\n                              {typeset && typeset.length > 0 && (\n                                <div className='typeset-container content-container'>\n                                  {typeset.map(type => (\n                                    // <p className='control'>\n                                    //   <button\n                                    //     className='button is-small'\n                                    //     onClick={slodIdx =>\n                                    //       this.addFontAsContent(\n                                    //         row._id,\n                                    //         slotIdx,\n                                    //         'typeset'\n                                    //       )\n                                    //     }\n                                    //     style={{ fontFamily: type.fontFamily }}\n                                    //   >\n                                    //     {type.fontFamily}\n                                    //   </button>\n                                    // </p>\n                                    <React.Fragment>\n                                      <div>{type.fontFamily}</div>\n                                      <div\n                                        style={{ fontFamily: type.fontFamily }}\n                                        className='is-size-3'\n                                      >\n                                        Aa Bb Cc Dd Ee Ff Gg Hh Ii Jj Kk Ll Mm\n                                        Nn Oo Pp Qq Rr Ss Tt Uu Vv Ww Xx Yy Zz\n                                        0123456789 !\"#$%&/()=?´¨@\n                                      </div>\n                                    </React.Fragment>\n                                  ))}\n                                </div>\n                              )}\n                            </div>\n\n                            {!typeset.length && (\n                              <div className='typeset-container content-container'>\n                                <div class='notification is-info'>\n                                  Add your first type.{' '}\n                                  <a href={`/project/${path}/edit/typeset`}>\n                                    New type\n                                  </a>\n                                </div>\n                              </div>\n                            )}\n                          </>\n                        )}\n\n                        {row.content[slotIdx].type === 'textedit' && (\n                          <div className='content-container textedit-container'>\n                            <TextEditor></TextEditor>\n                          </div>\n                        )}\n\n                        {row.content[slotIdx].type === 'textstyles' && (\n                          <>\n                            {textstyles && (\n                              <div className='type-container content-container'>\n                                {textstyles.map((style, idx) => (\n                                  <div\n                                    className='type'\n                                    key={idx}\n                                    style={{\n                                      fontFamily: style.fontFamily,\n                                      fontWeight: style.fontWeight,\n                                      fontSize: `${style.fontSize}rem`,\n                                      letterSpacing: `${style.letterSpacing}rem`,\n                                      lineHeight: style.lineHeight\n                                    }}\n                                  >\n                                    {style.name}\n                                  </div>\n                                ))}\n                              </div>\n                            )}\n                          </>\n                        )}\n\n                        {row.content[slotIdx].type === 'downloads' && (\n                          <>\n                            {/* {assets && assets.length > 0 && ( */}\n                              <div className='download-container content-container'>\n                                {!row.content[slotIdx].asset && (\n                                  <Dropzone\n                                    onDrop={acceptedFiles =>\n                                      this.addDownloadAsContent(\n                                        acceptedFiles,\n                                        row._id,\n                                        slotIdx,\n                                        'downloads'\n                                      )\n                                    }\n                                  >\n                                    {({ getRootProps, getInputProps }) => (\n                                      <section class='file-label'>\n                                        <div {...getRootProps()}>\n                                          <input {...getInputProps()} />\n                                          <p>Click to select file</p>\n                                        </div>\n                                      </section>\n                                    )}\n                                  </Dropzone>\n                                )}\n                                {row.content[slotIdx].asset && (\n                                  // row.content[slotIdx].asset\n                                <a className=\"button\" href={row.content[slotIdx].asset.secure_url} target=\"_blank\" download>Download {row.content[slotIdx].asset.name}</a>\n                                )}\n                              </div>\n                          </>\n                        )}\n                      </React.Fragment>\n                    )}\n\n                    {!row.content[slotIdx].type && (\n                      <React.Fragment>\n                        <div className='content-container'>\n                          <div className='dropdown is-hoverable'>\n                            <div className='dropdown-trigger'>\n                              <button\n                                className='button'\n                                aria-haspopup='true'\n                                aria-controls='dropdown-menu4'\n                              >\n                                <span>Add content</span>\n                                <span className='icon is-small'>\n                                  <img\n                                    src={`${process.env.REACT_APP_URL}/chevron-down.svg`}\n                                  ></img>\n                                </span>\n                              </button>\n                            </div>\n                            <div\n                              className='dropdown-menu'\n                              id='dropdown-menu4'\n                              role='menu'\n                            >\n                              <div className='dropdown-content'>\n                                <div className='dropdown-item'>\n                                  <div>\n                                    <button\n                                    onClick = {() => this.addContentFront(row._id, slotIdx, 'textedit')}\n                                    className='button'\n                                    >\n                                      Text editor\n                                    </button>\n                                  </div>\n                                  <div>\n                                    <button\n                                      onClick = {() => this.addContentFront(row._id, slotIdx, 'colorPalette')}\n                                      className='button'\n                                    >\n                                      Color Palette\n                                    </button>\n                                  </div>\n                                  <div>\n                                    <button\n                                      onClick = {() => this.addContentFront(row._id, slotIdx, 'assets')}\n                                      className='button'\n                                    >\n                                      Image\n                                    </button>\n                                  </div>\n                                  <div>\n                                    <button\n                                      onClick = {() => this.addContentFront(row._id, slotIdx, 'typeset')}\n                                      className='button'\n                                    >\n                                      Typography\n                                    </button>\n                                  </div>\n                                  <div>\n                                    <button\n                                      onClick = {() => this.addContentFront(row._id, slotIdx, 'textstyles')}\n                                      className='button'\n                                    >\n                                      TextStyles\n                                    </button>\n                                  </div>\n                                  <div>\n                                    <button\n                                      onClick = {() => this.addContentFront(row._id, slotIdx, 'downloads')}\n                                      className='button'\n                                    >\n                                      Asset\n                                    </button>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </React.Fragment>\n                    )}\n                  </div>\n                ))}\n\n                {permissionToEdit && (\n                  <button\n                    className='close'\n                    onClick={() => this.deleteRow(row._id)}\n                  >\n                    Cerrar\n                  </button>\n                )}\n              </div>\n            ))}\n\n          {permissionToEdit && (\n            <div className='column is-full layout-btn-container'>\n              <p className='header subtitle is-4 is-primary'>Choose layout</p>\n              <div className='inner'>\n                <div\n                  className='layout-btn'\n                  onClick={() => this.addNewRow('is-full')}\n                >\n                  <img\n                    src={`${process.env.REACT_APP_URL}/full.svg`}\n                    alt='Row'\n                  ></img>\n                  Full\n                </div>\n\n                <div\n                  className='layout-btn'\n                  onClick={() => this.addNewRow('is-half')}\n                >\n                  <img\n                    src={`${process.env.REACT_APP_URL}/half.svg`}\n                    alt='Row'\n                  ></img>\n                  Half\n                </div>\n\n                <div\n                  className='layout-btn'\n                  onClick={() => this.addNewRow('is-one-third')}\n                >\n                  <img\n                    src={`${process.env.REACT_APP_URL}/third.svg`}\n                    alt='Row'\n                  ></img>\n                  Third\n                </div>\n\n                <div\n                  className='layout-btn'\n                  onClick={() => this.addNewRow('is-two-thirds-first')}\n                >\n                  <img\n                    src={`${process.env.REACT_APP_URL}/two-thirds-first.svg`}\n                    alt='Row'\n                  ></img>\n                  Two Thirds\n                </div>\n\n                <div\n                  className='layout-btn'\n                  onClick={() => this.addNewRow('is-two-thirds-last')}\n                >\n                  <img\n                    src={`${process.env.REACT_APP_URL}/two-thirds-last.svg`}\n                    alt='Row'\n                  ></img>\n                  Two Thirds\n                </div>\n              </div>\n            </div>\n          )}\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Dropdown extends Component {\n  render() {\n    const { row, slotIdx } = this.props;\n    return (\n      <div className='dropdown is-hoverable'>\n        <div className='dropdown-trigger'>\n          <button\n            className='button'\n            aria-haspopup='true'\n            aria-controls='dropdown-menu4'\n          >\n            <span>Add content</span>\n            <span className='icon is-small'>\n              <img src={`${process.env.REACT_APP_URL}/chevron-down.svg`}></img>\n            </span>\n          </button>\n        </div>\n        <div className='dropdown-menu' id='dropdown-menu4' role='menu'>\n          <div className='dropdown-content'>\n            <div className='dropdown-item'>\n              <div>\n                <button onClick={this.addContent} className='button'>\n                  Text editor\n                </button>\n              </div>\n              <div>\n                <button\n                  onClick={() => this.props.addContent()}\n                  className='button'\n                >\n                  Color Palette\n                </button>\n              </div>\n              <div>\n                <button onClick={this.addContent} className='button'>\n                  Image\n                </button>\n              </div>\n              <div>\n                <button onClick={this.addContent} className='button'>\n                  Typography display\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\n// import ProjectService from \"../../services/ProjectService\";\nimport MainContent from '../layout/MainContent';\n\nexport default class EditProject extends Component {\n\n  render() {\n    const { colorPalette, typeset, assets} = this.props;\n    return (\n      < >\n      <SideMenu\n                {...this.props}\n\n      toggleMenu={this.props.toggleMenu}\n      menuIsOpen={this.props.menuIsOpen}\n      projectId={this.props.loggedInUser.activeProject}\n      shareMessage={this.props.shareMessage}\n      permissionToShare\n      >   \n        <BrandHeader\n          title={this.props.projectTitle}\n          subtitle='Brand presets'\n          {...this.props}\n          url={`/panel/${this.props.loggedInUser.username}`}\n        ></BrandHeader>\n\n        <p>Let's begin! Start by adding some brand presets to your project</p>\n\n        <ul className='project-presets-list'>\n          <li>\n            <Link to={`${this.props.location.pathname}/typeset`}>\n              <h3 className='is-size-5 has-text-primary'>Typography</h3>\n            </Link>\n          </li>\n          <li>\n            <Link to={`${this.props.location.pathname}/textStyles`}>\n              <h3 className='is-size-5 has-text-primary'>Text Styles</h3>\n            </Link>\n          </li>\n          <li>\n            <Link to={`${this.props.location.pathname}/colorPalette`}>\n              <h3 className='is-size-5 has-text-primary'>Color Palette</h3>\n            </Link>\n          </li>\n          <li>\n            <Link to={`${this.props.location.pathname}/assets`}>\n              <h3 className='is-size-5 has-text-primary'>Assets</h3>\n            </Link>\n          </li>\n        </ul>\n      </SideMenu>\n      <MainContent \n          {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          user={this.props.loggedInUser}\n          assets={assets}\n          permissionToEdit\n        >\n          \n        </MainContent>\n        </ >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\nimport AuthService from \"../../services/AuthService\";\n\n\nexport default class ColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      colorPalette: null\n    };\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { colorPalette, typeset, assets } = this.props;\n    \n    return (\n      <>\n        <SideMenu\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n        >\n          <BrandHeader\n            title='Color Palette'\n            {...this.props}\n            url={`/project/${id}/edit`}\n          ></BrandHeader>\n\n          <div className='content'>\n            <div className='color-palette columns is-multiline'>\n              {colorPalette &&\n                colorPalette.map(color => (\n                  <div className='column is-full box' key={color._id}>\n                    <div className='color'>\n                      <div\n                        className='circle-color'\n                        style={{ backgroundColor: color.hexadecimal }}\n                      ></div>\n                      <span>{color.name}</span>\n                    </div>\n                    <div className='is-grouped'>\n                      <Link\n                        to={`/project/${id}/edit/colorPalette/new/${color._id}`}\n                        className='button is-rounded is-small is-success is-outlined'\n                      >\n                        Edit\n                      </Link>\n                      <button\n                        onClick={() => this.props.deleteColor(color._id)}\n                        className='button is-rounded is-small is-danger is-outlined'\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                ))}\n\n              {!colorPalette ||\n                (!colorPalette.length && (\n                  <div>\n                    You dont have any color swatch yet. Add your first now.\n                  </div>\n                ))}\n            </div>\n\n            <div className='control'>\n              <Link\n                to={`/project/${id}/edit/colorPalette/new`}\n                className='button is-link'\n              >\n                Add new color\n              </Link>\n            </div>\n          </div>\n        </SideMenu>\n        <MainContent\n          {...this.props}\n          colorPalette={colorPalette}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          user={this.props.loggedInUser}\n          typeset={typeset}\n          assets={assets}\n          permissionToEdit\n\n        >\n          \n        </MainContent>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\nimport { TwitterPicker } from 'react-color';\n\nexport default class NewColor extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      name: '',\n      hexadecimal: '',\n      colorPalette: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getColorData();\n  }\n\n  getColorData = () => {\n    const { colorId } = this.props.match.params;\n\n    if (colorId !== undefined) {\n      this.projectService.getColorData(colorId).then(\n        colorData => {\n          let color = colorData.colorPalette.filter(\n            color => color._id === colorId\n          );\n          this.setState({\n            ...this.state,\n            name: color[0].name,\n            hexadecimal: color[0].hexadecimal\n          });\n        },\n        error => {\n          const { message } = error;\n          console.error(message);\n        }\n      );\n    }\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleChangeComplete = (color) => {\n    console.log(color)\n    console.log(this.state)\n    this.setState({ hexadecimal: color.hex });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, hexadecimal } = this.state;\n    const { id, colorId } = this.props.match.params;\n    const { history } = this.props;\n    this.props.addColorToPalette({ name, hexadecimal, id, colorId, history });\n  };\n  \n\n  render() {\n    const { name, hexadecimal } = this.state;\n    const { colorId, id } = this.props.match.params;\n    const { colorPalette, typeset, assets } = this.props;\n\n    return (\n      <>\n        <SideMenu\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n        >\n          {colorId && (\n            <BrandHeader\n              title='Edit color'\n              subtitle='Color Palette'\n              {...this.props}\n              url={`/project/${id}/edit/colorPalette`}\n            ></BrandHeader>\n          )}\n          {!colorId && (\n            <BrandHeader\n              title='New color'\n              subtitle='Color Palette'\n              {...this.props}\n              url={`/project/${id}/edit/colorPalette`}\n            ></BrandHeader>\n          )}\n\n          <form onSubmit={this.handleSubmit}>\n            <div className='field'>\n              <label htmlFor='title' className='label'>\n                Name:\n              </label>\n              <div className='control'>\n                <input\n                  type='text'\n                  name='name'\n                  className='input'\n                  value={name}\n                  placeholder='Introduce a name for your color'\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n            </div>\n\n            <div className='field'>\n              <label htmlFor='path' className='label'>\n                Hexadecimal:\n              </label>\n              <div className='control'>\n                {/* <input\n                type=\"text\"\n                name=\"hexadecimal\"\n                className=\"input\"\n                value={hexadecimal}\n                placeholder=\"Introduce the url for your project\"\n                onChange={this.handleChange}\n                required\n              /> */}\n                <TwitterPicker\n                  color={this.state.background}\n                  onChangeComplete={this.handleChangeComplete}\n                />\n              </div>\n            </div>\n\n            <div className='control'>\n              {!colorId && (\n                <input\n                  type='submit'\n                  className='button is-link'\n                  value='Save Color'\n                ></input>\n              )}\n\n              {colorId && (\n                <input\n                  type='submit'\n                  className='button is-link'\n                  value='Edit Color'\n                ></input>\n              )}\n            </div>\n          </form>\n        </SideMenu>\n        <MainContent\n          {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          user={this.props.loggedInUser}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          assets={assets}\n          permissionToEdit\n        ></MainContent>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\n\nexport default class TypeSet extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      typeset: null\n    };\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { colorPalette, typeset, assets } = this.props;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n      <BrandHeader\n        title='Typography set'\n        {...this.props}\n        url={`/project/${id}/edit`}\n      ></BrandHeader>\n\n          <div className='type-set'>\n            <div className=\"content\">\n            {typeset &&\n              typeset.map(font => (\n                <div className='box' key={font._id}>\n                    <span style={{ fontFamily: font.fontFamily }}>\n                      {font.fontFamily}\n                    </span>\n                    <button\n                      onClick={() => this.props.deleteType(font._id)}\n                      className='button is-rounded is-small is-danger is-outlined'\n                    >\n                      Delete\n                    </button>                    \n                </div>\n              ))}\n            {(!typeset || !typeset.length) && \n              <div>You dont have any fonts yet. Add your first font now.</div>\n            }\n\n            </div>\n\n            <div className='field fonts-buttons is-group'>\n            <div className='google-fonts-button control'>\n              <Link\n                to={`/project/${id}/edit/typeSet/new/google-font?`}\n                className='button is-link'\n              >\n                Add Google Font\n              </Link>\n            </div>\n\n            <div className='adobe-fonts-button control'>\n              <Link\n                to={`/project/${id}/edit/typeSet/new/adobe-font?`}\n                className='button is-link'\n              >\n                Add Adobe Font\n              </Link>\n            </div>\n          </div>\n          </div>\n\n          \n      </SideMenu>\n      <MainContent\n      {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          user={this.props.loggedInUser}\n          assets={assets}\n          permissionToEdit\n\n        >\n          \n        </MainContent>\n        </ >\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport FontPicker from \"font-picker-react\";\n\nexport default class MyFontPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fontFamily: \"Open Sans\",\n      type : \"Google Fonts\"\n    };\n  }\n\n  recordType = nextFont => {\n    this.setState({\n      ...this.state,\n      fontFamily: nextFont.family,\n    });\n  };\n\n\n  render() {\n    // todo: .env not working on client side\n    // console.log(process.env.REACT_APP_GFONTS_KEY)\n    return (\n      <div className=\"font-picker\">\n\n        <FontPicker\n          limit=\"100\"\n          apiKey={process.env.REACT_APP_GFONTS_KEY}\n          activeFontFamily={this.state.fontFamily}\n          onChange={nextFont => this.recordType(nextFont)}\n        />\n\n        <div className=\"container is-fullhd preview-text\">\n          <div className=\"notification apply-font\">\n            The font will be applied to this text.\n          </div>\n        </div>\n\n        <button onClick={() => this.props.saveType(this.state)} className=\"button is-link\">Save Type</button>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\n\nexport default class AdobeFontsImporter extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      projectId: \"gnh6ghd\",\n      token: \"0bb2988cbd31ce44bda853c78df227e26a0d86c8\"\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // const projectId = document.querySelector('input[name=\"projectId\"]').value;\n    // const token = document.querySelector('input[name=\"token\"]').value;\n\n    this.projectService.getGoogleFonts()\n    .then(fonts => { \n      this.setState({\n        ...this.state,\n        ...fonts\n      })\n    },\n      error => console.error(error)\n    );\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\" className=\"label\">\n            Project Id:\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"projectId\"\n              value={this.state.projectId}\n              className=\"input\"\n              placeholder=\"Introduce the project id of your project\"\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"path\" className=\"label\">\n            Token:\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"password\"\n              name=\"token\"\n              value={this.state.token}\n              className=\"input\"\n              placeholder=\"Introduce the token for your Adobe Fonts account\"\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <input\n            type=\"submit\"\n            className=\"button is-link\"\n            value=\"Import fonts\"\n          ></input>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport MyFontPicker from \"../utils/MyFontPicker\";\nimport BrandHeader from \"../layout/BrandHeader\";\nimport AdobeFontsImporter from \"../utils/AdobeFontsImporter\";\nimport SideMenu from \"../layout/SideMenu\";\nimport MainContent from \"../layout/MainContent\";\n\nexport default class NewType extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n  }\n\n  saveType = typeObj => {\n    const { fontFamily, type } = typeObj;\n    const { path } = this.props.match.params;\n    const { history } = this.props;\n\n    this.props.saveType({fontFamily, type, path, history});\n  };\n\n  render() {\n    const { source, id } = this.props.match.params;\n    const { colorPalette, typeset, assets } = this.props;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n      <div className=\"content\">\n      {source === \"google-font\" && (\n          <>\n            <BrandHeader\n              title=\"Google Fonts\"\n              subtitle=\"Typeset\"\n              {...this.props}\n              url={`/project/${id}/edit/typeset`}\n            ></BrandHeader>\n            <MyFontPicker class=\"select\" saveType={typeObj => this.saveType(typeObj)} />\n          </>\n        )}\n\n        {source === \"adobe-font\" && (\n          <>\n            <BrandHeader\n              title=\"Adobe Fonts\"\n              subtitle=\"Typeset\"\n              {...this.props}\n              url={`/project/${id}/edit/typeset`}\n            ></BrandHeader>\n            <AdobeFontsImporter></AdobeFontsImporter>\n          </>\n        )}\n      </div>\n      </SideMenu>\n      <MainContent\n      {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          user={this.props.loggedInUser}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          assets={assets}\n          permissionToEdit\n        >\n          \n        </MainContent>\n      </ >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\n\nexport default class Assets extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      assets: null\n    };\n  }\n\n  handleUpload = file => {\n    const uploadData = new FormData();\n    uploadData.append('file', file[0]);\n    const { path } = this.props.match.params;\n\n    this.props.addAsset({ uploadData, path });\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const { colorPalette, typeset, assets } = this.props;\n\n    return (\n      <React.Fragment>\n        <SideMenu\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n        >\n          <BrandHeader\n            title='Assets Library'\n            {...this.props}\n            url={`/project/${id}/edit`}\n          ></BrandHeader>\n\n          <div>\n            <Dropzone\n              onDrop={acceptedFiles => this.handleUpload(acceptedFiles)}\n            >\n              {({ getRootProps, getInputProps }) => (\n                <section class='file-label'>\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <p>\n                      Drag 'n' drop some files here, or click to select files\n                    </p>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n            <p>File formats allowed: .png, .jpg, .pdf, .zip, .svg, .gif</p>\n\n            <div className='assets-list columns is-multiline'>\n              {assets &&\n                assets.map(asset => (\n                  <div\n                    key={asset._id}\n                    draggable\n                    className='draggable'\n                    onDragStart={e => this.props.onDragStart(e, asset._id)}\n                    onDrop={e => this.props.onDrop(e, asset._id)}\n                  >\n                    <figure className='column is-half'>\n                      <button\n                        onClick={() => this.props.deleteAsset(asset._id)}\n                        className='button is-rounded is-small is-danger is-outlined'\n                      >\n                        Delete\n                      </button>\n                      {(asset.format === 'png' ||\n                        asset.format === 'jpg' ||\n                        asset.format === 'svg' ||\n                        asset.format === 'gif') && (\n                        <span>\n                          <img src={asset.secure_url} alt='' />\n                        </span>\n                      )}\n                      {asset.format === 'pdf' && <p>esto es un pdf</p>}\n                      {asset.format === 'zip' && (\n                        <p className='box'>esto es un zip</p>\n                      )}\n                    </figure>\n                    {/* <div className=\"asset-name\" onClick={this.editName}>\n                        <a>{asset.name}</a>\n                        <input style={{display: 'none'}} type=\"text\" value={asset.name} onChange={this.editInputName(asset._id)}/>\n                      </div> */}\n                  </div>\n                ))}\n\n              {!assets && <div>You dont have any assets yet</div>}\n            </div>\n          </div>\n        </SideMenu>\n        <MainContent\n          {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          user={this.props.loggedInUser}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          assets={assets}\n          onDragStart={this.props.onDragStart}\n          permissionToEdit\n\n          \n        ></MainContent>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\n\nexport default class TextStyles extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      typeset: [],\n      textstyles: []\n    };\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { colorPalette, typeset, assets, textstyles } = this.props;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n        <BrandHeader\n          title='Text Styles'\n          {...this.props}\n          url={`/project/${id}/edit`}\n        ></BrandHeader>\n        \n        <div className='content'>\n          <div className='type-set columns is-multiline'>\n            {textstyles && \n            <p>This are some default styles you cant edit</p>}\n            {textstyles &&\n              textstyles.map(style => (\n                <div className='column is-full box' key={style._id}>\n                  <div className='element'>\n                    <span\n                      style={{\n                        fontFamily: style.fontFamily,\n                        fontWeight: style.fontWeight,\n                        fontSize: `${style.fontSize}rem`,\n                        letterSpacing: `${style.letterSpacing}rem`,\n                        lineHeight: style.lineHeight\n                      }}\n                    >\n                      {style.name}\n                    </span>\n                  </div>\n                  <div className='is-grouped'>\n                    <Link\n                      to={{\n                        pathname: `${this.props.location.pathname}/new/${style._id}`,\n                        state: this.state\n                      }}\n                      className='button is-rounded is-small is-success is-outlined'\n                    >\n                      Edit\n                    </Link>\n                  </div>\n                </div>\n              ))}\n\n            {!textstyles && <div>You dont have any text styles yet</div>}\n          </div>\n\n        </div>\n      </SideMenu>\n      <MainContent\n      {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          user={this.props.loggedInUser}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          assets={assets}\n          permissionToEdit\n\n        >\n          \n        </MainContent>\n        </ >\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport BrandHeader from \"../layout/BrandHeader\";\nimport SideMenu from \"../layout/SideMenu\";\nimport MainContent from \"../layout/MainContent\";\n\nexport default class NewTextStyle extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      textstyle: {},\n      typeset: []\n    };\n\n    this.uppercaseValue = \"none\";\n  }\n\n  componentDidMount() {\n    this.getTextStyleData();\n    console.log(this.props);\n\n  }\n\n  getTextStyleData = () => {\n    const { styleId } = this.props.match.params;\n\n    if (styleId !== undefined) {\n      this.projectService.getTextStyleData(styleId)\n      .then(textstyleData => {\n          let textStyle = textstyleData.textstyles.filter(\n            style => style._id === styleId\n          );\n          \n          this.setState({\n            ...this.state,\n            textstyle: textStyle[0],\n            typeset : textstyleData.typeset\n          });\n        },\n        error => {\n          const { message } = error;\n          console.error(message);\n        }\n      );\n    }\n  };\n\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ \n      ...this.state,  textstyle : { ...this.state.textstyle, [name]: value }});\n  };\n\n  handleCheckbox = e => {\n    let uppercase = !this.state.uppercase;\n    this.setState({ ...this.state, uppercase: uppercase });\n    this.uppercaseValue = !this.state.uppercase ? \"uppercase\" : \"none\";\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { path, styleId } = this.props.match.params;\n    const { history } = this.props;\n    const textstyle = this.state.textstyle\n    this.props.addTextStyle({ textstyle, path, styleId, history })\n  };\n\n  render() {\n    const { id } = this.props.match.params;\n    const {\n      name,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      lineHeight,\n      letterSpacing\n    } = this.state.textstyle;\n    const { colorPalette, typeset, assets} = this.props;\n\n    console.log(this.props)\n    return (\n      < >\n      <SideMenu toggleMenu={this.props.toggleMenu} menuIsOpen={this.props.menuIsOpen}>\n            <BrandHeader\n                title={name}\n                subtitle=\"Text Styles\"\n                {...this.props}\n                url={`/project/${id}/edit/textStyles`}\n              ></BrandHeader>\n\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"field\">\n                  <label htmlFor=\"fontFamily\" className=\"label\">\n                    Font Family:\n                  </label>\n                  <div className=\"control\">\n                    {typeset && (\n                      <select\n                        className=\"select large\"\n                        name=\"fontFamily\"\n                        value={fontFamily}\n                        onChange={this.handleChange}\n                      >\n                        <option\n                          value=\"Select font family\"\n                        >\n                          Select a font family\n                        </option>\n                        {typeset.map((font, idx) => {\n                          return (\n                            <option key={idx} value={font.fontFamily}>\n                              {font.fontFamily}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    )}\n\n                    {!typeset && (\n                      <p>You haven't add any font to TypeSet yet. Go now</p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"fontWeight\" className=\"label\">\n                    Font Weight:\n                  </label>\n                  <div className=\"control\">\n                    <select\n                      className=\"select large\"\n                      name=\"fontWeight\"\n                      value={fontWeight}\n                      onChange={this.handleChange}\n                    >\n                      <option value=\"100\">Light</option>\n                      <option value=\"400\">Regular</option>\n                      <option value=\"500\">Semibold</option>\n                      <option value=\"600\">Bold</option>\n                      <option value=\"800\">Black</option>\n                    </select>\n\n                    {/* for this to work right i will new to now what font family is \n                    going to be in user, and retrieve the weights avaibable for it from Google\n                    Fonts or Adobe Fonts (or custom source, if i get to implement that) */}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"fontSize\" className=\"label\">\n                    Font Size:\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      type=\"range\"\n                      name=\"fontSize\"\n                      min=\"1\"\n                      max=\"12\"\n                      step=\"0.25\"\n                      value={fontSize}\n                      onChange={this.handleChange}\n                    />\n                    <span>{fontSize} rem</span>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"lineHeight\" className=\"label\">\n                    Line Height:\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      type=\"range\"\n                      name=\"lineHeight\"\n                      value={lineHeight}\n                      onChange={this.handleChange}\n                      min=\"0\"\n                      max=\"2\"\n                      step=\"0.1\"\n                    />\n                    <span>{lineHeight}</span>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"letterSpacing\" className=\"label\">\n                    Letter Spacing\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      type=\"range\"\n                      name=\"letterSpacing\"\n                      min=\"-0.25\"\n                      max=\"0.25\"\n                      step=\"0.1\"\n                      value={letterSpacing}\n                      onChange={this.handleChange}\n                    />\n                    <span>{letterSpacing} rem</span>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"uppercase\"\n                      onChange={this.handleCheckbox}\n                    />\n                    <span>Text to uppercase</span>\n                  </div>\n                </div>\n\n                <div className=\"preview-text box\">\n                  <p\n                    style={{\n                      fontFamily,\n                      fontSize: `${fontSize}rem`,\n                      fontWeight,\n                      lineHeight,\n                      letterSpacing: `${letterSpacing}rem`,\n                      textTransform: this.uppercaseValue\n                    }}\n                  >\n                    Lorem ipsum dolor sit amet consecteteur adipiscing elit\n                  </p>\n                </div>\n\n                <div className=\"control\">\n                  <input\n                    type=\"submit\"\n                    className=\"button is-link\"\n                    value=\"Save Text Style\"\n                  ></input>\n                </div>\n              </form>\n      </SideMenu>\n      <MainContent\n      {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          path={this.props.match.params.path}\n          user={this.props.loggedInUser}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          assets={assets}\n          permissionToEdit\n\n        >\n          \n        </MainContent>\n            </ >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport MainContent from '../layout/MainContent';\n\nexport default class ReadProject extends Component {\n\n  render() {\n    const { colorPalette, typeset, assets} = this.props;\n    return (\n      < >\n      <MainContent \n          {...this.props}\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          colorPalette={colorPalette}\n          typeset={typeset}\n          user={this.props.loggedInUser}\n          assets={assets}\n        >\n      </MainContent>\n    </ >\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { Switch, Route } from 'react-router-dom';\nimport AuthService from './services/AuthService';\nimport Signup from './components/auth/Signup/Signup';\nimport ProjectList from './components/project/ProjectList';\nimport PrivateRoute from './guards/PrivateRoute';\nimport { LandingPage } from './components/landingPage/LandingPage';\nimport Navbar from './components/layout/Navbar';\nimport Login from './components/auth/Login/Login';\nimport Profile from './components/auth/profile/Profile';\nimport NewProject from './components/project/NewProject';\nimport EditProject from './components/project/EditProject';\nimport ColorPalette from './components/brandPresets/ColorPalette';\nimport NewColor from './components/brandPresets/NewColor';\nimport TypeSet from './components/brandPresets/TypeSet';\nimport NewType from './components/brandPresets/NewType';\nimport ProjectService from './services/ProjectService';\nimport Assets from './components/brandPresets/Assets';\nimport TextStyles from './components/brandPresets/TextStyles';\nimport NewTextStyle from './components/brandPresets/NewTextStyle';\nimport ReadProject from './components/project/ReadProject';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.projectService = new ProjectService();\n    this.state = {\n      user: null,\n      menuIsOpen: 'show',\n      file: ''\n    };\n    this.loadingImg = '';\n    this.loadingParent = '';\n  }\n\n  toggleMenu = () => {\n    let toggleClass = this.state.menuIsOpen === 'show' ? 'hide' : 'show';\n    this.setState({\n      ...this.state,\n      menuIsOpen: toggleClass\n    });\n  };\n\n  setUser = user => {\n    if (user === undefined || !user.hasOwnProperty('id')) return;\n\n    this.setState({\n      ...this.state,\n      user\n    });\n\n    if (this.state.user.activeProject) {\n      this.projectService.displayProject(user.id).then(project => {\n        this.setState({\n          ...this.state,\n          title: project.title,\n          colorPalette: project.colorPalette,\n          typeset: project.typeset,\n          assets: project.assets,\n          textstyles: project.textstyles\n        });\n\n        this.addFontsLinks(this.state.typeset);\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        user\n      });\n    }\n  };\n\n  fetchUser = () => {\n    if (this.state.user === null) {\n      this.authService\n        .loggedInUser()\n        .then(user => {\n          if (user !== undefined) {\n            this.setUser(user);\n            this.displayProject(user.id);\n          }\n        })\n        .catch(error => {\n          this.setUser(false);\n        });\n    }\n  };\n\n  logout = () => {\n    this.authService\n      .logout()\n      .then(payload => {\n        this.setState({ ...this.state, user: null });\n      })\n      .catch(err => console.log(err));\n  };\n\n  setActiveProject = path => {\n    const { id } = this.state.user;\n    this.authService\n      .setActiveProject({ path, id })\n      .then(userHasAnActiveProject => {\n        this.setUser(userHasAnActiveProject);\n      });\n  };\n\n  addFontsLinks = typeset => {\n    typeset.map(type => {\n      const link = document.createElement('link');\n      link.setAttribute(\n        'href',\n        `https://fonts.googleapis.com/css?family=${type.fontFamily.replace(\n          ' ',\n          '+'\n        )}&display=swap`\n      );\n      link.setAttribute('rel', `stylesheet`);\n      return document.head.appendChild(link);\n    });\n  };\n\n  deleteProject = projectId => {\n    this.projectService.deleteProject(projectId).then(\n      () => {\n        this.setUser(this.state.user);\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  addColorToPalette = ({ name, hexadecimal, id, colorId, history }) => {\n    this.projectService\n      .addColorToPalette({ name, hexadecimal, id, colorId })\n      .then(\n        updatedProject => {\n          this.setState({\n            ...this.state,\n            name: '',\n            hexadecimal: '',\n            colorPalette: updatedProject.colorPalette\n          });\n          history.push(`/project/${id}/edit/colorPalette`, {\n            state: this.state.colorPalette\n          });\n        },\n        error => console.error(error)\n      );\n  };\n\n  deleteColor = colorId => {\n    this.projectService.deleteColor(colorId).then(\n      project => {\n        this.setUser(this.state.user);\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  saveType = ({ fontFamily, type, path, history }) => {\n    this.projectService.addTypeToTypeSet({ fontFamily, type, path }).then(\n      updatedProject => {\n        this.setState({\n          ...this.state,\n          fontFamily: '',\n          typeset: updatedProject.typeset\n        });\n        history.push(`/project/${this.state.user.activeProject}/edit/typeSet`);\n      },\n      error => console.error(error)\n    );\n  };\n\n  deleteType = typeId => {\n    this.projectService.deleteType(typeId).then(\n      project => {\n        this.setUser(this.state.user);\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  addTextStyle = ({ textstyle, path, styleId, history }) => {\n    this.projectService\n      .addTextStyle({ ...textstyle, path, styleId, history })\n      .then(\n        () => {\n          this.setState({\n            ...this.state,\n            name: '',\n            fontFamily: '',\n            fontSize: 1,\n            fontWeight: null,\n            lineHeight: 1,\n            letterSpacing: 0,\n            uppercase: false\n          });\n          history.push(\n            `/project/${this.state.user.activeProject}/edit/textStyles`\n          );\n        },\n        error => console.error(error)\n      );\n  };\n\n  addAsset = ({ uploadData, path }) => {\n    this.loadingImg = document.createElement('img');\n    this.loadingImg.setAttribute('src', 'http://localhost:3000/loading.svg');\n    this.loadingParent = document.querySelector('.file-label');\n    this.loadingParent.appendChild(this.loadingImg);\n\n    this.projectService\n      .uploadAsset({ uploadData, path })\n      .then(() => {\n        this.setUser(this.state.user);\n        this.loadingParent.removeChild(this.loadingImg);\n      })\n      .catch(error => console.log(error));\n  };\n\n  deleteAsset = assetId => {\n    this.projectService.deleteAsset(assetId).then(\n      project => {\n        this.setUser(this.state.user);\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  onDragStart = (ev, id) => {\n    console.log('dragstart:', id);\n    ev.dataTransfer.setData('id', id);\n  };\n\n  onDrop = (ev, slotIdx) => {\n    let fileId = ev.dataTransfer.getData('id');\n    this.setState({ ...this.state, file: fileId });\n\n    // console.log( fileId, slotIdx)\n  };\n\n  createProject = ({ title, path, history }) => {\n    console.log({ title, path, history });\n\n    this.projectService.createProject({ title, path }).then(\n      projectCreated => {\n        console.log(projectCreated);\n        this.setState({ ...this.state, title: '', path: '' });\n        history.push(`/panel/${this.state.user.username}`);\n      },\n      error => console.error(error)\n    );\n  };\n\n  shareMessage = ({email, projectId}) =>{\n    this.projectService\n    .shareMessage({ email, projectId})\n    .then((response)=>{\n      console.log(response)\n      if (response.msg === 'success'){\n          alert(\"Message Sent.\"); \n          this.resetForm()\n      }else if(response.msg === 'fail'){\n          alert(\"Message failed to send.\")\n      }\n    })\n  }\n\n  resetForm(){\n    document.getElementById('contact-form').reset();\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  render() {\n    this.fetchUser();\n    const {\n      user,\n      menuIsOpen,\n      colorPalette,\n      typeset,\n      assets,\n      textstyles\n    } = this.state;\n    const projectTitle = this.state.title;\n\n    return (\n      <div className='App'>\n        \n        {/* The navbar has to pass the username to the profile menu link */}\n        {/* I need to pass match (the props) so I cant redirect to home after logout*/}\n        <Navbar user={user} logout={this.logout}></Navbar>\n        <>\n          {user && (\n            <Switch>\n              <Route\n                exact\n                path='/login'\n                render={match => <Login {...match} setUser={this.setUser} />}\n              />\n              <Route\n                exact\n                path='/signup'\n                render={match => <Signup {...match} setUser={this.setUser} />}\n              />\n              <Route exact path='/' component={LandingPage} />\n\n              {/* This is a private route, as you have to be loggedin to access your admin panel */}\n              <PrivateRoute\n                exact\n                path='/profile/:id'\n                user={user}\n                redirectPath='/login'\n                component={Profile}\n              />\n\n              {/* <PrivateRoute exact path=\"/panel/:username\" user={user}  component={ProjectList}/> */}\n              <Route\n                exact\n                path='/panel/:username'\n                render={match => (\n                  <ProjectList\n                    {...match}\n                    setPath={this.setPath}\n                    setActiveProject={this.setActiveProject}\n                    deleteProject={this.deleteProject}\n                    setUser={this.setUser}\n                  />\n                )}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/new'\n                user={user}\n                component={NewProject}\n                toggleMenu={this.toggleMenu}\n                createProject={this.createProject}\n                menuIsOpen={menuIsOpen}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                projectTitle={projectTitle}\n                shareMessage={this.shareMessage}\n                component={EditProject}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/colorPalette'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                deleteColor={this.deleteColor}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                component={ColorPalette}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/colorPalette/new/:colorId?'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                addColorToPalette={this.addColorToPalette}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                component={NewColor}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/typeset'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                deleteType={this.deleteType}\n                assets={assets}\n                typeset={typeset}\n                textstyles={textstyles}\n                component={TypeSet}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/typeset/new/:source?'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                colorPalette={colorPalette}\n                menuIsOpen={menuIsOpen}\n                typeset={typeset}\n                saveType={this.saveType}\n                assets={assets}\n                textstyles={textstyles}\n                component={NewType}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/assets'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                assets={assets}\n                addAsset={this.addAsset}\n                deleteAsset={this.deleteAsset}\n                onDragStart={this.onDragStart}\n                onDrop={this.onDrop}\n                file={this.state.file}\n                textstyles={textstyles}\n                component={Assets}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/textStyles'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                component={TextStyles}\n              />\n\n              <PrivateRoute\n                exact\n                path='/project/:id/edit/textStyles/new/:styleId?'\n                user={user}\n                toggleMenu={this.toggleMenu}\n                menuIsOpen={menuIsOpen}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                addTextStyle={this.addTextStyle}\n                component={NewTextStyle}\n              />\n            </Switch>\n          )}\n\n          {!user && (\n            <Switch>\n              <Route\n                exact\n                path='/login'\n                render={match => <Login {...match} setUser={this.setUser} />}\n              />\n              <Route\n                exact\n                path='/signup'\n                render={match => <Signup {...match} setUser={this.setUser} />}\n              />\n              <Route exact path='/' component={LandingPage} />\n\n              <Route\n                exact\n                path='/project/:id'\n                user={user}\n                colorPalette={colorPalette}\n                typeset={typeset}\n                assets={assets}\n                textstyles={textstyles}\n                projectTitle={projectTitle}\n                component={ReadProject}\n              />\n            </Switch>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n    <Router><App/></Router>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}