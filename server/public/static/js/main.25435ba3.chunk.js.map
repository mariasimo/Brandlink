{"version":3,"sources":["services/AuthService.js","components/layout/Hero.js","components/auth/Signup/Signup.js","services/ProjectService.js","components/project/Project.js","components/project/ProjectList.js","guards/PrivateRoute.js","components/landingPage/LandingPage.js","components/layout/Navbar.js","components/auth/Login/Login.js","components/auth/profile/Profile.js","components/layout/SideMenu.js","components/layout/BrandHeader.js","components/layout/MainContent.js","components/project/NewProject.js","components/project/EditProject.js","components/brandPresets/ColorPalette.js","components/brandPresets/NewColor.js","components/brandPresets/TypeSet.js","components/utils/MyFontPicker.js","components/utils/AdobeFontsImporter.js","components/brandPresets/NewType.js","components/brandPresets/Assets.js","components/brandPresets/TextStyles.js","components/brandPresets/NewTextStyle.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","signup","user","instance","post","then","res","Promise","resolve","data","catch","error","console","login","loggedInUser","get","message","edit","id","userData","put","upload","picture","logout","this","axios","create","baseURL","withCredentials","Hero","className","Component","Signup","props","handleChange","e","target","name","value","setState","state","handleFormSubmit","preventDefault","history","setUser","authService","push","username","password","onSubmit","htmlFor","type","onChange","required","React","ProjectService","fetchProjects","arrData","Object","keys","map","key","fetchOneProject","projectPath","createProject","project","deleteProject","projectId","delete","addColorToPalette","updateProjectParams","hexadecimal","path","colorId","getColorData","deleteColor","log","addTypeToTypeSet","fontFamily","deleteType","typeId","getGoogleFonts","uploadAsset","fileParams","uploadData","deleteAsset","assetId","addTextStyle","fontSize","fontWeight","lineHeight","letterSpacing","uppercase","styleId","getTextStyleData","createNewRow","rowParams","layout","deleteRow","rowId","updateRow","typeOfContent","process","Project","to","title","onClick","setPath","ProjectList","updateProjects","projectService","projects","PrivateRoute","component","activeProject","toggleMenu","menuIsOpen","redirectPath","addFontLinks","rest","render","pathname","LandingPage","Navbar","role","aria-label","src","height","alt","Fragment","style","backgroundImage","Login","handleLogin","Profile","handleUpload","FormData","append","files","secure_url","userUdated","SideMenu","children","BrandHeader","previousPage","url","subtitle","MainContent","addNewRow","projectWithRowAdded","rows","addContent","rowUpdated","row","rowIdx","_id","slots","slot","slotIdx","aria-haspopup","aria-controls","NewProject","handleBlur","pathSuggestion","toLowerCase","replace","handleSubmit","colorPalette","placeholder","onBlur","EditProject","match","params","location","ColorPalette","color","backgroundColor","length","NewColor","undefined","colorData","filter","TypeSet","typeset","font","MyFontPicker","recordType","nextFont","family","limit","apiKey","activeFontFamily","saveType","AdobeFontsImporter","document","querySelector","token","fonts","NewType","typeObj","source","class","Assets","file","loadingImg","createElement","setAttribute","loadingParent","appendChild","removeChild","assets","onDrop","acceptedFiles","getRootProps","getInputProps","asset","format","TextStyles","textstyles","NewTextStyle","textstyleData","textStyle","textstyle","handleCheckbox","uppercaseValue","idx","min","max","step","textTransform","App","toggleClass","fetchUser","payload","err","addFontsLinks","link","head","exact","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25435ba3.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `http://localhost:5000/api`,\n      withCredentials: true    \n    })\n  }\n\n  signup = (user) => {\n    return this.instance.post('/signup', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  login = (user) => {\n    return this.instance.post('/login', user)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  loggedInUser = () => {\n    return this.instance.get('/loggedin')\n    .then(res =>  Promise.resolve(res.data))\n    .catch(\n      error => {\n        console.error({message:error})\n    })\n  }\n\n\n  edit = (id, userData) => {\n    return this.instance.put(`/edit/${id}`, userData)\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n\n  upload = (picture) => {\n    return this.instance.post('/upload', picture)\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n\n  logout = () => {\n    return this.instance.post('/logout')\n    .then(res => Promise.resolve(res.data))\n    .catch(error => console.error(error))\n  }\n}\n\nexport default AuthService","import React, { Component } from 'react'\n\nexport default class Hero extends Component {\n    render() {\n        return (\n            <div className=\"hero\">\n                <h2 className=\"title is-1\">Brand & tagline<br></br> Main page</h2>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport AuthService from \"../../../services/AuthService\";\nimport Hero from \"../../layout/Hero\";\n\nexport default class Signup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleFormSubmit = e => {\n    e.preventDefault();\n    const { history, setUser } = this.props;\n    this.authService.signup(this.state)\n    .then(user => {\n        setUser(user);\n        // todo This should redirect me to the admin panel\n        history.push(`/panel/${user.username}`);\n      },\n      (error) => {\n        console.error(error)\n      }\n    )  \n    };\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <section className=\"section auth-section\">\n        <div className=\"container columns\">\n        <div className=\"column is-half\">\n          {/* todo Here goes another component for the left para of the screen */}\n          <Hero></Hero>\n        </div>\n\n        <div className=\"column is-half form-container\">\n          <h3 className=\"title\">Signup</h3>\n          <form onSubmit={this.handleFormSubmit}>\n            <div className=\"field\">\n              <label className=\"label\" htmlFor=\"username\">\n                Username:\n              </label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  value={username}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"password\" className=\"label\">\n                Password:\n              </label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={this.handleChange}\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <input\n                type=\"submit\"\n                className=\"button is-link\"\n                value=\"Create account\"\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n      </section>\n\n    );\n  }\n}\n","import axios from \"axios\";\n\nclass ProjectService {\n  constructor() {\n    this.instance = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/project`,\n      withCredentials: true\n    });\n  }\n\n  fetchProjects = () => {\n    return this.instance\n      .get(\"/\")\n      .then(res => {\n        let arrData = Object.keys(res.data).map(key => {\n          return res.data[key];\n        });\n        return Promise.resolve(arrData);\n      })\n      .catch(error => console.error(error));\n  };\n\n  fetchOneProject = (projectPath) => {\n    return this.instance.get(`${projectPath}`)\n      .then(res => {\n        return Promise.resolve(res.data)\n      })\n      .catch(error => console.error(error));\n  };\n\n  createProject = project => {\n    return this.instance\n      .post(\"/new\", project)\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deleteProject = projectId => {\n    return this.instance\n      .delete(`/${projectId}`)\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  addColorToPalette = updateProjectParams => {\n    const { name, hexadecimal, path, colorId } = updateProjectParams;\n    return this.instance\n      .put(`/color/${path}/${colorId}?`, { name, hexadecimal })\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  getColorData  = (colorId) => {\n    return this.instance.get(`/color/${colorId}?`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n\n  deleteColor = (colorId) => {\n    console.log(\"Service\" + colorId)\n    return this.instance.delete(`/color/${colorId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  addTypeToTypeSet = updateProjectParams => {\n    const { fontFamily, type, path } = updateProjectParams;\n    console.log(fontFamily, type, path)\n    return this.instance\n      .put(`/type/${path}`, { fontFamily, type })\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  deleteType = (typeId) => {\n    return this.instance.delete(`/type/${typeId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  getGoogleFonts = () => {\n    console.log(\"service\")\n    return this.instance\n      .get(\"/getGoogleFonts\")\n      .then(res => {\n        console.log(\"back to service\")\n        console.log(\"res data\")\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  }\n\n  uploadAsset = (fileParams) => {\n    return this.instance.post(`/uploadAsset/${fileParams.path}`, fileParams.uploadData)\n    .then(res => {\n      return Promise.resolve(res.data)\n    })\n    .catch(error => console.error(error))\n  }\n\n  deleteAsset = (assetId) => {\n    return this.instance.delete(`/assets/${assetId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  addTextStyle = updateProjectParams => {\n\n    console.log(\"service\")\n    console.log(updateProjectParams)\n    \n    const { fontFamily, fontSize, fontWeight, lineHeight, letterSpacing, uppercase, name, path, styleId } = updateProjectParams;\n    return this.instance\n      .put(`/textStyle/${path}/${styleId}?`, { fontFamily, fontSize, fontWeight, lineHeight, letterSpacing, uppercase, name })\n      .then(res => {\n        return Promise.resolve(res.data);\n      })\n      .catch(error => console.error(error));\n  };\n\n  getTextStyleData  = (styleId) => {\n    console.log(\"service\")\n    console.log(styleId)\n    return this.instance.get(`/textstyle/${styleId}?`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  createNewRow = rowParams => {\n    const {path, layout} = rowParams\n    return this.instance\n      .post(`/newRow/${path}`, {layout})\n      .then(res => Promise.resolve(res.data))\n      .catch(error => console.error(error));\n  };\n\n  deleteRow = (rowId) => {\n    console.log(rowId)\n    return this.instance.delete(`/rows/${rowId}`)\n    .then(res => {\n      return Promise.resolve(res.data);\n    })\n    .catch(error => console.error(error));\n  }\n\n  updateRow = rowParams => {\n    const {typeOfContent, rowId, path} = rowParams\n\n    console.log(rowParams)\n\n    return this.instance.put(`/rows/${rowId}`, {typeOfContent, path})\n    .then(res => console.log(res))\n  }\n\n}\n\nexport default ProjectService;\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Project extends Component {\n    render() {\n\n        const { project } = this.props \n\n        return (\n            <div className=\"project-card card\">\n                <Link to={`/project/${project.path}`}><h2 className=\"title is-4 has-text-primary\">{project.title}</h2></Link>\n                <Link to={`/project/${project.path}/edit`} className=\"button is-small is-rounded\" onClick={() => this.props.setPath(project.path)}>Edit</Link>\n                <button className=\"button is-small is-rounded\" onClick={() => this.props.deleteProject(project)}>Delete</button>\n                {/* <button className=\"button is-small is-rounded\" onClick={() => this.props.setPath(project.path)}>SetPath to {project.path}</button> */}\n\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport { Link } from \"react-router-dom\";\nimport Project from \"./Project\";\n\nexport default class ProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      projects: null\n    };\n  }\n\n  componentDidMount() {\n    this.updateProjects();\n  }\n\n  updateProjects = () => {\n    this.projectService.fetchProjects().then(\n      projects => {\n        this.setState({ ...this.state, projects });\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  deleteProject = (project) => {\n    this.projectService.deleteProject(project.id).then(\n      () => {\n        this.updateProjects()\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  }\n\n  render() {\n    // const username = this.props.loggedInUser.username;\n    const { projects } = this.state;        \n    return (\n      <div>\n        <section className=\"section main-content\">\n          <div className=\"columns\">\n            <div className=\"column is-one-third\">\n              <div className=\"hero\">\n                  <h2 className=\"title is-1\">All Projects</h2>\n              </div>\n            </div>\n            <div className=\"column is-two-thirds projects-wrapper\">\n\n              {projects &&\n                projects.map(project => (\n                  <Project key={project.id} project={project} deleteProject={(project) => this.deleteProject(project)} setPath={(path) => this.props.setPath(path)}></Project>\n                ))}\n\n              {(projects === null || projects === [] || !projects) && (\n                <div>You dont have any projects yet</div>\n              )}\n\n              <Link to=\"/project/new\" className=\"project-card\">Create new project</Link>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nexport default function PrivateRoute({component: Component, user, activeProject, toggleMenu, menuIsOpen, addFontLinks,redirectPath, ...rest}) {\n  return (\n   <Route {...rest} render={(props) => {\n    {if(user) {\n      return <Component loggedInUser={user} activeProject={activeProject} toggleMenu={toggleMenu} menuIsOpen={menuIsOpen} {...props}/>\n     } else {\n       return <Redirect to={{pathname: redirectPath}}/>\n     }\n    }\n   }} />\n  )\n}","import React, { Component } from 'react';\n\nexport class LandingPage extends Component {\n    render() {\n        return (\n            <section className=\"section main-content\">\n                This will be a landing page\n            </section>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthService from '../../services/AuthService';\n\nexport default class Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n  }\n\n  render() {\n    const user = this.props.user;\n\n    return (\n      <nav className='navbar' role='navigation' aria-label='main navigation'>\n        \n        <div className='navbar-brand'>\n            <Link to='/' className='navbar-item'>\n              <img\n                src={`http://localhost:3000/logo.png`}\n                height='24'\n                alt='BrandLink'\n              ></img>\n            </Link>\n        </div>\n\n        <div id='navbarBasicExample' className='navbar-menu is-active'>\n          <div className='navbar-start'>\n            {user && \n              <Link to={`/panel/${user.username}`} className='back-projects-link navbar-item'>\n                <img src={`${process.env.REACT_APP_URL}/back.svg`}></img>\n                <span>Back to projects</span>\n              </Link>\n            }\n          </div>\n\n          <div className='navbar-end'>\n            <div className='navbar-item'>\n              <div className='buttons'>\n                {!user && (\n                  <React.Fragment>\n                    <Link to='/signup' className='button is-rounded'>\n                      Signup\n                    </Link>\n                    <Link to='/login' className='button is-rounded'>\n                      Login\n                    </Link>\n                  </React.Fragment>\n                )}\n                {user && (\n                  <React.Fragment>\n                    <Link\n                      to={`/panel/${user.username}`}\n                      className='navbar-item'\n                    >\n                      Admin Panel\n                    </Link>\n\n                    <Link to={`/profile/${user.id}`} className='navbar-item'>\n                      <div\n                        className='is-rounded profile-picture'\n                        style={{ backgroundImage: `url(${user.picture})` }}\n                      ></div>\n                      Hi, {user.username}\n                    </Link>\n\n                    <Link\n                      to='/'\n                      onClick={e => this.props.logout()}\n                      className='button is-rounded'\n                    >\n                      Logout\n                    </Link>\n                  </React.Fragment>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React from \"react\";\nimport AuthService from \"../../../services/AuthService\";\nimport Hero from \"../../layout/Hero\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      picture: \"\",\n      projects: []\n    };\n    this.authService = new AuthService();\n  }\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleLogin = e => {\n    e.preventDefault();\n\n    const { history, setUser } = this.props;\n    this.authService.login(this.state).then(\n      user => {\n        setUser(user);\n        \n        // todo This should redirect me to the admin panel\n        history.push(`/panel/${user.username}`);\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n  render() {\n    const { username, password } = this.state;\n    return (\n      <section className=\"section auth-section\">\n        <div className=\"container columns\">\n        <div className=\"column is-half\">\n          {/* todo Here goes another component for the left para of the screen */}\n          <Hero></Hero>\n        </div>\n\n        <div className=\"column is-half form-container\">\n          <h3 className=\"title\">Login</h3>\n          <form onSubmit={this.handleLogin}>\n            <div className=\"field\">\n              <label className=\"label\" htmlFor=\"username\">\n                Username:\n              </label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  value={username}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"password\" className=\"label\">\n                Password:\n              </label>\n              <div className=\"control\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  value={password}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"control\">\n              <input type=\"submit\" className=\"button is-link\" value=\"Log in\"></input>\n            </div>\n          </form>\n        </div>\n      </div>\n      </section>\n    );\n  }\n}\n","import React from \"react\";\nimport AuthService from \"../../../services/AuthService\";\n\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n\n    const { username, picture } = this.props.loggedInUser;\n\n    this.state = {\n      username: username,\n      picture : picture\n    };\n  }\n\n\n  handleUpload = (e) => {\n    const uploadData = new FormData();\n    const user = this.props.loggedInUser\n    uploadData.append('picture', e.target.files[0])\n\n    this.authService.upload(uploadData)\n    .then(\n      (data) => {\n        return this.setState({...this.state, picture: data.secure_url})\n      },\n      (error) => {\n        console.error(error)\n      }\n    ).then(() => {\n        return this.authService.edit(user.id, this.state)\n    })\n    .then(userUdated => console.log(userUdated))\n  }\n\n\n\n  render() {\n    const { username, picture } = this.state;\n    return (\n      <div className=\"column\">\n        <h3 className=\"title\">User details</h3>\n        <p>\n          Username: <span className=\"strong\">{username}</span>\n          <button className=\"button is-small is-rounded\">Edit username</button>\n        </p>\n        <p>\n          Password:\n          <button className=\"button is-small is-rounded\">Edit password</button>\n        </p>\n\n        <br />\n        <div>\n          <div className=\"is-rounded profile-picture\" style={{backgroundImage: `url(${picture})`}}></div>\n\n         <input type=\"file\" name=\"picture\" onChange={this.handleUpload}></input>\n\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nexport default class SideMenu extends Component {\n\n    render() {\n      const {user} = this.props\n        return (\n      <section className={`section side-menu ${this.props.menuIsOpen}`}>\n   \n          <Link to='/' className='navbar-item'>\n            <img\n              src={`http://localhost:3000/logo.png`}\n              height='24'\n              alt='BrandLink'\n            ></img>\n          </Link>\n        \n\n            <button className=\"btn-side-menu remove-btn\" onClick={this.props.toggleMenu}>\n              <img src={`${process.env.REACT_APP_URL}/menu.svg`}></img>\n            </button>\n\n            {this.props.children}\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\n\nexport default class BrandHeader extends Component {\n    \n    previousPage = () => {\n        let url = this.props.url;\n        return <Link to={this.props.history.push(url)}>Link</Link>\n    }\n\n    render() {\n    return (\n      <div className=\"side-menu-header\">\n        <button className=\"remove-btn back-link\" onClick={this.previousPage}>\n        <img src={`${process.env.REACT_APP_URL}/back.svg`}></img> <span className=\"is-size-5 has-text-weight-medium\t\">Back</span>\n        </button>\n        {this.props.subtitle &&\n          <h3 className=\"subtitle is-5 has-text-weight-semibold\">{this.props.subtitle}</h3>\n        }\n        <h2 className=\"title is-2 has-text-weight-bold\">{this.props.title}</h2>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ProjectService from '../../services/ProjectService';\n\nexport default class MainContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    this.projectService = new ProjectService();\n  }\n\n  fetchOneProject = () => {\n    const { path } = this.props;\n    this.projectService.fetchOneProject(path).then(project => {\n      this.setState({\n        ...this.state,\n        ...project\n      })\n    });\n  };\n\n  addNewRow = layout => {\n    const { path } = this.props;\n    this.projectService.createNewRow({ path, layout: layout }).then(\n      projectWithRowAdded => {\n        console.log(projectWithRowAdded)\n        this.setState({\n          ...this.state,\n          rows: projectWithRowAdded.rows\n        });\n      },\n      error => console.log(error)\n    );\n  };\n\n  deleteRow = rowId => {\n    console.log(rowId);\n    this.projectService.deleteRow(rowId).then(\n      project => {\n        this.fetchOneProject();\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  addContent = (typeOfContent, rowId) => {\n    const { path } = this.props;\n\n    this.projectService.updateRow({typeOfContent, rowId, path})\n    .then(rowUpdated => console.log(rowUpdated))\n  }\n\n  componentDidMount() {\n    this.fetchOneProject();\n    console.log(this.state)\n  }\n\n  render() {\n    return (\n      <div\n        className={`main-content section is-paddingless\t ${this.props.menuIsOpen}`}\n      >\n        <section className='section rows-container is-paddingless\t'>\n         \n          {this.state.rows &&\n            this.state.rows.map((row,rowIdx) => (\n             \n              <div key={row._id} className='columns is-multiline is-marginless'>\n                \n                {row.slots.map((slot, slotIdx) => (\n                  <div key={slotIdx} id={`slot-${rowIdx}-${slotIdx}`} className={`${row.layout} column row slot`}>\n\n                        {/* If row content is empty, show dropdown menu */}\n                        {/* Make this component later */}\n                        <div className='dropdown is-hoverable'>\n                          <div className='dropdown-trigger'>\n                              <button className='button' aria-haspopup='true' aria-controls='dropdown-menu4'>\n                                <span>Add content</span>\n                                <span className='icon is-small'>\n                                  <img src={`${process.env.REACT_APP_URL}/chevron-down.svg`}></img>\n                                </span>\n                              </button>\n                          </div>\n                          <div\n                            className='dropdown-menu'\n                            id='dropdown-menu4'\n                            role='menu'\n                          >\n                            <div className='dropdown-content'>\n                              <div className='dropdown-item'>\n                                <div>\n                                  <button onClick={this.addContent} className='button'>Text editor</button>\n                                </div>\n                                <div>\n                                  <button onClick={()=>this.addContent(\"colorPalette\", row._id)} className='button'>Color Palette</button>\n                                </div>\n                                <div>\n                                  <button onClick={this.addContent} className='button'>Image</button>\n                                </div>\n                                <div>\n                                  <button onClick={this.addContent} className='button'>\n                                    Typography display\n                                  </button>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n\n                        {/* If there'is content in the slot */}\n                        {/* Print component with slot data */}\n                        \n                  </div>\n                ))}\n                <button\n                  className='close'\n                  onClick={() => this.deleteRow(row._id)}\n                >\n                  Cerrar\n                </button>\n              </div>\n            ))}\n            \n\n          <div className='column is-full layout-btn-container'>\n            <a className=\"header\">Add new row</a>\n            <div className='inner'>\n              <div className='layout-btn' onClick={() => this.addNewRow('is-full')}>\n                <img src={`${process.env.REACT_APP_URL}/full.svg`}></img>\n                Full\n              </div>\n\n              <div className='layout-btn' onClick={() => this.addNewRow('is-half')}>\n                <img src={`${process.env.REACT_APP_URL}/half.svg`}></img>\n                Half\n              </div>\n\n              <div\n                className='layout-btn'\n                onClick={() => this.addNewRow('is-one-third')}\n              >\n                <img src={`${process.env.REACT_APP_URL}/third.svg`}></img>\n                Third\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ProjectService from '../../services/ProjectService';\nimport SideMenu from '../layout/SideMenu';\nimport BrandHeader from '../layout/BrandHeader';\nimport MainContent from '../layout/MainContent';\n\nexport default class NewProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      //todo: add remaining fields\n      title: '',\n      path: '',\n      colorPalette: null\n    };\n  }\n\n  handleBlur = e => {\n    let pathSuggestion = e.target.value.toLowerCase().replace(/ /g, '-');\n    this.setState({ ...this.setState, path: pathSuggestion });\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleSubmit = e => {\n    const { title, path } = this.state;\n    const user = this.props.loggedInUser;\n    const { history } = this.props;\n    e.preventDefault();\n    this.projectService.createProject({ title, path }, user._id).then(\n      () => {\n        this.setState({ ...this.state, title: '', path: '' });\n        history.push(`/project/${path}/edit`);\n      },\n      error => console.error(error)\n    );\n  };\n\n  render() {\n    const { title, path } = this.state;\n    const user = this.props.loggedInUser;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n        <BrandHeader\n          title='New Project'\n          {...this.props}\n          url={`/panel/${user.username}`}\n        ></BrandHeader>{' '}\n        <form onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='title' className='label'>\n              Title:\n            </label>\n            <div className='control'>\n              <input\n                type='text'\n                name='title'\n                className='input'\n                value={title}\n                placeholder='Introduce the title for your project'\n                onChange={this.handleChange}\n                onBlur={this.handleBlur}\n              />\n            </div>\n          </div>\n\n          <div className='field'>\n            <label htmlFor='path' className='label'>\n              Path:\n            </label>\n            <div className='control'>\n              <input\n                type='text'\n                name='path'\n                className='input'\n                value={path}\n                placeholder='Introduce the url for your project'\n                onChange={this.handleChange}\n              />\n            </div>\n          </div>\n\n          <div className='control'>\n            <input\n              type='submit'\n              className='button is-link'\n              value='Start project'\n            ></input>\n          </div>\n        </form>\n      </SideMenu>\n      {/* Aqui tiene que haber un main content adaptado, porque aún no existe el proyecto*/}\n        </ >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport ProjectService from \"../../services/ProjectService\";\nimport MainContent from '../layout/MainContent';\n\nexport default class EditProject extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: \"\",\n      title: \"\"\n    };\n  }\n\n  fetchOneProject = () => {\n    const path = this.props.match.params.path;\n    this.projectService.fetchOneProject(path).then(project => {\n      this.setState({\n        ...this.state,\n        ...project\n      });\n    });\n  };\n\n  componentDidMount(){\n    this.fetchOneProject();\n  }\n\n  render() {\n    return (\n      < >\n      <SideMenu\n      toggleMenu={this.props.toggleMenu}\n      menuIsOpen={this.props.menuIsOpen}\n      >   \n        <BrandHeader\n          title={this.state.title}\n          subtitle='Brand presets'\n          {...this.props}\n          url={`/panel/${this.props.loggedInUser}`}\n        ></BrandHeader>\n\n        <p>Let's begin! Start by adding some brand presets to your project</p>\n\n        <ul className='project-presets-list'>\n          <li>\n            <Link to={`${this.props.location.pathname}/typeset`}>\n              <h3 className='is-size-5 has-text-primary'>Typography</h3>\n            </Link>\n          </li>\n          <li>\n            <Link to={`${this.props.location.pathname}/textStyles`}>\n              <h3 className='is-size-5 has-text-primary'>Text Styles</h3>\n            </Link>\n          </li>\n          <li>\n            <Link to={`${this.props.location.pathname}/colorPalette`}>\n              <h3 className='is-size-5 has-text-primary'>Color Palette</h3>\n            </Link>\n          </li>\n          <li>\n            <Link to={`${this.props.location.pathname}/assets`}>\n              <h3 className='is-size-5 has-text-primary'>Assets</h3>\n            </Link>\n          </li>\n        </ul>\n      </SideMenu>\n      <MainContent\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          path={this.props.match.params.path}\n        >\n          \n        </MainContent>\n        </ >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\n\nexport default class ColorPalette extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      colorPalette: null\n    };\n  }\n\n  fetchOneProject = () => {\n    const path = this.props.match.params.path;\n\n    this.projectService.fetchOneProject(path).then(project => {\n      this.setState({\n        ...this.state,\n        ...project\n      });\n    });\n  };\n\n  deleteColor = colorId => {\n    console.log('Delete method in component color palette' + colorId);\n    this.projectService.deleteColor(colorId).then(\n      project => {\n        this.fetchOneProject(project.path);\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.fetchOneProject();\n  }\n\n  render() {\n    const { path } = this.props.match.params;\n    const { colorPalette } = this.state;\n\n    return (\n      <>\n        <SideMenu\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n        >\n          <BrandHeader\n            title='Color Palette'\n            {...this.props}\n            url={`/project/${path}/edit`}\n          ></BrandHeader>\n\n          <div className='content'>\n            <div className='color-palette columns is-multiline'>\n              {colorPalette &&\n                colorPalette.map(color => (\n                  <div className='column is-full box' key={color._id}>\n                    <div className='color'>\n                      <div\n                        className='circle-color'\n                        style={{ backgroundColor: color.hexadecimal }}\n                      ></div>\n                      <span>{color.name}</span>\n                    </div>\n                    <div className='is-grouped'>\n                      <Link\n                        to={`/project/${path}/edit/colorPalette/new/${color._id}`}\n                        className='button is-rounded is-small is-success is-outlined'\n                      >\n                        Edit\n                      </Link>\n                      <button\n                        onClick={() => this.deleteColor(color._id)}\n                        className='button is-rounded is-small is-danger is-outlined'\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                ))}\n\n              {!colorPalette ||\n                (!colorPalette.length && (\n                  <div>\n                    You dont have any color swatch yet. Add your first now.\n                  </div>\n                ))}\n            </div>\n\n            <div className='control'>\n              <Link\n                to={`/project/${path}/edit/colorPalette/new`}\n                className='button is-link'\n              >\n                Add new color\n              </Link>\n            </div>\n          </div>\n        </SideMenu>\n        <MainContent\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          path={this.props.match.params.path}\n        >\n          \n        </MainContent>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport BrandHeader from \"../layout/BrandHeader\";\nimport SideMenu from \"../layout/SideMenu\";\nimport MainContent from \"../layout/MainContent\";\n\nexport default class NewColor extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      name: \"\",\n      hexadecimal: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getColorData();\n  }\n\n  getColorData = () => {\n    const { colorId } = this.props.match.params;\n\n    if (colorId !== undefined) {\n      this.projectService.getColorData(colorId).then(\n        colorData => {\n          console.log(colorData);\n          let color = colorData.colorPalette.filter(\n            color => color._id === colorId\n          );\n          this.setState({\n            ...this.state,\n            name: color[0].name,\n            hexadecimal: color[0].hexadecimal\n          });\n        },\n        error => {\n          const { message } = error;\n          console.error(message);\n        }\n      );\n    }\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, hexadecimal } = this.state;\n    const { path, colorId } = this.props.match.params;\n    const { history } = this.props;\n\n    this.projectService\n      .addColorToPalette({ name, hexadecimal, path, colorId })\n      .then(\n        () => {\n          this.setState({ ...this.state, name: \"\", hexadecimal: \"\" });\n          history.push(`/project/${path}/edit/colorPalette`);\n        },\n        error => console.error(error)\n      );\n  };\n\n  render() {\n    const { name, hexadecimal } = this.state;\n    const { colorId, path } = this.props.match.params;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n        {colorId && (\n          <BrandHeader\n            title=\"Edit color\"\n            subtitle=\"Color Palette\"\n            {...this.props}\n            url={`/project/${path}/edit/colorPalette`}\n          ></BrandHeader>\n        )}\n        {!colorId && (\n          <BrandHeader\n            title=\"New color\"\n            subtitle=\"Color Palette\"\n            {...this.props}\n            url={`/project/${path}/edit/colorPalette`}\n          ></BrandHeader>\n        )}\n\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"field\">\n            <label htmlFor=\"title\" className=\"label\">\n              Name:\n            </label>\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                className=\"input\"\n                value={name}\n                placeholder=\"Introduce the title for your project\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"field\">\n            <label htmlFor=\"path\" className=\"label\">\n              Hexadecimal:\n            </label>\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                name=\"hexadecimal\"\n                className=\"input\"\n                value={hexadecimal}\n                placeholder=\"Introduce the url for your project\"\n                onChange={this.handleChange}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"control\">\n            {!colorId && (\n              <input\n                type=\"submit\"\n                className=\"button is-link\"\n                value=\"Save Color\"\n              ></input>\n            )}\n\n            {colorId && (\n              <input\n                type=\"submit\"\n                className=\"button is-link\"\n                value=\"Edit Color\"\n              ></input>\n            )}\n          </div>\n        </form>\n      </SideMenu>\n      <MainContent\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          path={this.props.match.params.path}\n        >\n          \n        </MainContent>\n            </ >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\n\nexport default class TypeSet extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      typeset: null\n    };\n  }\n\n  fetchOneProject = () => {\n    const path = this.props.match.params.path;\n    this.projectService.fetchOneProject(path).then(project => {\n      this.setState({\n        ...this.state,\n        ...project\n      });\n    });\n  };\n\n  deleteType = typeId => {\n    console.log('Delete method in component typeset' + typeId);\n    this.projectService.deleteType(typeId).then(\n      project => {\n        console.log(project);\n        this.fetchOneProject(project.path);\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  componentDidMount() {\n    this.fetchOneProject();\n  }\n\n  render() {\n    const { path } = this.props.match.params;\n    const { typeset } = this.state;\n\n    console.log(typeset)\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n      <BrandHeader\n        title='Typography set'\n        {...this.props}\n        url={`/project/${path}/edit`}\n      ></BrandHeader>\n\n          <div className='type-set'>\n            <div className=\"content\">\n            {typeset &&\n              typeset.map(font => (\n                <div className='box' key={font._id}>\n                    <span style={{ fontFamily: font.fontFamily }}>\n                      {font.fontFamily}\n                    </span>\n                    <button\n                      onClick={() => this.deleteType(font._id)}\n                      className='button is-rounded is-small is-danger is-outlined'\n                    >\n                      Delete\n                    </button>                    \n                </div>\n              ))}\n            {!typeset || !typeset.length && \n              <div>You dont have any fonts yet. Add your first font now.</div>\n            }\n\n            </div>\n\n            <div className='field fonts-buttons is-group'>\n            <div className='google-fonts-button control'>\n              <Link\n                to={`/project/${path}/edit/typeSet/new/google-font?`}\n                className='button is-link'\n              >\n                Add Google Font\n              </Link>\n            </div>\n\n            <div className='adobe-fonts-button control'>\n              <Link\n                to={`/project/${path}/edit/typeSet/new/adobe-font?`}\n                className='button is-link'\n              >\n                Add Adobe Font\n              </Link>\n            </div>\n          </div>\n          </div>\n\n          \n      </SideMenu>\n      <MainContent\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          path={this.props.match.params.path}\n        >\n          \n        </MainContent>\n        </ >\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport FontPicker from \"font-picker-react\";\n\nexport default class MyFontPicker extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fontFamily: \"Open Sans\",\n      type : \"Google Fonts\"\n    };\n  }\n\n  recordType = nextFont => {\n    this.setState({\n      ...this.state,\n      fontFamily: nextFont.family,\n    });\n  };\n\n\n  render() {\n    // todo: .env not working on client side\n    // console.log(process.env.REACT_APP_GFONTS_KEY)\n    return (\n      <div className=\"font-picker\">\n\n        <FontPicker\n          limit=\"100\"\n          apiKey={process.env.REACT_APP_GFONTS_KEY}\n          activeFontFamily={this.state.fontFamily}\n          onChange={nextFont => this.recordType(nextFont)}\n        />\n\n        <div className=\"container is-fullhd preview-text\">\n          <div className=\"notification apply-font\">\n            The font will be applied to this text.\n          </div>\n        </div>\n\n        <button onClick={() => this.props.saveType(this.state)} className=\"button is-link\">Save Type</button>\n\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\n\nexport default class AdobeFontsImporter extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      projectId: \"gnh6ghd\",\n      token: \"0bb2988cbd31ce44bda853c78df227e26a0d86c8\"\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const projectId = document.querySelector('input[name=\"projectId\"]').value;\n    const token = document.querySelector('input[name=\"token\"]').value;\n\n    console.log({ projectId, token });\n    console.log(\"component\")\n\n    this.projectService.getGoogleFonts()\n    .then(fonts => { \n      console.log(\"back to component\")\n      this.setState({\n        ...this.state,\n        ...fonts\n      })\n    },\n      error => console.error(error)\n    );\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ ...this.state, [name]: value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\" className=\"label\">\n            Project Id:\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              name=\"projectId\"\n              value={this.state.projectId}\n              className=\"input\"\n              placeholder=\"Introduce the project id of your project\"\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"path\" className=\"label\">\n            Token:\n          </label>\n          <div className=\"control\">\n            <input\n              type=\"password\"\n              name=\"token\"\n              value={this.state.token}\n              className=\"input\"\n              placeholder=\"Introduce the token for your Adobe Fonts account\"\n              onChange={this.handleChange}\n              required\n            />\n          </div>\n        </div>\n\n        <div className=\"control\">\n          <input\n            type=\"submit\"\n            className=\"button is-link\"\n            value=\"Import fonts\"\n          ></input>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport MyFontPicker from \"../utils/MyFontPicker\";\nimport BrandHeader from \"../layout/BrandHeader\";\nimport AdobeFontsImporter from \"../utils/AdobeFontsImporter\";\nimport SideMenu from \"../layout/SideMenu\";\nimport MainContent from \"../layout/MainContent\";\n\nexport default class NewType extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n  }\n\n  saveType = typeObj => {\n    const { fontFamily, type } = typeObj;\n    const { path } = this.props.match.params;\n    const { history } = this.props;\n\n    this.projectService.addTypeToTypeSet({ fontFamily, type, path }).then(\n      () => {\n        this.setState({ ...this.state, fontFamily: \"\" });\n        history.push(`/project/${path}/edit/typeSet`);\n      },\n      error => console.error(error)\n    );\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    const { source, path } = this.props.match.params;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n      <div className=\"content\">\n      {source === \"google-font\" && (\n          <>\n            <BrandHeader\n              title=\"Google Fonts\"\n              subtitle=\"Typeset\"\n              {...this.props}\n              url={`/project/${path}/edit/typeset`}\n            ></BrandHeader>\n            <MyFontPicker class=\"select\" saveType={typeObj => this.saveType(typeObj)} />\n          </>\n        )}\n\n        {source === \"adobe-font\" && (\n          <>\n            <BrandHeader\n              title=\"Adobe Fonts\"\n              subtitle=\"Typeset\"\n              {...this.props}\n              url={`/project/${path}/edit/typeset`}\n            ></BrandHeader>\n            <AdobeFontsImporter></AdobeFontsImporter>\n          </>\n        )}\n      </div>\n      </SideMenu>\n      <MainContent\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          path={this.props.match.params.path}\n        >\n          \n        </MainContent>\n      </ >\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Dropzone from 'react-dropzone';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\n\nexport default class Assets extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      assets: null\n    };\n    this.loadingImg = '';\n    this.loadingParent = '';\n  }\n\n  fetchOneProject = () => {\n    const path = this.props.match.params.path;\n    this.projectService.fetchOneProject(path).then(project => {\n      this.setState({\n        ...this.state,\n        ...project\n      });\n    });\n  };\n\n  handleUpload = file => {\n    const uploadData = new FormData();\n    uploadData.append('file', file[0]);\n    const { path } = this.props.match.params;\n\n    this.loadingImg = document.createElement('img');\n    this.loadingImg.setAttribute('src', 'http://localhost:3000/loading.svg');\n    this.loadingParent = document.querySelector('.file-label');\n    this.loadingParent.appendChild(this.loadingImg);\n\n    this.projectService\n      .uploadAsset({ uploadData, path })\n      .then(() => {\n        this.fetchOneProject();\n        this.loadingParent.removeChild(this.loadingImg);\n      })\n      .catch(error => console.log(error));\n  };\n\n  deleteAsset = assetId => {\n    this.projectService.deleteAsset(assetId).then(\n      project => {\n        this.fetchOneProject();\n      },\n      error => {\n        const { message } = error;\n        console.error(message);\n      }\n    );\n  };\n\n  //   editName = () => {\n  //     // Append one child and remove another\n\n  //     const nameDOMEL = document.querySelector('.asset-name')\n  //     nameDOMEL.childNodes[0].style.display = \"none\"\n  //     nameDOMEL.childNodes[1].style.display = \"block\"\n  //   }\n\n  //   editInputName = (assetId) => {\n  //     let stateCopy = Object.assign({}, this.state);\n\n  //     console.log(stateCopy.assets, assetId)\n\n  //     stateCopy.assets.map(asset => {\n  //       if(assetId === asset._id) {\n  //         return asset\n  //       }\n  //     })\n  // //     stateCopy.assets[key].upVotes += 1;\n  // // this.setState(stateCopy);\n  // //     this.setState({...this.state, assets})\n  //   }\n\n  componentDidMount() {\n    this.fetchOneProject();\n  }\n\n  render() {\n    const { assets } = this.state;\n    const { path } = this.props.match.params;\n    return (\n      <React.Fragment>\n        <SideMenu\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n        >\n          <BrandHeader\n            title='Assets Library'\n            {...this.props}\n            url={`/project/${path}/edit`}\n          ></BrandHeader>\n\n          <div>\n            <Dropzone\n              onDrop={acceptedFiles => this.handleUpload(acceptedFiles)}\n            >\n              {({ getRootProps, getInputProps }) => (\n                <section class='file-label'>\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <p>\n                      Drag 'n' drop some files here, or click to select files\n                    </p>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n            <p>File formats allowed: .png, .jpg, .pdf, .zip, .svg, .gif</p>\n\n            <div className='assets-list columns is-multiline'>\n              {assets &&\n                assets.map(asset => (\n                  <div key={asset._id}>\n                    <figure className='column is-half'>\n                      <button\n                        onClick={() => this.deleteAsset(asset._id)}\n                        className='button is-rounded is-small is-danger is-outlined'\n                      >\n                        Delete\n                      </button>\n                      {(asset.format === 'png' ||\n                        asset.format === 'jpg' ||\n                        asset.format === 'svg' ||\n                        asset.format === 'gif') && (\n                        <span>\n                          <img src={asset.secure_url} alt='' />\n                        </span>\n                      )}\n                      {asset.format === 'pdf' && <p>esto es un pdf</p>}\n                      {asset.format === 'zip' && (\n                        <p className='box'>esto es un zip</p>\n                      )}\n                    </figure>\n                    {/* <div className=\"asset-name\" onClick={this.editName}>\n                        <a>{asset.name}</a>\n                        <input style={{display: 'none'}} type=\"text\" value={asset.name} onChange={this.editInputName(asset._id)}/>\n                      </div> */}\n                  </div>\n                ))}\n\n              {!assets && <div>You dont have any assets yet</div>}\n            </div>\n          </div>\n        </SideMenu>\n        <MainContent\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          path={this.props.match.params.path}\n        >\n          \n        </MainContent>\n      </React.Fragment>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectService from '../../services/ProjectService';\nimport BrandHeader from '../layout/BrandHeader';\nimport SideMenu from '../layout/SideMenu';\nimport MainContent from '../layout/MainContent';\n\nexport default class TextStyles extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n    this.state = {\n      path: '',\n      title: '',\n      typeset: [],\n      textstyles: []\n    };\n  }\n\n  fetchOneProject = () => {\n    const path = this.props.match.params.path;\n    this.projectService.fetchOneProject(path).then(project => {\n      this.setState({\n        ...this.state,\n        ...project\n      });\n    });\n  };\n\n  componentDidMount() {\n    this.fetchOneProject();\n  }\n\n  render() {\n    const { path } = this.props.match.params;\n    const { textstyles } = this.state;\n\n    return (\n      < >\n      <SideMenu\n        toggleMenu={this.props.toggleMenu}\n        menuIsOpen={this.props.menuIsOpen}\n      >\n        <BrandHeader\n          title='Text Styles'\n          {...this.props}\n          url={`/project/${path}/edit`}\n        ></BrandHeader>\n        <div className='content'>\n          <div className='type-set columns is-multiline'>\n            {textstyles && \n            <p>This are some default styles you cant edit</p>}\n            {textstyles &&\n              textstyles.map(style => (\n                <div className='column is-full box' key={style._id}>\n                  <div className='element'>\n                    <span\n                      style={{\n                        fontFamily: style.fontFamily,\n                        fontWeight: style.fontWeight,\n                        fontSize: `${style.fontSize}rem`,\n                        letterSpacing: `${style.letterSpacing}rem`,\n                        lineHeight: style.lineHeight\n                      }}\n                    >\n                      {style.name}\n                    </span>\n                  </div>\n                  <div className='is-grouped'>\n                    <Link\n                      to={{\n                        pathname: `${this.props.location.pathname}/new/${style._id}`,\n                        state: this.state\n                      }}\n                      className='button is-rounded is-small is-success is-outlined'\n                    >\n                      Edit\n                    </Link>\n                  </div>\n                </div>\n              ))}\n\n            {!textstyles && <div>You dont have any text styles yet</div>}\n          </div>\n\n          {/* <div className=\"field fonts-buttons is-group\">\n                  <div className=\"control\">\n                    <Link\n                      to={`${this.props.location.pathname}/new/}`}\n                      className=\"button is-link\"\n                    >\n                      Add New Text Style\n                    </Link>\n                  </div>\n                </div> */}\n        </div>\n      </SideMenu>\n      <MainContent\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          path={this.props.match.params.path}\n        >\n          \n        </MainContent>\n        </ >\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ProjectService from \"../../services/ProjectService\";\nimport BrandHeader from \"../layout/BrandHeader\";\nimport SideMenu from \"../layout/SideMenu\";\nimport MainContent from \"../layout/MainContent\";\n\nexport default class NewTextStyle extends Component {\n  constructor(props) {\n    super(props);\n    this.projectService = new ProjectService();\n\n    this.state = {\n      textstyle: {},\n      typeset: []\n    };\n\n    this.uppercaseValue = \"none\";\n  }\n\n  componentDidMount() {\n    this.getTextStyleData();\n  }\n\n  getTextStyleData = () => {\n    const { styleId } = this.props.match.params;\n\n    if (styleId !== undefined) {\n      this.projectService.getTextStyleData(styleId).then(\n        textstyleData => {\n\n          let textStyle = textstyleData.textstyles.filter(\n            style => style._id === styleId\n          );\n          \n          this.setState({\n            ...this.state,\n            textstyle: textStyle[0],\n            typeset : textstyleData.typeset\n          });\n        },\n        error => {\n          const { message } = error;\n          console.error(message);\n        }\n      );\n    }\n  };\n\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ \n      ...this.state,  textstyle : { ...this.state.textstyle, [name]: value }});\n  };\n\n  handleCheckbox = e => {\n    let uppercase = !this.state.uppercase;\n    this.setState({ ...this.state, uppercase: uppercase });\n    this.uppercaseValue = !this.state.uppercase ? \"uppercase\" : \"none\";\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { path, styleId } = this.props.match.params;\n    const { history } = this.props;\n\n    console.log(this.state)\n    this.projectService\n      .addTextStyle({ ...this.state.textstyle, path, styleId })\n      .then(\n        () => {\n          this.setState({\n            ...this.state,\n            name: \"\",\n            fontFamily: \"\",\n            fontSize: 1,\n            fontWeight: null,\n            lineHeight: 1,\n            letterSpacing: 0,\n            uppercase: false\n          });\n          history.push(`/project/${path}/edit/textStyles`);\n        },\n        error => console.error(error)\n      );\n  };\n\n  render() {\n    const { path } = this.props.match.params;\n    const { typeset }  = this.state\n    const {\n      name,\n      fontFamily,\n      fontSize,\n      fontWeight,\n      lineHeight,\n      letterSpacing\n    } = this.state.textstyle;\n\n    return (\n      < >\n      <SideMenu toggleMenu={this.props.toggleMenu} menuIsOpen={this.props.menuIsOpen}>\n            <BrandHeader\n                title={name}\n                subtitle=\"Text Styles\"\n                {...this.props}\n                url={`/project/${path}/edit/textStyles`}\n              ></BrandHeader>\n\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"field\">\n                  <label htmlFor=\"fontFamily\" className=\"label\">\n                    Font Family:\n                  </label>\n                  <div className=\"control\">\n                    {typeset && (\n                      <select\n                        className=\"select large\"\n                        name=\"fontFamily\"\n                        value={fontFamily}\n                        onChange={this.handleChange}\n                      >\n                        <option\n                          value=\"Select font family\"\n                        >\n                          Select a font family\n                        </option>\n                        {typeset.map((font, idx) => {\n                          return (\n                            <option key={idx} value={font.fontFamily}>\n                              {font.fontFamily}\n                            </option>\n                          );\n                        })}\n                      </select>\n                    )}\n\n                    {!typeset && (\n                      <p>You haven't add any font to TypeSet yet. Go now</p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"fontWeight\" className=\"label\">\n                    Font Weight:\n                  </label>\n                  <div className=\"control\">\n                    <select\n                      className=\"select large\"\n                      name=\"fontWeight\"\n                      value={fontWeight}\n                      onChange={this.handleChange}\n                    >\n                      <option value=\"100\">Light</option>\n                      <option value=\"400\">Regular</option>\n                      <option value=\"500\">Semibold</option>\n                      <option value=\"600\">Bold</option>\n                      <option value=\"800\">Black</option>\n                    </select>\n\n                    {/* for this to work right i will new to now what font family is \n                    going to be in user, and retrieve the weights avaibable for it from Google\n                    Fonts or Adobe Fonts (or custom source, if i get to implement that) */}\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"fontSize\" className=\"label\">\n                    Font Size:\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      type=\"range\"\n                      name=\"fontSize\"\n                      min=\"1\"\n                      max=\"12\"\n                      step=\"0.25\"\n                      value={fontSize}\n                      onChange={this.handleChange}\n                    />\n                    <span>{fontSize} rem</span>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"lineHeight\" className=\"label\">\n                    Line Height:\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      type=\"range\"\n                      name=\"lineHeight\"\n                      value={lineHeight}\n                      onChange={this.handleChange}\n                      min=\"0\"\n                      max=\"2\"\n                      step=\"0.1\"\n                    />\n                    <span>{lineHeight}</span>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label htmlFor=\"letterSpacing\" className=\"label\">\n                    Letter Spacing\n                  </label>\n                  <div className=\"control\">\n                    <input\n                      type=\"range\"\n                      name=\"letterSpacing\"\n                      min=\"-0.25\"\n                      max=\"0.25\"\n                      step=\"0.1\"\n                      value={letterSpacing}\n                      onChange={this.handleChange}\n                    />\n                    <span>{letterSpacing} rem</span>\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <div className=\"control\">\n                    <input\n                      type=\"checkbox\"\n                      name=\"uppercase\"\n                      onChange={this.handleCheckbox}\n                    />\n                    <span>Text to uppercase</span>\n                  </div>\n                </div>\n\n                <div className=\"preview-text box\">\n                  <p\n                    style={{\n                      fontFamily,\n                      fontSize: `${fontSize}rem`,\n                      fontWeight,\n                      lineHeight,\n                      letterSpacing: `${letterSpacing}rem`,\n                      textTransform: this.uppercaseValue\n                    }}\n                  >\n                    Lorem ipsum dolor sit amet consecteteur adipiscing elit\n                  </p>\n                </div>\n\n                <div className=\"control\">\n                  <input\n                    type=\"submit\"\n                    className=\"button is-link\"\n                    value=\"Save Text Style\"\n                  ></input>\n                </div>\n              </form>\n      </SideMenu>\n      <MainContent\n          toggleMenu={this.props.toggleMenu}\n          menuIsOpen={this.props.menuIsOpen}\n          path={this.props.match.params.path}\n        >\n          \n        </MainContent>\n            </ >\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.scss\";\n\nimport { Switch, Route } from \"react-router-dom\";\nimport AuthService from \"./services/AuthService\";\nimport Signup from \"./components/auth/Signup/Signup\";\nimport ProjectList from \"./components/project/ProjectList\";\nimport PrivateRoute from \"./guards/PrivateRoute\";\nimport { LandingPage } from \"./components/landingPage/LandingPage\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Login from \"./components/auth/Login/Login\";\nimport Profile from \"./components/auth/profile/Profile\";\nimport NewProject from \"./components/project/NewProject\";\nimport EditProject from \"./components/project/EditProject\";\nimport ColorPalette from \"./components/brandPresets/ColorPalette\";\nimport NewColor from \"./components/brandPresets/NewColor\";\nimport TypeSet from \"./components/brandPresets/TypeSet\";\nimport NewType from \"./components/brandPresets/NewType\";\nimport ProjectService from \"./services/ProjectService\";\nimport Assets from \"./components/brandPresets/Assets\";\nimport TextStyles from \"./components/brandPresets/TextStyles\";\nimport NewTextStyle from \"./components/brandPresets/NewTextStyle\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.authService = new AuthService();\n    this.projectService = new ProjectService();\n    this.state = {\n      user: null,\n      activeProject: \"\",\n      menuIsOpen: \"show\"\n    };\n  }\n\n  toggleMenu = () => {\n    let toggleClass = this.state.menuIsOpen === \"show\" ? \"hide\" : \"show\";\n    this.setState({\n      ...this.state,\n      menuIsOpen: toggleClass\n    });\n  };\n\n  setUser = user => {\n    this.setState({ ...this.state, user });\n  };\n\n  fetchUser = () => {\n    if (this.state.user === null) {\n      this.authService\n        .loggedInUser()\n        .then(\n          user => {\n            this.setUser(user);\n          },\n          error => {\n            this.setUser(false);\n          }\n        )\n        .catch(error => {\n          this.setUser(false);\n        });\n    }\n  };\n\n  logout = () => {\n    this.authService\n      .logout()\n      .then(payload => {\n        this.setState({ ...this.state, user: null });\n      })\n      .catch(err => console.log(err));\n  };\n\n  setPath = path => {\n    this.projectService.fetchOneProject(path).then(project => {\n      this.setState({\n        ...this.state,\n        activeProject: project\n      });\n\n      // this.addFontsLinks()\n      this.state.activeProject.typeset.map(type => {\n        this.addFontsLinks(type.fontFamily);\n      });\n    });\n  };\n\n  addFontsLinks = type => {\n    const link = document.createElement(\"link\");\n    link.setAttribute(\n      \"href\",\n      `https://fonts.googleapis.com/css?family=${type.replace(\n        \" \",\n        \"+\"\n      )}&display=swap`\n    );\n    link.setAttribute(\"rel\", `stylesheet`);\n    document.head.appendChild(link);\n  };\n\n  componentDidMount() {\n    this.fetchUser();\n    // this.addFontsLinks()\n  }\n\n  render() {\n    this.fetchUser();\n    const { user, activeProject, menuIsOpen } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* The navbar has to pass the username to the profile menu link */}\n        {/* I need to pass match (the props) so I cant redirect to home after logout*/}\n        <Navbar user={user} logout={this.logout}></Navbar>\n        <>\n          {user && (\n            <Switch>\n              <Route exact path=\"/login\" render={match => <Login {...match} setUser={this.setUser} />}/>\n              <Route exact path=\"/signup\" render={match => <Signup {...match} setUser={this.setUser} />}/>\n              <Route exact path=\"/\" component={LandingPage} />\n\n              {/* This is a private route, as you have to be loggedin to access your admin panel */}\n              <PrivateRoute\n                exact\n                path=\"/profile/:id\"\n                user={user}\n                redirectPath=\"/login\"\n                component={Profile}\n              />\n\n              {/* <PrivateRoute exact path=\"/panel/:username\" user={user}  component={ProjectList}/> */}\n              <Route\n                exact\n                path=\"/panel/:username\"\n                render={match => (\n                  <ProjectList\n                    {...match}\n                    setPath={this.setPath}\n                    setUser={this.setUser}\n                  />\n                )}\n              />\n\n              <PrivateRoute\n                exact\n                path=\"/project/new\"\n                user={user}\n                component={NewProject}\n                toggleMenu={this.toggleMenu} \n                menuIsOpen={menuIsOpen}\n                />\n              <PrivateRoute\n                exact\n                path=\"/project/:path/edit\"\n                user={user}\n                activeProject={activeProject}\n                title={activeProject.title}\n                toggleMenu={this.toggleMenu} \n                menuIsOpen={menuIsOpen}\n                component={EditProject}\n                />\n\n              <PrivateRoute\n                exact\n                path=\"/project/:path/edit/colorPalette\"\n                user={user}\n                toggleMenu={this.toggleMenu} \n                menuIsOpen={menuIsOpen}\n                component={ColorPalette}\n                />\n              <PrivateRoute\n                exact\n                path=\"/project/:path/edit/colorPalette/new/:colorId?\"\n                user={user}\n                toggleMenu={this.toggleMenu} \n                menuIsOpen={menuIsOpen}\n                component={NewColor}\n                />\n\n              <PrivateRoute\n                exact\n                path=\"/project/:path/edit/typeset\"\n                user={user}\n                toggleMenu={this.toggleMenu} \n                menuIsOpen={menuIsOpen}\n                component={TypeSet}\n                />\n              <PrivateRoute\n                exact\n                path=\"/project/:path/edit/typeset/new/:source?\"\n                user={user}\n                component={NewType}\n                toggleMenu={this.toggleMenu} \n                menuIsOpen={menuIsOpen}\n                />\n\n              <PrivateRoute\n                exact\n                path=\"/project/:path/edit/assets\"\n                user={user}\n                component={Assets}\n                toggleMenu={this.toggleMenu} \n                menuIsOpen={menuIsOpen}\n                />\n\n              <PrivateRoute\n                exact\n                path=\"/project/:path/edit/textStyles\"\n                user={user}\n                component={TextStyles}\n                toggleMenu={this.toggleMenu} \n                menuIsOpen={menuIsOpen}\n                />\n              <PrivateRoute\n                exact\n                path=\"/project/:path/edit/textStyles/new/:styleId?\"\n                user={user}\n                component={NewTextStyle}\n                toggleMenu={this.toggleMenu} \n                menuIsOpen={menuIsOpen}\n                />\n            </Switch>\n          )}\n\n          {!user && (\n            <Switch>\n              <Route\n                exact\n                path=\"/login\"\n                render={match => <Login {...match} setUser={this.setUser} />}\n              />\n              <Route\n                exact\n                path=\"/signup\"\n                render={match => <Signup {...match} setUser={this.setUser} />}\n              />\n              <Route exact path=\"/\" component={LandingPage} />\n            </Switch>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom'\n\nReactDOM.render(\n    <Router><App/></Router>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}